; Listing generated by Microsoft (R) Optimizing Compiler Version 19.35.32217.1 

	TITLE	C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\Debug\NewBoxesView.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?displayMode@@3W4DISPLAY_MODE@@A		; displayMode
PUBLIC	?windowHandle@@3PAUHWND__@@A			; windowHandle
PUBLIC	?pViewWindow@@3PAVCNewBoxesView@@A		; pViewWindow
_BSS	SEGMENT
?windowHandle@@3PAUHWND__@@A DD 01H DUP (?)		; windowHandle
?pViewWindow@@3PAVCNewBoxesView@@A DD 01H DUP (?)	; pViewWindow
_BSS	ENDS
CONST	SEGMENT
$SG74042 DB	'atlTraceException', 00H
$SG226983 DB	00H
	ORG $+1
$SG74238 DB	'atlTraceString', 00H
	ORG $+1
$SG226497 DB	'CNewBoxesView', 00H
	ORG $+2
$SG226837 DB	'Unknown Display Mode', 00H
	ORG $+3
$SG226852 DB	'Unknown Display Mode', 00H
	ORG $+3
$SG226861 DB	0c4H, 0faH, 0b5H, 0c4H, 0b5H, 0c3H, 0b7H, 0d6H, 0a3H, 0baH
	DB	'%3d', 00H
	ORG $+2
$SG226862 DB	0b5H, 0e7H, 0c4H, 0d4H, 0b5H, 0c3H, 0b7H, 0d6H, 0a3H, 0baH
	DB	'%3d', 00H
	ORG $+2
$SG226863 DB	0d2H, 0d1H, 0d7H, 0dfH, 0b2H, 0bdH, 0caH, 0fdH, 0a3H, 0baH
	DB	'%3d', 00H
	ORG $+2
$SG226979 DB	'Cannot open test file = ', 00H
	ORG $+3
$SG226981 DB	'No valid position found', 00H
$SG226984 DB	0aH, 00H
CONST	ENDS
_DATA	SEGMENT
?displayMode@@3W4DISPLAY_MODE@@A DD 01H			; displayMode
_DATA	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	___local_stdio_printf_options
PUBLIC	__vswprintf_s_l
PUBLIC	_swprintf_s
PUBLIC	?AfxAssertFailedLine@@YGHPBDH@Z			; AfxAssertFailedLine
PUBLIC	??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
PUBLIC	??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
PUBLIC	?RegisterCategory@CTrace@ATL@@SAXPBDI@Z		; ATL::CTrace::RegisterCategory
PUBLIC	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z ; ATL::operator+
PUBLIC	??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
PUBLIC	??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
PUBLIC	??0VECTOR@@QAE@XZ				; VECTOR::VECTOR
PUBLIC	??0VECTOR@@QAE@HH@Z				; VECTOR::VECTOR
PUBLIC	??4VECTOR@@QAEAAV0@ABUtagPOINT@@@Z		; VECTOR::operator=
PUBLIC	??HVECTOR@@QAE?AV0@ABV0@@Z			; VECTOR::operator+
PUBLIC	??DVECTOR@@QAE?AV0@ABV0@@Z			; VECTOR::operator*
PUBLIC	?Width@DOTS_AND_BOXES@@QBEHXZ			; DOTS_AND_BOXES::Width
PUBLIC	?Height@DOTS_AND_BOXES@@QBEHXZ			; DOTS_AND_BOXES::Height
PUBLIC	?InvalidateView@@YAXXZ				; InvalidateView
PUBLIC	?GameSize@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ	; CNewBoxesDoc::GameSize
PUBLIC	?DotSpacing@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ	; CNewBoxesDoc::DotSpacing
PUBLIC	?ScreenOffset@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ	; CNewBoxesDoc::ScreenOffset
PUBLIC	?DotSize@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ	; CNewBoxesDoc::DotSize
PUBLIC	?HumanScoreLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ; CNewBoxesDoc::HumanScoreLocation
PUBLIC	?ComputerScoreLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ; CNewBoxesDoc::ComputerScoreLocation
PUBLIC	?StatusTextLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ; CNewBoxesDoc::StatusTextLocation
PUBLIC	?MoveCountLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ; CNewBoxesDoc::MoveCountLocation
PUBLIC	?BackgroundColor@CNewBoxesDoc@@QAEKXZ		; CNewBoxesDoc::BackgroundColor
PUBLIC	?DotColor@CNewBoxesDoc@@QAEKXZ			; CNewBoxesDoc::DotColor
PUBLIC	?HumanLineColor@CNewBoxesDoc@@QAEKXZ		; CNewBoxesDoc::HumanLineColor
PUBLIC	?ComputerLineColor@CNewBoxesDoc@@QAEKXZ		; CNewBoxesDoc::ComputerLineColor
PUBLIC	?HumanBoxColor@CNewBoxesDoc@@QAEKXZ		; CNewBoxesDoc::HumanBoxColor
PUBLIC	?ComputerBoxColor@CNewBoxesDoc@@QAEKXZ		; CNewBoxesDoc::ComputerBoxColor
PUBLIC	?DotPenWidth@CNewBoxesDoc@@QAEHXZ		; CNewBoxesDoc::DotPenWidth
PUBLIC	?LinePenWidth@CNewBoxesDoc@@QAEHXZ		; CNewBoxesDoc::LinePenWidth
PUBLIC	?ComputeLoopWeights@CNewBoxesDoc@@QAE?AUtagPOINT@@H@Z ; CNewBoxesDoc::ComputeLoopWeights
PUBLIC	?ComputeDivideWeights@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ; CNewBoxesDoc::ComputeDivideWeights
PUBLIC	??0CNewBoxesView@@IAE@XZ			; CNewBoxesView::CNewBoxesView
PUBLIC	?_GetBaseClass@CNewBoxesView@@KGPAUCRuntimeClass@@XZ ; CNewBoxesView::_GetBaseClass
PUBLIC	?GetThisClass@CNewBoxesView@@SGPAUCRuntimeClass@@XZ ; CNewBoxesView::GetThisClass
PUBLIC	?GetRuntimeClass@CNewBoxesView@@UBEPAUCRuntimeClass@@XZ ; CNewBoxesView::GetRuntimeClass
PUBLIC	?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ	; CNewBoxesView::CreateObject
PUBLIC	?GetDocument@CNewBoxesView@@QAEPAVCNewBoxesDoc@@XZ ; CNewBoxesView::GetDocument
PUBLIC	?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z		; CNewBoxesView::OnDraw
PUBLIC	?PreCreateWindow@CNewBoxesView@@UAEHAAUtagCREATESTRUCTA@@@Z ; CNewBoxesView::PreCreateWindow
PUBLIC	?OnInitialUpdate@CNewBoxesView@@UAEXXZ		; CNewBoxesView::OnInitialUpdate
PUBLIC	?OnPreparePrinting@CNewBoxesView@@MAEHPAUCPrintInfo@@@Z ; CNewBoxesView::OnPreparePrinting
PUBLIC	?OnBeginPrinting@CNewBoxesView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z ; CNewBoxesView::OnBeginPrinting
PUBLIC	?OnEndPrinting@CNewBoxesView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z ; CNewBoxesView::OnEndPrinting
PUBLIC	??1CNewBoxesView@@UAE@XZ			; CNewBoxesView::~CNewBoxesView
PUBLIC	?OnWM_ThreadCompletion@CNewBoxesView@@UAEXXZ	; CNewBoxesView::OnWM_ThreadCompletion
PUBLIC	?AssertValid@CNewBoxesView@@UBEXXZ		; CNewBoxesView::AssertValid
PUBLIC	?Dump@CNewBoxesView@@UBEXAAVCDumpContext@@@Z	; CNewBoxesView::Dump
PUBLIC	?OnToption@CNewBoxesView@@QAEXXZ		; CNewBoxesView::OnToption
PUBLIC	?OnLButtonDown@CNewBoxesView@@IAEXIVCPoint@@@Z	; CNewBoxesView::OnLButtonDown
PUBLIC	?OnEnterPosition@CNewBoxesView@@IAEXXZ		; CNewBoxesView::OnEnterPosition
PUBLIC	?OnChar@CNewBoxesView@@IAEXIII@Z		; CNewBoxesView::OnChar
PUBLIC	?OnLButtonDblClk@CNewBoxesView@@IAEXIVCPoint@@@Z ; CNewBoxesView::OnLButtonDblClk
PUBLIC	?OnComputerMove@CNewBoxesView@@IAEXXZ		; CNewBoxesView::OnComputerMove
PUBLIC	?OnTimer@CNewBoxesView@@IAEXI@Z			; CNewBoxesView::OnTimer
PUBLIC	?OnUpdateComputerMove@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ; CNewBoxesView::OnUpdateComputerMove
PUBLIC	?OnUpdateEnterPosition@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ; CNewBoxesView::OnUpdateEnterPosition
PUBLIC	?OnUpdateUnDoTurn@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ; CNewBoxesView::OnUpdateUnDoTurn
PUBLIC	?OnUnDoTurn@CNewBoxesView@@IAEXXZ		; CNewBoxesView::OnUnDoTurn
PUBLIC	?OnUpdateReDoTurn@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ; CNewBoxesView::OnUpdateReDoTurn
PUBLIC	?OnReDoTurn@CNewBoxesView@@IAEXXZ		; CNewBoxesView::OnReDoTurn
PUBLIC	?OnTestCreation@CNewBoxesView@@IAEXXZ		; CNewBoxesView::OnTestCreation
PUBLIC	?OnUpdateTestCreation@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ; CNewBoxesView::OnUpdateTestCreation
PUBLIC	?OnOptions@CNewBoxesView@@IAEXXZ		; CNewBoxesView::OnOptions
PUBLIC	?OnUpdateOptions@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ; CNewBoxesView::OnUpdateOptions
PUBLIC	?OnStatistics@CNewBoxesView@@IAEXXZ		; CNewBoxesView::OnStatistics
PUBLIC	?OnNimval@CNewBoxesView@@IAEXXZ			; CNewBoxesView::OnNimval
PUBLIC	?OnUpdateNimval@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ; CNewBoxesView::OnUpdateNimval
PUBLIC	?OnPlayGame@CNewBoxesView@@IAEXXZ		; CNewBoxesView::OnPlayGame
PUBLIC	?OnUpdatePlayGame@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ; CNewBoxesView::OnUpdatePlayGame
PUBLIC	?OnGameMode@CNewBoxesView@@IAEXXZ		; CNewBoxesView::OnGameMode
PUBLIC	?OnUpdateGameMode@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ; CNewBoxesView::OnUpdateGameMode
PUBLIC	?OnLoopWeights@CNewBoxesView@@IAEXXZ		; CNewBoxesView::OnLoopWeights
PUBLIC	?OnUpdateLoopWeights@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ; CNewBoxesView::OnUpdateLoopWeights
PUBLIC	?OnDivide@CNewBoxesView@@IAEXXZ			; CNewBoxesView::OnDivide
PUBLIC	?OnUpdateDivide@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ; CNewBoxesView::OnUpdateDivide
PUBLIC	?GetThisMessageMap@CNewBoxesView@@KGPBUAFX_MSGMAP@@XZ ; CNewBoxesView::GetThisMessageMap
PUBLIC	?GetMessageMap@CNewBoxesView@@MBEPBUAFX_MSGMAP@@XZ ; CNewBoxesView::GetMessageMap
PUBLIC	??_GCNewBoxesView@@UAEPAXI@Z			; CNewBoxesView::`scalar deleting destructor'
PUBLIC	??1TestCreation@@UAE@XZ				; TestCreation::~TestCreation
PUBLIC	??1OptionsDialog@@UAE@XZ			; OptionsDialog::~OptionsDialog
PUBLIC	??1StatisticsDialog@@UAE@XZ			; StatisticsDialog::~StatisticsDialog
PUBLIC	??_9CNewBoxesView@@$BBLM@AE			; CNewBoxesView::`vcall'{444}'
PUBLIC	?Weight2Color@@YAKHUtagPOINT@@@Z		; Weight2Color
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@		; `string'
PUBLIC	?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
PUBLIC	?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
PUBLIC	?m_nLastCategory@CTrace@ATL@@1IA		; ATL::CTrace::m_nLastCategory
PUBLIC	?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A	; ATL::CTrace::m_nMap
PUBLIC	??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@		; `string'
PUBLIC	??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ ; `string'
PUBLIC	??_C@_1LM@KONDCONO@?$AAG?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ ; `string'
PUBLIC	??_R1A@?0A@EA@CObject@@8			; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCObject@@@8				; CObject `RTTI Type Descriptor'
PUBLIC	??_R3CObject@@8					; CObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CObject@@8					; CObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWnd@@8				; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCWnd@@@8				; CWnd `RTTI Type Descriptor'
PUBLIC	??_R3CWnd@@8					; CWnd::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWnd@@8					; CWnd::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CCmdTarget@@8			; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCmdTarget@@@8				; CCmdTarget `RTTI Type Descriptor'
PUBLIC	??_R3CCmdTarget@@8				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCmdTarget@@8				; CCmdTarget::`RTTI Base Class Array'
PUBLIC	?classCNewBoxesView@CNewBoxesView@@2UCRuntimeClass@@B ; CNewBoxesView::classCNewBoxesView
PUBLIC	??_7CNewBoxesView@@6B@				; CNewBoxesView::`vftable'
PUBLIC	??_R4CNewBoxesView@@6B@				; CNewBoxesView::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNewBoxesView@@@8			; CNewBoxesView `RTTI Type Descriptor'
PUBLIC	??_R3CNewBoxesView@@8				; CNewBoxesView::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNewBoxesView@@8				; CNewBoxesView::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNewBoxesView@@8			; CNewBoxesView::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CView@@8				; CView::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCView@@@8				; CView `RTTI Type Descriptor'
PUBLIC	??_R3CView@@8					; CView::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CView@@8					; CView::`RTTI Base Class Array'
EXTRN	?__global_delete@@YAXPAXI@Z:PROC		; __global_delete
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp____stdio_common_vswprintf_s:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z:PROC ; AfxAssertValidObject
EXTRN	??3CObject@@SGXPAX@Z:PROC			; CObject::operator delete
EXTRN	??2CObject@@SGPAXIPBDH@Z:PROC			; CObject::operator new
EXTRN	??3CObject@@SGXPAXPBDH@Z:PROC			; CObject::operator delete
EXTRN	?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z:PROC ; CObject::IsKindOf
EXTRN	?Serialize@CObject@@UAEXAAVCArchive@@@Z:PROC	; CObject::Serialize
EXTRN	__imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ:PROC
EXTRN	__imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ:PROC
EXTRN	__imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z:PROC
EXTRN	__imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:PROC
EXTRN	__imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ:PROC
EXTRN	__imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?GetManager@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ:PROC
EXTRN	__imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z:PROC
EXTRN	__imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ:PROC
EXTRN	??0CFile@@QAE@XZ:PROC				; CFile::CFile
EXTRN	?Open@CFile@@UAEHPBDIPAVCFileException@@@Z:PROC	; CFile::Open
EXTRN	?Close@CFile@@UAEXXZ:PROC			; CFile::Close
EXTRN	??1CFile@@UAE@XZ:PROC				; CFile::~CFile
EXTRN	??0CArchive@@QAE@PAVCFile@@IHPAX@Z:PROC		; CArchive::CArchive
EXTRN	??1CArchive@@QAE@XZ:PROC			; CArchive::~CArchive
EXTRN	?Close@CArchive@@QAEXXZ:PROC			; CArchive::Close
EXTRN	??BCGdiObject@@QBEPAXXZ:PROC			; CGdiObject::operator void *
EXTRN	??0CPen@@QAE@XZ:PROC				; CPen::CPen
EXTRN	?CreatePen@CPen@@QAEHHHK@Z:PROC			; CPen::CreatePen
EXTRN	??1CPen@@UAE@XZ:PROC				; CPen::~CPen
EXTRN	?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z:PROC	; CDC::SelectObject
EXTRN	?MoveTo@CDC@@QAE?AVCPoint@@UtagPOINT@@@Z:PROC	; CDC::MoveTo
EXTRN	?LineTo@CDC@@QAEHUtagPOINT@@@Z:PROC		; CDC::LineTo
EXTRN	?Ellipse@CDC@@QAEHPBUtagRECT@@@Z:PROC		; CDC::Ellipse
EXTRN	?TextOutA@CDC@@QAEHHHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z:PROC ; CDC::TextOutA
EXTRN	?FillSolidRect@CDC@@QAEXHHHHK@Z:PROC		; CDC::FillSolidRect
EXTRN	?SelectObject@CDC@@QAEPAXPAX@Z:PROC		; CDC::SelectObject
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:PROC	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:PROC ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:PROC	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:PROC ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:PROC ; CCmdTarget::GetTypeLib
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:PROC ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:PROC ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:PROC ; CCmdTarget::GetConnectionMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:PROC ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:PROC	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:PROC ; CCmdTarget::GetInterfaceHook
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:PROC ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:PROC ; CCmdTarget::GetConnectionHook
EXTRN	?PreSubclassWindow@CWnd@@UAEXXZ:PROC		; CWnd::PreSubclassWindow
EXTRN	?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z:PROC ; CWnd::Create
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z:PROC ; CWnd::CreateEx
EXTRN	?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z:PROC ; CWnd::CreateEx
EXTRN	?DestroyWindow@CWnd@@UAEHXZ:PROC		; CWnd::DestroyWindow
EXTRN	?PostMessageA@CWnd@@QAEHIIJ@Z:PROC		; CWnd::PostMessageA
EXTRN	?GetMenu@CWnd@@UBEPAVCMenu@@XZ:PROC		; CWnd::GetMenu
EXTRN	?SetMenu@CWnd@@UAEHPAVCMenu@@@Z:PROC		; CWnd::SetMenu
EXTRN	?Invalidate@CWnd@@QAEXH@Z:PROC			; CWnd::Invalidate
EXTRN	?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z:PROC ; CWnd::SetTimer
EXTRN	?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z:PROC ; CWnd::OnToolHitTest
EXTRN	?WinHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::WinHelpA
EXTRN	?HtmlHelpA@CWnd@@UAEXKI@Z:PROC			; CWnd::HtmlHelpA
EXTRN	?WinHelpInternal@CWnd@@UAEXKI@Z:PROC		; CWnd::WinHelpInternal
EXTRN	?ContinueModal@CWnd@@UAEHXZ:PROC		; CWnd::ContinueModal
EXTRN	?EndModalLoop@CWnd@@UAEXH@Z:PROC		; CWnd::EndModalLoop
EXTRN	?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z:PROC ; CWnd::OnDrawIconicThumbnailOrLivePreview
EXTRN	?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ:PROC ; CWnd::GetInterfaceMap
EXTRN	?EnsureStdObj@CWnd@@UAEJXZ:PROC			; CWnd::EnsureStdObj
EXTRN	?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z:PROC ; CWnd::get_accParent
EXTRN	?get_accChildCount@CWnd@@UAEJPAJ@Z:PROC		; CWnd::get_accChildCount
EXTRN	?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z:PROC ; CWnd::get_accChild
EXTRN	?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accName
EXTRN	?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accValue
EXTRN	?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDescription
EXTRN	?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accRole
EXTRN	?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::get_accState
EXTRN	?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accHelp
EXTRN	?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z:PROC ; CWnd::get_accHelpTopic
EXTRN	?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accKeyboardShortcut
EXTRN	?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC	; CWnd::get_accFocus
EXTRN	?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z:PROC ; CWnd::get_accSelection
EXTRN	?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z:PROC ; CWnd::get_accDefaultAction
EXTRN	?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z:PROC	; CWnd::accSelect
EXTRN	?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z:PROC ; CWnd::accLocation
EXTRN	?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z:PROC ; CWnd::accNavigate
EXTRN	?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z:PROC	; CWnd::accHitTest
EXTRN	?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z:PROC ; CWnd::accDoDefaultAction
EXTRN	?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC	; CWnd::put_accName
EXTRN	?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z:PROC ; CWnd::put_accValue
EXTRN	?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z:PROC ; CWnd::SetProxy
EXTRN	?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z:PROC	; CWnd::CreateAccessibleProxy
EXTRN	?OnCommand@CWnd@@MAEHIJ@Z:PROC			; CWnd::OnCommand
EXTRN	?OnNotify@CWnd@@MAEHIJPAJ@Z:PROC		; CWnd::OnNotify
EXTRN	?OnChar@CWnd@@IAEXIII@Z:PROC			; CWnd::OnChar
EXTRN	?OnLButtonDblClk@CWnd@@IAEXIVCPoint@@@Z:PROC	; CWnd::OnLButtonDblClk
EXTRN	?OnLButtonDown@CWnd@@IAEXIVCPoint@@@Z:PROC	; CWnd::OnLButtonDown
EXTRN	?OnTimer@CWnd@@IAEXI@Z:PROC			; CWnd::OnTimer
EXTRN	?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ:PROC ; CWnd::GetSuperWndProcAddr
EXTRN	?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z:PROC ; CWnd::DoDataExchange
EXTRN	?BeginModalState@CWnd@@UAEXXZ:PROC		; CWnd::BeginModalState
EXTRN	?EndModalState@CWnd@@UAEXXZ:PROC		; CWnd::EndModalState
EXTRN	?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z:PROC ; CWnd::PreTranslateMessage
EXTRN	?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z:PROC ; CWnd::OnAmbientProperty
EXTRN	?WindowProc@CWnd@@MAEJIIJ@Z:PROC		; CWnd::WindowProc
EXTRN	?OnWndMsg@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnWndMsg
EXTRN	?DefWindowProcA@CWnd@@MAEJIIJ@Z:PROC		; CWnd::DefWindowProcA
EXTRN	?OnChildNotify@CWnd@@MAEHIIJPAJ@Z:PROC		; CWnd::OnChildNotify
EXTRN	?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInputs
EXTRN	?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z:PROC ; CWnd::OnTouchInput
EXTRN	?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z:PROC	; CWnd::GetGestureStatus
EXTRN	?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z:PROC	; CWnd::OnGestureZoom
EXTRN	?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z:PROC	; CWnd::OnGesturePan
EXTRN	?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z:PROC	; CWnd::OnGestureRotate
EXTRN	?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z:PROC ; CWnd::OnGestureTwoFingerTap
EXTRN	?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z:PROC ; CWnd::OnGesturePressAndTap
EXTRN	?ResizeDynamicLayout@CWnd@@MAEXXZ:PROC		; CWnd::ResizeDynamicLayout
EXTRN	?CheckAutoCenter@CWnd@@UAEHXZ:PROC		; CWnd::CheckAutoCenter
EXTRN	?IsFrameWnd@CWnd@@UBEHXZ:PROC			; CWnd::IsFrameWnd
EXTRN	?OnFinalRelease@CWnd@@UAEXXZ:PROC		; CWnd::OnFinalRelease
EXTRN	?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z:PROC ; CWnd::CreateControlContainer
EXTRN	?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z:PROC ; CWnd::CreateControlSite
EXTRN	?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z:PROC ; CWnd::SetOccDialogInfo
EXTRN	?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ:PROC ; CWnd::GetOccDialogInfo
EXTRN	?DoModal@CDialog@@UAEHXZ:PROC			; CDialog::DoModal
EXTRN	??1CDialog@@UAE@XZ:PROC				; CDialog::~CDialog
EXTRN	?GetThisClass@CView@@SGPAUCRuntimeClass@@XZ:PROC ; CView::GetThisClass
EXTRN	??0CView@@IAE@XZ:PROC				; CView::CView
EXTRN	?DoPreparePrinting@CView@@QAEHPAUCPrintInfo@@@Z:PROC ; CView::DoPreparePrinting
EXTRN	?IsSelected@CView@@UBEHPBVCObject@@@Z:PROC	; CView::IsSelected
EXTRN	?OnScroll@CView@@UAEHIIH@Z:PROC			; CView::OnScroll
EXTRN	?OnScrollBy@CView@@UAEHVCSize@@H@Z:PROC		; CView::OnScrollBy
EXTRN	?OnDragEnter@CView@@UAEKPAVCOleDataObject@@KVCPoint@@@Z:PROC ; CView::OnDragEnter
EXTRN	?OnDragOver@CView@@UAEKPAVCOleDataObject@@KVCPoint@@@Z:PROC ; CView::OnDragOver
EXTRN	?OnDragLeave@CView@@UAEXXZ:PROC			; CView::OnDragLeave
EXTRN	?OnDrop@CView@@UAEHPAVCOleDataObject@@KVCPoint@@@Z:PROC ; CView::OnDrop
EXTRN	?OnDropEx@CView@@UAEKPAVCOleDataObject@@KKVCPoint@@@Z:PROC ; CView::OnDropEx
EXTRN	?OnDragScroll@CView@@UAEKKVCPoint@@@Z:PROC	; CView::OnDragScroll
EXTRN	?OnPrepareDC@CView@@UAEXPAVCDC@@PAUCPrintInfo@@@Z:PROC ; CView::OnPrepareDC
EXTRN	?OnInitialUpdate@CView@@UAEXXZ:PROC		; CView::OnInitialUpdate
EXTRN	?OnActivateView@CView@@MAEXHPAV1@0@Z:PROC	; CView::OnActivateView
EXTRN	?OnActivateFrame@CView@@MAEXIPAVCFrameWnd@@@Z:PROC ; CView::OnActivateFrame
EXTRN	?OnUpdate@CView@@MAEXPAV1@JPAVCObject@@@Z:PROC	; CView::OnUpdate
EXTRN	?OnPrint@CView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z:PROC ; CView::OnPrint
EXTRN	?OnEndPrintPreview@CView@@MAEXPAVCDC@@PAUCPrintInfo@@UtagPOINT@@PAVCPreviewView@@@Z:PROC ; CView::OnEndPrintPreview
EXTRN	??1CView@@UAE@XZ:PROC				; CView::~CView
EXTRN	?Dump@CView@@UBEXAAVCDumpContext@@@Z:PROC	; CView::Dump
EXTRN	?AssertValid@CView@@UBEXXZ:PROC			; CView::AssertValid
EXTRN	?CalcWindowRect@CView@@UAEXPAUtagRECT@@I@Z:PROC	; CView::CalcWindowRect
EXTRN	?GetScrollBarCtrl@CView@@UBEPAVCScrollBar@@H@Z:PROC ; CView::GetScrollBarCtrl
EXTRN	?OnCmdMsg@CView@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:PROC ; CView::OnCmdMsg
EXTRN	?PreCreateWindow@CView@@MAEHAAUtagCREATESTRUCTA@@@Z:PROC ; CView::PreCreateWindow
EXTRN	?PostNcDestroy@CView@@MAEXXZ:PROC		; CView::PostNcDestroy
EXTRN	?OnFilePrint@CView@@IAEXXZ:PROC			; CView::OnFilePrint
EXTRN	?OnFilePrintPreview@CView@@IAEXXZ:PROC		; CView::OnFilePrintPreview
EXTRN	?GetThisMessageMap@CView@@KGPBUAFX_MSGMAP@@XZ:PROC ; CView::GetThisMessageMap
EXTRN	?AfxGetMainWnd@@YGPAVCWnd@@XZ:PROC		; AfxGetMainWnd
EXTRN	?UpdateAllViews@CDocument@@QAEXPAVCView@@JPAVCObject@@@Z:PROC ; CDocument::UpdateAllViews
EXTRN	?die@@YAXPBD@Z:PROC				; die
EXTRN	?Information@@YAXPBD@Z:PROC			; Information
EXTRN	?ImplementationError@@YAXPBD@Z:PROC		; ImplementationError
EXTRN	?FindAvoids@DOTS_AND_BOXES@@QAEXXZ:PROC		; DOTS_AND_BOXES::FindAvoids
EXTRN	?ComputeDivideAndConquerWeights_3@DOTS_AND_BOXES@@QAEXXZ:PROC ; DOTS_AND_BOXES::ComputeDivideAndConquerWeights_3
EXTRN	?ComputeBreakUpLoopWeights@DOTS_AND_BOXES@@QAEXH@Z:PROC ; DOTS_AND_BOXES::ComputeBreakUpLoopWeights
EXTRN	?MinMaxLoopWeight@DOTS_AND_BOXES@@QBE?AUtagPOINT@@XZ:PROC ; DOTS_AND_BOXES::MinMaxLoopWeight
EXTRN	?MinMaxDivideWeight@DOTS_AND_BOXES@@QBE?AUtagPOINT@@XZ:PROC ; DOTS_AND_BOXES::MinMaxDivideWeight
EXTRN	?GetThisClass@CNewBoxesDoc@@SGPAUCRuntimeClass@@XZ:PROC ; CNewBoxesDoc::GetThisClass
EXTRN	?HorizontalLineType@CNewBoxesDoc@@QBE?AW4LINE_TYPE@@ABUtagPOINT@@@Z:PROC ; CNewBoxesDoc::HorizontalLineType
EXTRN	?VerticalLineType@CNewBoxesDoc@@QBE?AW4LINE_TYPE@@ABUtagPOINT@@@Z:PROC ; CNewBoxesDoc::VerticalLineType
EXTRN	?BoxOwner@CNewBoxesDoc@@QBE?AW4OWNER_TYPE@@ABUtagPOINT@@@Z:PROC ; CNewBoxesDoc::BoxOwner
EXTRN	?Score@CNewBoxesDoc@@QBE?AVVECTOR@@XZ:PROC	; CNewBoxesDoc::Score
EXTRN	?VerticalLoopWeight@CNewBoxesDoc@@QAEHUtagPOINT@@@Z:PROC ; CNewBoxesDoc::VerticalLoopWeight
EXTRN	?HorizontalLoopWeight@CNewBoxesDoc@@QAEHUtagPOINT@@@Z:PROC ; CNewBoxesDoc::HorizontalLoopWeight
EXTRN	?VerticalDivideWeight@CNewBoxesDoc@@QAEHUtagPOINT@@@Z:PROC ; CNewBoxesDoc::VerticalDivideWeight
EXTRN	?HorizontalDivideWeight@CNewBoxesDoc@@QAEHUtagPOINT@@@Z:PROC ; CNewBoxesDoc::HorizontalDivideWeight
EXTRN	??_ECNewBoxesView@@UAEPAXI@Z:PROC		; CNewBoxesView::`vector deleting destructor'
EXTRN	?ProcessManager@@YAXW4STATUS@@@Z:PROC		; ProcessManager
EXTRN	?CurrentProcess@@YAPAVPROCESS@@XZ:PROC		; CurrentProcess
EXTRN	??0TestCreation@@QAE@PAVCWnd@@@Z:PROC		; TestCreation::TestCreation
EXTRN	??0OptionsDialog@@QAE@PAVCWnd@@@Z:PROC		; OptionsDialog::OptionsDialog
EXTRN	??0StatisticsDialog@@QAE@PAVCWnd@@@Z:PROC	; StatisticsDialog::StatisticsDialog
EXTRN	?Test@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ:PROC ; Test
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?pDoc@@3PAVCNewBoxesDoc@@A:DWORD		; pDoc
EXTRN	?tOption@@3_NA:BYTE				; tOption
EXTRN	?testFile@@3V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A:DWORD ; testFile
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceException
_BSS	ENDS
;	COMDAT ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A
_BSS	SEGMENT
?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A DD 01H DUP (?) ; ATL::atlTraceString
_BSS	ENDS
;	COMDAT ?m_nLastCategory@CTrace@ATL@@1IA
_BSS	SEGMENT
?m_nLastCategory@CTrace@ATL@@1IA DD 01H DUP (?)		; ATL::CTrace::m_nLastCategory
_BSS	ENDS
;	COMDAT ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A
_BSS	SEGMENT
?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A DB 02080H DUP (?) ; ATL::CTrace::m_nMap
_BSS	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceException$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceException@ATL@@YAXXZ ; ATL::atlTraceException$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R2CView@@8
rdata$r	SEGMENT
??_R2CView@@8 DD FLAT:??_R1A@?0A@EA@CView@@8		; CView::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CView@@8
rdata$r	SEGMENT
??_R3CView@@8 DD 00H					; CView::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CView@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCView@@@8
data$rs	SEGMENT
??_R0?AVCView@@@8 DD FLAT:??_7type_info@@6B@		; CView `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCView@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CView@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CView@@8 DD FLAT:??_R0?AVCView@@@8	; CView::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CView@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CNewBoxesView@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNewBoxesView@@8 DD FLAT:??_R0?AVCNewBoxesView@@@8 ; CNewBoxesView::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNewBoxesView@@8
rdata$r	ENDS
;	COMDAT ??_R2CNewBoxesView@@8
rdata$r	SEGMENT
??_R2CNewBoxesView@@8 DD FLAT:??_R1A@?0A@EA@CNewBoxesView@@8 ; CNewBoxesView::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CView@@8
	DD	FLAT:??_R1A@?0A@EA@CWnd@@8
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CNewBoxesView@@8
rdata$r	SEGMENT
??_R3CNewBoxesView@@8 DD 00H				; CNewBoxesView::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2CNewBoxesView@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNewBoxesView@@@8
data$rs	SEGMENT
??_R0?AVCNewBoxesView@@@8 DD FLAT:??_7type_info@@6B@	; CNewBoxesView `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNewBoxesView@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CNewBoxesView@@6B@
rdata$r	SEGMENT
??_R4CNewBoxesView@@6B@ DD 00H				; CNewBoxesView::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNewBoxesView@@@8
	DD	FLAT:??_R3CNewBoxesView@@8
rdata$r	ENDS
;	COMDAT ?messageMap@?1??GetThisMessageMap@CNewBoxesView@@KGPBUAFX_MSGMAP@@XZ@4U3@B
CONST	SEGMENT
?messageMap@?1??GetThisMessageMap@CNewBoxesView@@KGPBUAFX_MSGMAP@@XZ@4U3@B DD FLAT:?GetThisMessageMap@CView@@KGPBUAFX_MSGMAP@@XZ ; `CNewBoxesView::GetThisMessageMap'::`2'::messageMap
	DD	FLAT:?_messageEntries@?1??GetThisMessageMap@CNewBoxesView@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	ENDS
;	COMDAT ?_messageEntries@?1??GetThisMessageMap@CNewBoxesView@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B
CONST	SEGMENT
?_messageEntries@?1??GetThisMessageMap@CNewBoxesView@@KGPBUAFX_MSGMAP@@XZ@4QBUAFX_MSGMAP_ENTRY@@B DD 0201H ; `CNewBoxesView::GetThisMessageMap'::`2'::_messageEntries
	DD	00H
	DD	00H
	DD	00H
	DD	036H
	DD	FLAT:?OnLButtonDown@CNewBoxesView@@IAEXIVCPoint@@@Z
	DD	0111H
	DD	00H
	DD	08003H
	DD	08003H
	DD	03aH
	DD	FLAT:?OnEnterPosition@CNewBoxesView@@IAEXXZ
	DD	0102H
	DD	00H
	DD	00H
	DD	00H
	DD	019H
	DD	FLAT:?OnChar@CNewBoxesView@@IAEXIII@Z
	DD	0203H
	DD	00H
	DD	00H
	DD	00H
	DD	036H
	DD	FLAT:?OnLButtonDblClk@CNewBoxesView@@IAEXIVCPoint@@@Z
	DD	0111H
	DD	00H
	DD	08004H
	DD	08004H
	DD	03aH
	DD	FLAT:?OnComputerMove@CNewBoxesView@@IAEXXZ
	DD	0113H
	DD	00H
	DD	00H
	DD	00H
	DD	015H
	DD	FLAT:?OnTimer@CNewBoxesView@@IAEXI@Z
	DD	0111H
	DD	0ffffffffH
	DD	08004H
	DD	08004H
	DD	042H
	DD	FLAT:?OnUpdateComputerMove@CNewBoxesView@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08003H
	DD	08003H
	DD	042H
	DD	FLAT:?OnUpdateEnterPosition@CNewBoxesView@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	08006H
	DD	08006H
	DD	042H
	DD	FLAT:?OnUpdateUnDoTurn@CNewBoxesView@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08006H
	DD	08006H
	DD	03aH
	DD	FLAT:?OnUnDoTurn@CNewBoxesView@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08007H
	DD	08007H
	DD	042H
	DD	FLAT:?OnUpdateReDoTurn@CNewBoxesView@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08007H
	DD	08007H
	DD	03aH
	DD	FLAT:?OnReDoTurn@CNewBoxesView@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08008H
	DD	08008H
	DD	03aH
	DD	FLAT:?OnTestCreation@CNewBoxesView@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08008H
	DD	08008H
	DD	042H
	DD	FLAT:?OnUpdateTestCreation@CNewBoxesView@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08009H
	DD	08009H
	DD	03aH
	DD	FLAT:?OnOptions@CNewBoxesView@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08009H
	DD	08009H
	DD	042H
	DD	FLAT:?OnUpdateOptions@CNewBoxesView@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0800aH
	DD	0800aH
	DD	03aH
	DD	FLAT:?OnStatistics@CNewBoxesView@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0800bH
	DD	0800bH
	DD	03aH
	DD	FLAT:?OnNimval@CNewBoxesView@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0800bH
	DD	0800bH
	DD	042H
	DD	FLAT:?OnUpdateNimval@CNewBoxesView@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0800cH
	DD	0800cH
	DD	03aH
	DD	FLAT:?OnPlayGame@CNewBoxesView@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0800cH
	DD	0800cH
	DD	042H
	DD	FLAT:?OnUpdatePlayGame@CNewBoxesView@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0800eH
	DD	0800eH
	DD	03aH
	DD	FLAT:?OnGameMode@CNewBoxesView@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0800eH
	DD	0800eH
	DD	042H
	DD	FLAT:?OnUpdateGameMode@CNewBoxesView@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0800fH
	DD	0800fH
	DD	03aH
	DD	FLAT:?OnLoopWeights@CNewBoxesView@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	0800fH
	DD	0800fH
	DD	042H
	DD	FLAT:?OnUpdateLoopWeights@CNewBoxesView@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08010H
	DD	08010H
	DD	03aH
	DD	FLAT:?OnDivide@CNewBoxesView@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08010H
	DD	08010H
	DD	042H
	DD	FLAT:?OnUpdateDivide@CNewBoxesView@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	0401H
	DD	0401H
	DD	03aH
	DD	FLAT:??_9CNewBoxesView@@$BBLM@AE
	DD	0111H
	DD	00H
	DD	0e107H
	DD	0e107H
	DD	03aH
	DD	FLAT:?OnFilePrint@CView@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0e108H
	DD	0e108H
	DD	03aH
	DD	FLAT:?OnFilePrint@CView@@IAEXXZ
	DD	0111H
	DD	00H
	DD	0e109H
	DD	0e109H
	DD	03aH
	DD	FLAT:?OnFilePrintPreview@CView@@IAEXXZ
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
_DATA	SEGMENT
	ORG $+4
?THIS_FILE@@3PADA DB 'C:\Users\15485\Desktop\', 0b9H, 0a4H, 0b3H, 0ccH, 0d6H
	DB	0aeH, 0d0H, 0c7H, 0b5H, 0e3H, 0b8H, 0f1H, 0c6H, 0e5H, '\', 0b9H
	DB	0a4H, 0b3H, 0ccH, 0d6H, 0aeH, 0d0H, 0c7H, 0b5H, 0e3H, 0b8H, 0f1H
	DB	0c6H, 0e5H, '\NewBoxesView.cpp', 00H		; THIS_FILE
_DATA	ENDS
;	COMDAT ??_7CNewBoxesView@@6B@
CONST	SEGMENT
??_7CNewBoxesView@@6B@ DD FLAT:??_R4CNewBoxesView@@6B@	; CNewBoxesView::`vftable'
	DD	FLAT:?GetRuntimeClass@CNewBoxesView@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_ECNewBoxesView@@UAEPAXI@Z
	DD	FLAT:?Serialize@CObject@@UAEXAAVCArchive@@@Z
	DD	FLAT:?AssertValid@CNewBoxesView@@UBEXXZ
	DD	FLAT:?Dump@CNewBoxesView@@UBEXAAVCDumpContext@@@Z
	DD	FLAT:?OnCmdMsg@CView@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CWnd@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CNewBoxesView@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CWnd@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?PreSubclassWindow@CWnd@@UAEXXZ
	DD	FLAT:?Create@CWnd@@UAEHPBD0KABUtagRECT@@PAV1@IPAUCCreateContext@@@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KABUtagRECT@@PAV1@IPAX@Z
	DD	FLAT:?CreateEx@CWnd@@UAEHKPBD0KHHHHPAUHWND__@@PAUHMENU__@@PAX@Z
	DD	FLAT:?DestroyWindow@CWnd@@UAEHXZ
	DD	FLAT:?PreCreateWindow@CNewBoxesView@@UAEHAAUtagCREATESTRUCTA@@@Z
	DD	FLAT:?CalcWindowRect@CView@@UAEXPAUtagRECT@@I@Z
	DD	FLAT:?GetMenu@CWnd@@UBEPAVCMenu@@XZ
	DD	FLAT:?SetMenu@CWnd@@UAEHPAVCMenu@@@Z
	DD	FLAT:?OnToolHitTest@CWnd@@UBEHVCPoint@@PAUtagTOOLINFOA@@@Z
	DD	FLAT:?GetScrollBarCtrl@CView@@UBEPAVCScrollBar@@H@Z
	DD	FLAT:?WinHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?HtmlHelpA@CWnd@@UAEXKI@Z
	DD	FLAT:?WinHelpInternal@CWnd@@UAEXKI@Z
	DD	FLAT:?ContinueModal@CWnd@@UAEHXZ
	DD	FLAT:?EndModalLoop@CWnd@@UAEXH@Z
	DD	FLAT:?OnDrawIconicThumbnailOrLivePreview@CWnd@@UAEXAAVCDC@@VCRect@@VCSize@@HAAH@Z
	DD	FLAT:?EnsureStdObj@CWnd@@UAEJXZ
	DD	FLAT:?get_accParent@CWnd@@UAEJPAPAUIDispatch@@@Z
	DD	FLAT:?get_accChildCount@CWnd@@UAEJPAJ@Z
	DD	FLAT:?get_accChild@CWnd@@UAEJUtagVARIANT@@PAPAUIDispatch@@@Z
	DD	FLAT:?get_accName@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accValue@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accDescription@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accRole@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accState@CWnd@@UAEJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?get_accHelp@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accHelpTopic@CWnd@@UAEJPAPA_WUtagVARIANT@@PAJ@Z
	DD	FLAT:?get_accKeyboardShortcut@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?get_accFocus@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accSelection@CWnd@@UAEJPAUtagVARIANT@@@Z
	DD	FLAT:?get_accDefaultAction@CWnd@@UAEJUtagVARIANT@@PAPA_W@Z
	DD	FLAT:?accSelect@CWnd@@UAEJJUtagVARIANT@@@Z
	DD	FLAT:?accLocation@CWnd@@UAEJPAJ000UtagVARIANT@@@Z
	DD	FLAT:?accNavigate@CWnd@@UAEJJUtagVARIANT@@PAU2@@Z
	DD	FLAT:?accHitTest@CWnd@@UAEJJJPAUtagVARIANT@@@Z
	DD	FLAT:?accDoDefaultAction@CWnd@@UAEJUtagVARIANT@@@Z
	DD	FLAT:?put_accName@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?put_accValue@CWnd@@UAEJUtagVARIANT@@PA_W@Z
	DD	FLAT:?SetProxy@CWnd@@UAEJPAUIAccessibleProxy@@@Z
	DD	FLAT:?CreateAccessibleProxy@CWnd@@UAEJIJPAJ@Z
	DD	FLAT:?OnCommand@CWnd@@MAEHIJ@Z
	DD	FLAT:?OnNotify@CWnd@@MAEHIJPAJ@Z
	DD	FLAT:?GetSuperWndProcAddr@CWnd@@MAEPAP6GJPAUHWND__@@IIJ@ZXZ
	DD	FLAT:?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
	DD	FLAT:?BeginModalState@CWnd@@UAEXXZ
	DD	FLAT:?EndModalState@CWnd@@UAEXXZ
	DD	FLAT:?PreTranslateMessage@CWnd@@UAEHPAUtagMSG@@@Z
	DD	FLAT:?OnAmbientProperty@CWnd@@UAEHPAVCOleControlSite@@JPAUtagVARIANT@@@Z
	DD	FLAT:?WindowProc@CWnd@@MAEJIIJ@Z
	DD	FLAT:?OnWndMsg@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?DefWindowProcA@CWnd@@MAEJIIJ@Z
	DD	FLAT:?PostNcDestroy@CView@@MAEXXZ
	DD	FLAT:?OnChildNotify@CWnd@@MAEHIIJPAJ@Z
	DD	FLAT:?OnTouchInputs@CWnd@@MAEHIPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?OnTouchInput@CWnd@@MAEHVCPoint@@HHPAUtagTOUCHINPUT@@@Z
	DD	FLAT:?GetGestureStatus@CWnd@@MAEKVCPoint@@@Z
	DD	FLAT:?OnGestureZoom@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?OnGesturePan@CWnd@@MAEHVCPoint@@0@Z
	DD	FLAT:?OnGestureRotate@CWnd@@MAEHVCPoint@@N@Z
	DD	FLAT:?OnGestureTwoFingerTap@CWnd@@MAEHVCPoint@@@Z
	DD	FLAT:?OnGesturePressAndTap@CWnd@@MAEHVCPoint@@J@Z
	DD	FLAT:?ResizeDynamicLayout@CWnd@@MAEXXZ
	DD	FLAT:?CheckAutoCenter@CWnd@@UAEHXZ
	DD	FLAT:?IsFrameWnd@CWnd@@UBEHXZ
	DD	FLAT:?CreateControlContainer@CWnd@@MAEHPAPAVCOleControlContainer@@@Z
	DD	FLAT:?CreateControlSite@CWnd@@MAEHPAVCOleControlContainer@@PAPAVCOleControlSite@@IABU_GUID@@@Z
	DD	FLAT:?SetOccDialogInfo@CWnd@@MAEHPAU_AFX_OCC_DIALOG_INFO@@@Z
	DD	FLAT:?GetOccDialogInfo@CWnd@@MAEPAU_AFX_OCC_DIALOG_INFO@@XZ
	DD	FLAT:?IsSelected@CView@@UBEHPBVCObject@@@Z
	DD	FLAT:?OnScroll@CView@@UAEHIIH@Z
	DD	FLAT:?OnScrollBy@CView@@UAEHVCSize@@H@Z
	DD	FLAT:?OnDragEnter@CView@@UAEKPAVCOleDataObject@@KVCPoint@@@Z
	DD	FLAT:?OnDragOver@CView@@UAEKPAVCOleDataObject@@KVCPoint@@@Z
	DD	FLAT:?OnDragLeave@CView@@UAEXXZ
	DD	FLAT:?OnDrop@CView@@UAEHPAVCOleDataObject@@KVCPoint@@@Z
	DD	FLAT:?OnDropEx@CView@@UAEKPAVCOleDataObject@@KKVCPoint@@@Z
	DD	FLAT:?OnDragScroll@CView@@UAEKKVCPoint@@@Z
	DD	FLAT:?OnPrepareDC@CView@@UAEXPAVCDC@@PAUCPrintInfo@@@Z
	DD	FLAT:?OnInitialUpdate@CNewBoxesView@@UAEXXZ
	DD	FLAT:?OnActivateView@CView@@MAEXHPAV1@0@Z
	DD	FLAT:?OnActivateFrame@CView@@MAEXIPAVCFrameWnd@@@Z
	DD	FLAT:?OnUpdate@CView@@MAEXPAV1@JPAVCObject@@@Z
	DD	FLAT:?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z
	DD	FLAT:?OnPreparePrinting@CNewBoxesView@@MAEHPAUCPrintInfo@@@Z
	DD	FLAT:?OnBeginPrinting@CNewBoxesView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z
	DD	FLAT:?OnPrint@CView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z
	DD	FLAT:?OnEndPrinting@CNewBoxesView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z
	DD	FLAT:?OnEndPrintPreview@CView@@MAEXPAVCDC@@PAUCPrintInfo@@UtagPOINT@@PAVCPreviewView@@@Z
	DD	FLAT:?OnWM_ThreadCompletion@CNewBoxesView@@UAEXXZ
CONST	ENDS
;	COMDAT ?classCNewBoxesView@CNewBoxesView@@2UCRuntimeClass@@B
CONST	SEGMENT
?classCNewBoxesView@CNewBoxesView@@2UCRuntimeClass@@B DD FLAT:$SG226497 ; CNewBoxesView::classCNewBoxesView
	DD	088H
	DD	0ffffH
	DD	FLAT:?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ
	DD	FLAT:?_GetBaseClass@CNewBoxesView@@KGPAUCRuntimeClass@@XZ
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_R2CCmdTarget@@8
rdata$r	SEGMENT
??_R2CCmdTarget@@8 DD FLAT:??_R1A@?0A@EA@CCmdTarget@@8	; CCmdTarget::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CCmdTarget@@8
rdata$r	SEGMENT
??_R3CCmdTarget@@8 DD 00H				; CCmdTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCmdTarget@@@8
data$rs	SEGMENT
??_R0?AVCCmdTarget@@@8 DD FLAT:??_7type_info@@6B@	; CCmdTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCCmdTarget@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CCmdTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCmdTarget@@8 DD FLAT:??_R0?AVCCmdTarget@@@8 ; CCmdTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CCmdTarget@@8
rdata$r	ENDS
;	COMDAT ??_R2CWnd@@8
rdata$r	SEGMENT
??_R2CWnd@@8 DD	FLAT:??_R1A@?0A@EA@CWnd@@8		; CWnd::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CCmdTarget@@8
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CWnd@@8
rdata$r	SEGMENT
??_R3CWnd@@8 DD	00H					; CWnd::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWnd@@@8
data$rs	SEGMENT
??_R0?AVCWnd@@@8 DD FLAT:??_7type_info@@6B@		; CWnd `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWnd@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CWnd@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWnd@@8 DD FLAT:??_R0?AVCWnd@@@8		; CWnd::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWnd@@8
rdata$r	ENDS
;	COMDAT ??_R2CObject@@8
rdata$r	SEGMENT
??_R2CObject@@8 DD FLAT:??_R1A@?0A@EA@CObject@@8	; CObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CObject@@8
rdata$r	SEGMENT
??_R3CObject@@8 DD 00H					; CObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCObject@@@8
data$rs	SEGMENT
??_R0?AVCObject@@@8 DD FLAT:??_7type_info@@6B@		; CObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CObject@@8 DD FLAT:??_R0?AVCObject@@@8	; CObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_1LM@KONDCONO@?$AAG?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
CONST	SEGMENT
??_C@_1LM@KONDCONO@?$AAG?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@ DB 'G'
	DB	00H, ':', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r', 00H
	DB	'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H, 'V'
	DB	00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H
	DB	'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, '\'
	DB	00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H, 'C', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T', 00H
	DB	'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H, 'S'
	DB	00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.', 00H
	DB	'3', 00H, '5', 00H, '.', 00H, '3', 00H, '2', 00H, '2', 00H, '1'
	DB	00H, '5', 00H, '\', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'm', 00H
	DB	'f', 00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't', 00H
	DB	'l', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 'e', 00H, '.'
	DB	00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
CONST	SEGMENT
??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@ DB 'f'
	DB	00H, 'a', 00H, 'l', 00H, 's', 00H, 'e', 00H, ' ', 00H, '&', 00H
	DB	'&', 00H, ' ', 00H, '"', 00H, 'T', 00H, 'o', 00H, 'o', 00H, ' '
	DB	00H, 'm', 00H, 'a', 00H, 'n', 00H, 'y', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'o', 00H, 'r', 00H, 'i'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H
	DB	'i', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
CONST	SEGMENT
??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@ DB '%', 00H, 'h', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@ DB '%', 00H, 'l', 00H, 's', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?OnStatistics@CNewBoxesView@@IAEXXZ$0
	DD	019H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?OnOptions@CNewBoxesView@@IAEXXZ$0
	DD	019H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?OnTestCreation@CNewBoxesView@@IAEXXZ$0
	DD	019H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$0
	DD	09cH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__ehhandler$??1CNewBoxesView@@UAE@XZ
	DD	09H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ$0
	DD	01fH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$??0CNewBoxesView@@IAE@XZ$0
	DD	016H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$0
	DD	0b1H
	DD	0beH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z
	DD	034H
	DD	0f99H
voltbl	ENDS
xdata$x	SEGMENT
__unwindtable$?OnStatistics@CNewBoxesView@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnStatistics@CNewBoxesView@@IAEXXZ$0
__unwindtable$?OnOptions@CNewBoxesView@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnOptions@CNewBoxesView@@IAEXXZ$0
__unwindtable$?OnTestCreation@CNewBoxesView@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnTestCreation@CNewBoxesView@@IAEXXZ$0
__unwindtable$?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ$0
__unwindtable$??0CNewBoxesView@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNewBoxesView@@IAE@XZ$0
__ehfuncinfo$?OnStatistics@CNewBoxesView@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnStatistics@CNewBoxesView@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?OnOptions@CNewBoxesView@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnOptions@CNewBoxesView@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?OnTestCreation@CNewBoxesView@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnTestCreation@CNewBoxesView@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?OnToption@CNewBoxesView@@QAEXXZ DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?OnToption@CNewBoxesView@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1CNewBoxesView@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0CNewBoxesView@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CNewBoxesView@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?OnToption@CNewBoxesView@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$3
	DD	01H
	DD	FLAT:__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$5
	DD	04H
	DD	FLAT:__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$7
__unwindtable$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$7
	DD	06H
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$8
	DD	06H
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$9
	DD	06H
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$11
	DD	0aH
	DD	FLAT:__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$12
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	020H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z$0
__ehfuncinfo$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	020H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z$0
__ehfuncinfo$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	024H
	DW	0100H
voltbl	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?atlTraceString$initializer$@ATL@@3P6AXXZA DD FLAT:??__EatlTraceString@ATL@@YAXXZ ; ATL::atlTraceString$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_shift$ = -4						; size = 4
_weight$ = 8						; size = 4
_minMax$ = 12						; size = 8
?Weight2Color@@YAKHUtagPOINT@@@Z PROC			; Weight2Color

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 106  :   int shift;
; 107  :   if (weight==0) return RGB(255,255,255);

  00004	83 7d 08 00	 cmp	 DWORD PTR _weight$[ebp], 0
  00008	75 07		 jne	 SHORT $LN2@Weight2Col
  0000a	b8 ff ff ff 00	 mov	 eax, 16777215		; 00ffffffH
  0000f	eb 22		 jmp	 SHORT $LN1@Weight2Col
$LN2@Weight2Col:

; 108  :   shift = 16*(weight-minMax.x)/(1+minMax.y-minMax.x);

  00011	8b 45 08	 mov	 eax, DWORD PTR _weight$[ebp]
  00014	2b 45 0c	 sub	 eax, DWORD PTR _minMax$[ebp]
  00017	c1 e0 04	 shl	 eax, 4
  0001a	8b 4d 10	 mov	 ecx, DWORD PTR _minMax$[ebp+4]
  0001d	83 c1 01	 add	 ecx, 1
  00020	2b 4d 0c	 sub	 ecx, DWORD PTR _minMax$[ebp]
  00023	99		 cdq
  00024	f7 f9		 idiv	 ecx
  00026	89 45 fc	 mov	 DWORD PTR _shift$[ebp], eax

; 109  :   return RGB(0,0,255) >> shift;

  00029	b8 00 00 ff 00	 mov	 eax, 16711680		; 00ff0000H
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _shift$[ebp]
  00031	d3 e8		 shr	 eax, cl
$LN1@Weight2Col:

; 110  : }

  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?Weight2Color@@YAKHUtagPOINT@@@Z ENDP			; Weight2Color
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_9CNewBoxesView@@$BBLM@AE
_TEXT	SEGMENT
??_9CNewBoxesView@@$BBLM@AE PROC			; CNewBoxesView::`vcall'{444}', COMDAT
  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff a0 bc 01 00
	00		 jmp	 DWORD PTR [eax+444]
??_9CNewBoxesView@@$BBLM@AE ENDP			; CNewBoxesView::`vcall'{444}'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1StatisticsDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1StatisticsDialog@@UAE@XZ PROC			; StatisticsDialog::~StatisticsDialog, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1StatisticsDialog@@UAE@XZ ENDP			; StatisticsDialog::~StatisticsDialog
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1OptionsDialog@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1OptionsDialog@@UAE@XZ PROC				; OptionsDialog::~OptionsDialog, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1OptionsDialog@@UAE@XZ ENDP				; OptionsDialog::~OptionsDialog
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1TestCreation@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1TestCreation@@UAE@XZ PROC				; TestCreation::~TestCreation, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CDialog@@UAE@XZ	; CDialog::~CDialog
  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
??1TestCreation@@UAE@XZ ENDP				; TestCreation::~TestCreation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCNewBoxesView@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCNewBoxesView@@UAEPAXI@Z PROC			; CNewBoxesView::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??1CNewBoxesView@@UAE@XZ ; CNewBoxesView::~CNewBoxesView
  00016	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00019	83 e0 01	 and	 eax, 1
  0001c	74 24		 je	 SHORT $LN2@scalar
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR ___flags$[ebp]
  00021	83 e1 04	 and	 ecx, 4
  00024	75 0b		 jne	 SHORT $LN3@scalar
  00026	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ??3CObject@@SGXPAX@Z	; CObject::operator delete
  0002f	eb 11		 jmp	 SHORT $LN2@scalar
$LN3@scalar:
  00031	68 88 00 00 00	 push	 136			; 00000088H
  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?__global_delete@@YAXPAXI@Z ; __global_delete
  0003f	83 c4 08	 add	 esp, 8
$LN2@scalar:
  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	83 c4 04	 add	 esp, 4
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
??_GCNewBoxesView@@UAEPAXI@Z ENDP			; CNewBoxesView::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMessageMap@CNewBoxesView@@MBEPBUAFX_MSGMAP@@XZ PROC	; CNewBoxesView::GetMessageMap
; _this$ = ecx

; 38   : BEGIN_MESSAGE_MAP(CNewBoxesView, CView)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000e	e8 00 00 00 00	 call	 ?GetThisMessageMap@CNewBoxesView@@KGPBUAFX_MSGMAP@@XZ ; CNewBoxesView::GetThisMessageMap
  00013	83 c4 04	 add	 esp, 4
  00016	3b ec		 cmp	 ebp, esp
  00018	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?GetMessageMap@CNewBoxesView@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CNewBoxesView::GetMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
?GetThisMessageMap@CNewBoxesView@@KGPBUAFX_MSGMAP@@XZ PROC ; CNewBoxesView::GetThisMessageMap

; 38   : BEGIN_MESSAGE_MAP(CNewBoxesView, CView)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 39   : 	//{{AFX_MSG_MAP(CNewBoxesView)
; 40   : 	ON_WM_LBUTTONDOWN()
; 41   : 	ON_COMMAND(IDM_EnterPosition, OnEnterPosition)
; 42   : 	ON_WM_CHAR()
; 43   : 	ON_WM_LBUTTONDBLCLK()
; 44   : 	ON_COMMAND(IDM_ComputerMove, OnComputerMove)
; 45   : 	ON_WM_TIMER()
; 46   : 	ON_UPDATE_COMMAND_UI(IDM_ComputerMove, OnUpdateComputerMove)
; 47   : 	ON_UPDATE_COMMAND_UI(IDM_EnterPosition, OnUpdateEnterPosition)
; 48   : 	ON_UPDATE_COMMAND_UI(IDM_UnDoTurn, OnUpdateUnDoTurn)
; 49   : 	ON_COMMAND(IDM_UnDoTurn, OnUnDoTurn)
; 50   : 	ON_UPDATE_COMMAND_UI(IDM_ReDoTurn, OnUpdateReDoTurn)
; 51   : 	ON_COMMAND(IDM_ReDoTurn, OnReDoTurn)
; 52   : 	ON_COMMAND(IDM_TestCreation, OnTestCreation)
; 53   : 	ON_UPDATE_COMMAND_UI(IDM_TestCreation, OnUpdateTestCreation)
; 54   : 	ON_COMMAND(IDM_Options, OnOptions)
; 55   : 	ON_UPDATE_COMMAND_UI(IDM_Options, OnUpdateOptions)
; 56   : 	ON_COMMAND(IDC_Statistics, OnStatistics)
; 57   : 	ON_COMMAND(IDM_Nimval, OnNimval)
; 58   : 	ON_UPDATE_COMMAND_UI(IDM_Nimval, OnUpdateNimval)
; 59   : 	ON_COMMAND(IDM_PlayGame, OnPlayGame)
; 60   : 	ON_UPDATE_COMMAND_UI(IDM_PlayGame, OnUpdatePlayGame)
; 61   : 	ON_COMMAND(IDM_GameMode, OnGameMode)
; 62   : 	ON_UPDATE_COMMAND_UI(IDM_GameMode, OnUpdateGameMode)
; 63   : 	ON_COMMAND(IDM_LoopWeights, OnLoopWeights)
; 64   : 	ON_UPDATE_COMMAND_UI(IDM_LoopWeights, OnUpdateLoopWeights)
; 65   : 	ON_COMMAND(IDM_Divide, OnDivide)
; 66   : 	ON_UPDATE_COMMAND_UI(IDM_Divide, OnUpdateDivide)
; 67   : 	//}}AFX_MSG_MAP
; 68   : 	// Standard printing commands
; 69   :   ON_COMMAND(WM_THREADCOMPLETION, OnWM_ThreadCompletion)
; 70   : 	ON_COMMAND(ID_FILE_PRINT, CView::OnFilePrint)
; 71   : 	ON_COMMAND(ID_FILE_PRINT_DIRECT, CView::OnFilePrint)
; 72   : 	ON_COMMAND(ID_FILE_PRINT_PREVIEW, CView::OnFilePrintPreview)
; 73   : END_MESSAGE_MAP()

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?messageMap@?1??GetThisMessageMap@CNewBoxesView@@KGPBUAFX_MSGMAP@@XZ@4U3@B
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetThisMessageMap@CNewBoxesView@@KGPBUAFX_MSGMAP@@XZ ENDP ; CNewBoxesView::GetThisMessageMap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateDivide@CNewBoxesView@@IAEXPAVCCmdUI@@@Z PROC	; CNewBoxesView::OnUpdateDivide
; _this$ = ecx

; 661  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 662  : 	// TODO: Add your command update UI handler code here
; 663  :   pCmdUI->SetCheck((displayMode==DISPLAY_DIVIDE) ? 1 : 0);

  00018	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A, 3 ; displayMode
  0001f	75 09		 jne	 SHORT $LN3@OnUpdateDi
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@OnUpdateDi
$LN3@OnUpdateDi:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@OnUpdateDi:
  00031	8b f4		 mov	 esi, esp
  00033	8b 45 f8	 mov	 eax, DWORD PTR tv68[ebp]
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  0003a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  0003f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00042	ff d0		 call	 eax
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 664  : 	
; 665  : }

  0004b	5e		 pop	 esi
  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?OnUpdateDivide@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ENDP	; CNewBoxesView::OnUpdateDivide
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnDivide@CNewBoxesView@@IAEXXZ PROC			; CNewBoxesView::OnDivide
; _this$ = ecx

; 652  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 653  : 	// TODO: Add your command handler code here
; 654  : #ifdef DISPLAYINTERNALS
; 655  :   displayMode = DISPLAY_DIVIDE;	

  0000e	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A, 3 ; displayMode

; 656  : #endif
; 657  :   Invalidate();

  00018	6a 01		 push	 1
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?Invalidate@CWnd@@QAEXH@Z ; CWnd::Invalidate

; 658  : }

  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?OnDivide@CNewBoxesView@@IAEXXZ ENDP			; CNewBoxesView::OnDivide
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateLoopWeights@CNewBoxesView@@IAEXPAVCCmdUI@@@Z PROC ; CNewBoxesView::OnUpdateLoopWeights
; _this$ = ecx

; 645  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 646  : 	// TODO: Add your command update UI handler code here
; 647  :   pCmdUI->SetCheck((displayMode==DISPLAY_LOOP) ? 1 : 0);

  00018	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A, 2 ; displayMode
  0001f	75 09		 jne	 SHORT $LN3@OnUpdateLo
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@OnUpdateLo
$LN3@OnUpdateLo:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@OnUpdateLo:
  00031	8b f4		 mov	 esi, esp
  00033	8b 45 f8	 mov	 eax, DWORD PTR tv68[ebp]
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  0003a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  0003f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00042	ff d0		 call	 eax
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 648  : 	
; 649  : }

  0004b	5e		 pop	 esi
  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?OnUpdateLoopWeights@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ENDP ; CNewBoxesView::OnUpdateLoopWeights
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnLoopWeights@CNewBoxesView@@IAEXXZ PROC		; CNewBoxesView::OnLoopWeights
; _this$ = ecx

; 636  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 637  : 	// TODO: Add your command handler code here
; 638  : #ifdef DISPLAYINTERNALS
; 639  : 	displayMode = DISPLAY_LOOP;

  0000e	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A, 2 ; displayMode

; 640  : #endif
; 641  :   Invalidate();

  00018	6a 01		 push	 1
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?Invalidate@CWnd@@QAEXH@Z ; CWnd::Invalidate

; 642  : }

  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?OnLoopWeights@CNewBoxesView@@IAEXXZ ENDP		; CNewBoxesView::OnLoopWeights
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateGameMode@CNewBoxesView@@IAEXPAVCCmdUI@@@Z PROC	; CNewBoxesView::OnUpdateGameMode
; _this$ = ecx

; 630  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 631  : 	// TODO: Add your command update UI handler code here
; 632  :   pCmdUI->SetCheck((displayMode==DISPLAY_GAME) ? 1 : 0);

  00018	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A, 1 ; displayMode
  0001f	75 09		 jne	 SHORT $LN3@OnUpdateGa
  00021	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00028	eb 07		 jmp	 SHORT $LN4@OnUpdateGa
$LN3@OnUpdateGa:
  0002a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@OnUpdateGa:
  00031	8b f4		 mov	 esi, esp
  00033	8b 45 f8	 mov	 eax, DWORD PTR tv68[ebp]
  00036	50		 push	 eax
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  0003a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  0003f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00042	ff d0		 call	 eax
  00044	3b f4		 cmp	 esi, esp
  00046	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 633  : }

  0004b	5e		 pop	 esi
  0004c	83 c4 08	 add	 esp, 8
  0004f	3b ec		 cmp	 ebp, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
?OnUpdateGameMode@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ENDP	; CNewBoxesView::OnUpdateGameMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnGameMode@CNewBoxesView@@IAEXXZ PROC			; CNewBoxesView::OnGameMode
; _this$ = ecx

; 621  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 622  : 	// TODO: Add your command handler code here
; 623  : #ifdef DISPLAYINTERNALS
; 624  : 	displayMode = DISPLAY_GAME;

  0000e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A, 1 ; displayMode

; 625  : #endif
; 626  :   Invalidate();

  00018	6a 01		 push	 1
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?Invalidate@CWnd@@QAEXH@Z ; CWnd::Invalidate

; 627  : }

  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?OnGameMode@CNewBoxesView@@IAEXXZ ENDP			; CNewBoxesView::OnGameMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdatePlayGame@CNewBoxesView@@IAEXPAVCCmdUI@@@Z PROC	; CNewBoxesView::OnUpdatePlayGame
; _this$ = ecx

; 476  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 477  : 	// TODO: Add your command update UI handler code here
; 478  :   pCmdUI->Enable(CurrentProcess()->IsOK_PlayGame());	

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv69[ebp]
  0002a	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	0f b6 c8	 movzx	 ecx, al
  00039	8b f4		 mov	 esi, esp
  0003b	51		 push	 ecx
  0003c	8b 55 08	 mov	 edx, DWORD PTR _pCmdUI$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	ff d2		 call	 edx
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 479  : 	
; 480  : }

  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?OnUpdatePlayGame@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ENDP	; CNewBoxesView::OnUpdatePlayGame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?OnPlayGame@CNewBoxesView@@IAEXXZ PROC			; CNewBoxesView::OnPlayGame
; _this$ = ecx

; 612  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 613  : 	// TODO: Add your command handler code here
; 614  : 	// TODO: Add your command handler code here
; 615  :   ProcessManager(CurrentProcess()->OnPlayGame());

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  0002a	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  0003c	83 c4 04	 add	 esp, 4

; 616  : 	
; 617  : }

  0003f	5e		 pop	 esi
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?OnPlayGame@CNewBoxesView@@IAEXXZ ENDP			; CNewBoxesView::OnPlayGame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateNimval@CNewBoxesView@@IAEXPAVCCmdUI@@@Z PROC	; CNewBoxesView::OnUpdateNimval
; _this$ = ecx

; 605  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 606  : 	// TODO: Add your command update UI handler code here
; 607  :   pCmdUI->Enable(CurrentProcess()->IsOK_ComputeNimval());	

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv69[ebp]
  0002a	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	0f b6 c8	 movzx	 ecx, al
  00039	8b f4		 mov	 esi, esp
  0003b	51		 push	 ecx
  0003c	8b 55 08	 mov	 edx, DWORD PTR _pCmdUI$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	ff d2		 call	 edx
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 608  : 	
; 609  : }

  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?OnUpdateNimval@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ENDP	; CNewBoxesView::OnUpdateNimval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?OnNimval@CNewBoxesView@@IAEXXZ PROC			; CNewBoxesView::OnNimval
; _this$ = ecx

; 580  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 581  : 	// TODO: Add your command handler code here
; 582  :   ProcessManager(CurrentProcess()->OnComputeNimval());

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  0002a	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  0003c	83 c4 04	 add	 esp, 4

; 583  : //	NIMCON nimcon;
; 584  : //  CON con;
; 585  : //  CString msg;
; 586  : //  NIMHASHTABLE *origNimHashTable;
; 587  : //  int nimval;
; 588  : //  origNimHashTable = nimHashTable;
; 589  : //  if (nimHashTable == NULL)
; 590  : //  {
; 591  : //    nimHashTable = new NIMHASHTABLE;
; 592  : //  };
; 593  : //  con = pDoc->Game();
; 594  : //  nimval = nimcon.NimVal(&con);
; 595  : //  if (origNimHashTable == NULL)
; 596  : //  {
; 597  : //    delete nimHashTable;
; 598  : //    nimHashTable = NULL;
; 599  : //  };
; 600  : //  msg.Format("Nimval = %d", nimval);
; 601  : //  MessageBox(msg, "Result", MB_OK);4
; 602  : }

  0003f	5e		 pop	 esi
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?OnNimval@CNewBoxesView@@IAEXXZ ENDP			; CNewBoxesView::OnNimval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_dlg$ = -260						; size = 240
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnStatistics@CNewBoxesView@@IAEXXZ PROC		; CNewBoxesView::OnStatistics
; _this$ = ecx

; 573  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnStatistics@CNewBoxesView@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00017	57		 push	 edi
  00018	51		 push	 ecx
  00019	8d bd f8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-264]
  0001f	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	59		 pop	 ecx
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003d	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 574  : 	// TODO: Add your command handler code here
; 575  : 	StatisticsDialog dlg;

  00040	6a 00		 push	 0
  00042	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  00048	e8 00 00 00 00	 call	 ??0StatisticsDialog@@QAE@PAVCWnd@@@Z ; StatisticsDialog::StatisticsDialog
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 576  :   dlg.DoModal();

  00054	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  0005a	e8 00 00 00 00	 call	 ?DoModal@CDialog@@UAEHXZ ; CDialog::DoModal

; 577  : }

  0005f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00066	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  0006c	e8 00 00 00 00	 call	 ??1StatisticsDialog@@UAE@XZ
  00071	52		 push	 edx
  00072	8b cd		 mov	 ecx, ebp
  00074	50		 push	 eax
  00075	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@OnStatisti
  0007b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00080	58		 pop	 eax
  00081	5a		 pop	 edx
  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	5f		 pop	 edi
  0008e	81 c4 08 01 00
	00		 add	 esp, 264		; 00000108H
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
  0009f	90		 npad	 1
$LN7@OnStatisti:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN6@OnStatisti
$LN6@OnStatisti:
  000a8	fc fe ff ff	 DD	 -260			; fffffefcH
  000ac	f0 00 00 00	 DD	 240			; 000000f0H
  000b0	00 00 00 00	 DD	 $LN4@OnStatisti
$LN4@OnStatisti:
  000b4	64		 DB	 100			; 00000064H
  000b5	6c		 DB	 108			; 0000006cH
  000b6	67		 DB	 103			; 00000067H
  000b7	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnStatistics@CNewBoxesView@@IAEXXZ$0:
  00000	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1StatisticsDialog@@UAE@XZ
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$?OnStatistics@CNewBoxesView@@IAEXXZ:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a fc fe ff
	ff		 mov	 ecx, DWORD PTR [edx-260]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnStatistics@CNewBoxesView@@IAEXXZ
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnStatistics@CNewBoxesView@@IAEXXZ ENDP		; CNewBoxesView::OnStatistics
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateOptions@CNewBoxesView@@IAEXPAVCCmdUI@@@Z PROC	; CNewBoxesView::OnUpdateOptions
; _this$ = ecx

; 566  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 567  : 	// TODO: Add your command update UI handler code here
; 568  :   pCmdUI->Enable(CurrentProcess()->IsOK_Options());	

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv69[ebp]
  0002a	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	0f b6 c8	 movzx	 ecx, al
  00039	8b f4		 mov	 esi, esp
  0003b	51		 push	 ecx
  0003c	8b 55 08	 mov	 edx, DWORD PTR _pCmdUI$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	ff d2		 call	 edx
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 569  : 	
; 570  : }

  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?OnUpdateOptions@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ENDP	; CNewBoxesView::OnUpdateOptions
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_dlg$ = -196						; size = 176
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnOptions@CNewBoxesView@@IAEXXZ PROC			; CNewBoxesView::OnOptions
; _this$ = ecx

; 559  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnOptions@CNewBoxesView@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec bc 00 00
	00		 sub	 esp, 188		; 000000bcH
  00017	57		 push	 edi
  00018	51		 push	 ecx
  00019	8d bd 38 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-200]
  0001f	b9 2f 00 00 00	 mov	 ecx, 47			; 0000002fH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	59		 pop	 ecx
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003d	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 560  : 	// TODO: Add your command handler code here
; 561  : 	OptionsDialog dlg;

  00040	6a 00		 push	 0
  00042	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  00048	e8 00 00 00 00	 call	 ??0OptionsDialog@@QAE@PAVCWnd@@@Z ; OptionsDialog::OptionsDialog
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 562  :   dlg.DoModal();

  00054	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  0005a	e8 00 00 00 00	 call	 ?DoModal@CDialog@@UAEHXZ ; CDialog::DoModal

; 563  : }

  0005f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00066	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  0006c	e8 00 00 00 00	 call	 ??1OptionsDialog@@UAE@XZ
  00071	52		 push	 edx
  00072	8b cd		 mov	 ecx, ebp
  00074	50		 push	 eax
  00075	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@OnOptions
  0007b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00080	58		 pop	 eax
  00081	5a		 pop	 edx
  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	5f		 pop	 edi
  0008e	81 c4 c8 00 00
	00		 add	 esp, 200		; 000000c8H
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
  0009f	90		 npad	 1
$LN7@OnOptions:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN6@OnOptions
$LN6@OnOptions:
  000a8	3c ff ff ff	 DD	 -196			; ffffff3cH
  000ac	b0 00 00 00	 DD	 176			; 000000b0H
  000b0	00 00 00 00	 DD	 $LN4@OnOptions
$LN4@OnOptions:
  000b4	64		 DB	 100			; 00000064H
  000b5	6c		 DB	 108			; 0000006cH
  000b6	67		 DB	 103			; 00000067H
  000b7	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnOptions@CNewBoxesView@@IAEXXZ$0:
  00000	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1OptionsDialog@@UAE@XZ
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$?OnOptions@CNewBoxesView@@IAEXXZ:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 3c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-196]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnOptions@CNewBoxesView@@IAEXXZ
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnOptions@CNewBoxesView@@IAEXXZ ENDP			; CNewBoxesView::OnOptions
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateTestCreation@CNewBoxesView@@IAEXPAVCCmdUI@@@Z PROC ; CNewBoxesView::OnUpdateTestCreation
; _this$ = ecx

; 542  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 543  : 	// TODO: Add your command update UI handler code here
; 544  :   pCmdUI->Enable(CurrentProcess()->IsOK_TestCreation());	

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv69[ebp]
  0002a	8b 42 54	 mov	 eax, DWORD PTR [edx+84]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	0f b6 c8	 movzx	 ecx, al
  00039	8b f4		 mov	 esi, esp
  0003b	51		 push	 ecx
  0003c	8b 55 08	 mov	 edx, DWORD PTR _pCmdUI$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	ff d2		 call	 edx
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 545  : 	
; 546  : }

  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?OnUpdateTestCreation@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ENDP ; CNewBoxesView::OnUpdateTestCreation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_dlg$ = -220						; size = 200
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnTestCreation@CNewBoxesView@@IAEXXZ PROC		; CNewBoxesView::OnTestCreation
; _this$ = ecx

; 510  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnTestCreation@CNewBoxesView@@IAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00017	57		 push	 edi
  00018	51		 push	 ecx
  00019	8d bd 20 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-224]
  0001f	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	59		 pop	 ecx
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00037	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003d	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 511  : 	// TODO: Add your command handler code here
; 512  :   TestCreation dlg;

  00040	6a 00		 push	 0
  00042	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  00048	e8 00 00 00 00	 call	 ??0TestCreation@@QAE@PAVCWnd@@@Z ; TestCreation::TestCreation
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 513  :   dlg.DoModal();

  00054	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  0005a	e8 00 00 00 00	 call	 ?DoModal@CDialog@@UAEHXZ ; CDialog::DoModal

; 514  : }

  0005f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00066	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  0006c	e8 00 00 00 00	 call	 ??1TestCreation@@UAE@XZ
  00071	52		 push	 edx
  00072	8b cd		 mov	 ecx, ebp
  00074	50		 push	 eax
  00075	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@OnTestCrea
  0007b	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00080	58		 pop	 eax
  00081	5a		 pop	 edx
  00082	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00085	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008c	59		 pop	 ecx
  0008d	5f		 pop	 edi
  0008e	81 c4 e0 00 00
	00		 add	 esp, 224		; 000000e0H
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
  0009f	90		 npad	 1
$LN7@OnTestCrea:
  000a0	01 00 00 00	 DD	 1
  000a4	00 00 00 00	 DD	 $LN6@OnTestCrea
$LN6@OnTestCrea:
  000a8	24 ff ff ff	 DD	 -220			; ffffff24H
  000ac	c8 00 00 00	 DD	 200			; 000000c8H
  000b0	00 00 00 00	 DD	 $LN4@OnTestCrea
$LN4@OnTestCrea:
  000b4	64		 DB	 100			; 00000064H
  000b5	6c		 DB	 108			; 0000006cH
  000b6	67		 DB	 103			; 00000067H
  000b7	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnTestCreation@CNewBoxesView@@IAEXXZ$0:
  00000	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR _dlg$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1TestCreation@@UAE@XZ
  0000b	cc		 int	 3
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
__ehhandler$?OnTestCreation@CNewBoxesView@@IAEXXZ:
  00010	90		 npad	 1
  00011	90		 npad	 1
  00012	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00016	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00019	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0001f	33 c8		 xor	 ecx, eax
  00021	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00026	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnTestCreation@CNewBoxesView@@IAEXXZ
  0002b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnTestCreation@CNewBoxesView@@IAEXXZ ENDP		; CNewBoxesView::OnTestCreation
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?OnReDoTurn@CNewBoxesView@@IAEXXZ PROC			; CNewBoxesView::OnReDoTurn
; _this$ = ecx

; 503  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 504  : 	// TODO: Add your command handler code here
; 505  :   ProcessManager(CurrentProcess()->OnReDoTurn());

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  0002a	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  0003c	83 c4 04	 add	 esp, 4

; 506  : 	
; 507  : }

  0003f	5e		 pop	 esi
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?OnReDoTurn@CNewBoxesView@@IAEXXZ ENDP			; CNewBoxesView::OnReDoTurn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateReDoTurn@CNewBoxesView@@IAEXPAVCCmdUI@@@Z PROC	; CNewBoxesView::OnUpdateReDoTurn
; _this$ = ecx

; 496  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 497  : 	// TODO: Add your command update UI handler code here
; 498  :   pCmdUI->Enable(CurrentProcess()->IsOK_ReDoTurn());	

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv69[ebp]
  0002a	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	0f b6 c8	 movzx	 ecx, al
  00039	8b f4		 mov	 esi, esp
  0003b	51		 push	 ecx
  0003c	8b 55 08	 mov	 edx, DWORD PTR _pCmdUI$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	ff d2		 call	 edx
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 499  : 	
; 500  : }

  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?OnUpdateReDoTurn@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ENDP	; CNewBoxesView::OnUpdateReDoTurn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?OnUnDoTurn@CNewBoxesView@@IAEXXZ PROC			; CNewBoxesView::OnUnDoTurn
; _this$ = ecx

; 490  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 491  : 	// TODO: Add your command handler code here
; 492  :   ProcessManager(CurrentProcess()->OnUnDoTurn());

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  0002a	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  0003c	83 c4 04	 add	 esp, 4

; 493  : }

  0003f	5e		 pop	 esi
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?OnUnDoTurn@CNewBoxesView@@IAEXXZ ENDP			; CNewBoxesView::OnUnDoTurn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateUnDoTurn@CNewBoxesView@@IAEXPAVCCmdUI@@@Z PROC	; CNewBoxesView::OnUpdateUnDoTurn
; _this$ = ecx

; 483  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 484  : 	// TODO: Add your command update UI handler code here
; 485  :   pCmdUI->Enable(CurrentProcess()->IsOK_UnDoTurn());	

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv69[ebp]
  0002a	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	0f b6 c8	 movzx	 ecx, al
  00039	8b f4		 mov	 esi, esp
  0003b	51		 push	 ecx
  0003c	8b 55 08	 mov	 edx, DWORD PTR _pCmdUI$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	ff d2		 call	 edx
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 486  : 	
; 487  : }

  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?OnUpdateUnDoTurn@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ENDP	; CNewBoxesView::OnUpdateUnDoTurn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateEnterPosition@CNewBoxesView@@IAEXPAVCCmdUI@@@Z PROC ; CNewBoxesView::OnUpdateEnterPosition
; _this$ = ecx

; 469  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 470  : 	// TODO: Add your command update UI handler code here
; 471  :   pCmdUI->Enable(CurrentProcess()->IsOK_EnterPosition());	

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv69[ebp]
  0002a	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	0f b6 c8	 movzx	 ecx, al
  00039	8b f4		 mov	 esi, esp
  0003b	51		 push	 ecx
  0003c	8b 55 08	 mov	 edx, DWORD PTR _pCmdUI$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	ff d2		 call	 edx
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 472  : 	
; 473  : }

  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?OnUpdateEnterPosition@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ENDP ; CNewBoxesView::OnUpdateEnterPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
_pCmdUI$ = 8						; size = 4
?OnUpdateComputerMove@CNewBoxesView@@IAEXPAVCCmdUI@@@Z PROC ; CNewBoxesView::OnUpdateComputerMove
; _this$ = ecx

; 462  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 463  : 	// TODO: Add your command update UI handler code here
; 464  :   pCmdUI->Enable(CurrentProcess()->IsOK_ComputerMove());	

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv69[ebp]
  0002a	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	0f b6 c8	 movzx	 ecx, al
  00039	8b f4		 mov	 esi, esp
  0003b	51		 push	 ecx
  0003c	8b 55 08	 mov	 edx, DWORD PTR _pCmdUI$[ebp]
  0003f	8b 02		 mov	 eax, DWORD PTR [edx]
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _pCmdUI$[ebp]
  00044	8b 10		 mov	 edx, DWORD PTR [eax]
  00046	ff d2		 call	 edx
  00048	3b f4		 cmp	 esi, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 465  : 	
; 466  : }

  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?OnUpdateComputerMove@CNewBoxesView@@IAEXPAVCCmdUI@@@Z ENDP ; CNewBoxesView::OnUpdateComputerMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_nIDEvent$ = 8						; size = 4
?OnTimer@CNewBoxesView@@IAEXI@Z PROC			; CNewBoxesView::OnTimer
; _this$ = ecx

; 430  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 431  : 	// TODO: Add your message handler code here and/or call default
; 432  : 	
; 433  :   ProcessManager(CurrentProcess()->OnTimer(nIDEvent));

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  00020	8b f4		 mov	 esi, esp
  00022	8b 45 08	 mov	 eax, DWORD PTR _nIDEvent$[ebp]
  00025	50		 push	 eax
  00026	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  00029	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  0002e	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00031	ff d0		 call	 eax
  00033	3b f4		 cmp	 esi, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  00040	83 c4 04	 add	 esp, 4

; 434  : //  ProcessMaintenance(PM_MessageReturn);
; 435  : 	CView::OnTimer(nIDEvent);

  00043	8b 4d 08	 mov	 ecx, DWORD PTR _nIDEvent$[ebp]
  00046	51		 push	 ecx
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?OnTimer@CWnd@@IAEXI@Z	; CWnd::OnTimer

; 436  : }

  0004f	5e		 pop	 esi
  00050	83 c4 08	 add	 esp, 8
  00053	3b ec		 cmp	 ebp, esp
  00055	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?OnTimer@CNewBoxesView@@IAEXI@Z ENDP			; CNewBoxesView::OnTimer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?OnComputerMove@CNewBoxesView@@IAEXXZ PROC		; CNewBoxesView::OnComputerMove
; _this$ = ecx

; 423  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 424  : 	// TODO: Add your command handler code here
; 425  :   //if (!pCurrentProcess->IsIdle()) return;
; 426  :   ProcessManager(CurrentProcess()->OnComputerMove());

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  0002a	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  0003c	83 c4 04	 add	 esp, 4

; 427  : }

  0003f	5e		 pop	 esi
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?OnComputerMove@CNewBoxesView@@IAEXXZ ENDP		; CNewBoxesView::OnComputerMove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnLButtonDblClk@CNewBoxesView@@IAEXIVCPoint@@@Z PROC	; CNewBoxesView::OnLButtonDblClk
; _this$ = ecx

; 416  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 417  : 	// TODO: Add your message handler code here and/or call default
; 418  : 	
; 419  : 	CView::OnLButtonDblClk(nFlags, point);

  0000e	8b 45 10	 mov	 eax, DWORD PTR _point$[ebp+4]
  00011	50		 push	 eax
  00012	8b 4d 0c	 mov	 ecx, DWORD PTR _point$[ebp]
  00015	51		 push	 ecx
  00016	8b 55 08	 mov	 edx, DWORD PTR _nFlags$[ebp]
  00019	52		 push	 edx
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?OnLButtonDblClk@CWnd@@IAEXIVCPoint@@@Z ; CWnd::OnLButtonDblClk

; 420  : }

  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonDblClk@CNewBoxesView@@IAEXIVCPoint@@@Z ENDP	; CNewBoxesView::OnLButtonDblClk
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_nChar$ = 8						; size = 4
_nRepCnt$ = 12						; size = 4
_nFlags$ = 16						; size = 4
?OnChar@CNewBoxesView@@IAEXIII@Z PROC			; CNewBoxesView::OnChar
; _this$ = ecx

; 399  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 400  : 	// TODO: Add your message handler code here and/or call default
; 401  :   ProcessManager(CurrentProcess()->OnChar(nChar, nRepCnt, nFlags));

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  00020	8b f4		 mov	 esi, esp
  00022	8b 45 10	 mov	 eax, DWORD PTR _nFlags$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 0c	 mov	 ecx, DWORD PTR _nRepCnt$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 08	 mov	 edx, DWORD PTR _nChar$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00031	8b 10		 mov	 edx, DWORD PTR [eax]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  00036	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00039	ff d0		 call	 eax
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  00048	83 c4 04	 add	 esp, 4

; 402  :   //ProcessMaintenance(PM_MessageReturn);
; 403  : 	CView::OnChar(nChar, nRepCnt, nFlags);

  0004b	8b 4d 10	 mov	 ecx, DWORD PTR _nFlags$[ebp]
  0004e	51		 push	 ecx
  0004f	8b 55 0c	 mov	 edx, DWORD PTR _nRepCnt$[ebp]
  00052	52		 push	 edx
  00053	8b 45 08	 mov	 eax, DWORD PTR _nChar$[ebp]
  00056	50		 push	 eax
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?OnChar@CWnd@@IAEXIII@Z	; CWnd::OnChar

; 404  : }

  0005f	5e		 pop	 esi
  00060	83 c4 08	 add	 esp, 8
  00063	3b ec		 cmp	 ebp, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 0c 00	 ret	 12			; 0000000cH
?OnChar@CNewBoxesView@@IAEXIII@Z ENDP			; CNewBoxesView::OnChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?OnEnterPosition@CNewBoxesView@@IAEXXZ PROC		; CNewBoxesView::OnEnterPosition
; _this$ = ecx

; 393  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 394  : 	// TODO: Add your command handler code here
; 395  :   ProcessManager(CurrentProcess()->OnEnterPosition());

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  0002a	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  0003c	83 c4 04	 add	 esp, 4

; 396  : }

  0003f	5e		 pop	 esi
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?OnEnterPosition@CNewBoxesView@@IAEXXZ ENDP		; CNewBoxesView::OnEnterPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
_nFlags$ = 8						; size = 4
_point$ = 12						; size = 8
?OnLButtonDown@CNewBoxesView@@IAEXIVCPoint@@@Z PROC	; CNewBoxesView::OnLButtonDown
; _this$ = ecx

; 407  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 408  : 	// TODO: Add your message handler code here and/or call default
; 409  :   ProcessManager(CurrentProcess()->OnLButtonDown(nFlags, point));

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  00020	8b f4		 mov	 esi, esp
  00022	8b 45 10	 mov	 eax, DWORD PTR _point$[ebp+4]
  00025	50		 push	 eax
  00026	8b 4d 0c	 mov	 ecx, DWORD PTR _point$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 08	 mov	 edx, DWORD PTR _nFlags$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00031	8b 10		 mov	 edx, DWORD PTR [eax]
  00033	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  00036	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00039	ff d0		 call	 eax
  0003b	3b f4		 cmp	 esi, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  00048	83 c4 04	 add	 esp, 4

; 410  : //  ProcessMaintenance(PM_MessageReturn);
; 411  : 	CView::OnLButtonDown(nFlags, point);

  0004b	8b 4d 10	 mov	 ecx, DWORD PTR _point$[ebp+4]
  0004e	51		 push	 ecx
  0004f	8b 55 0c	 mov	 edx, DWORD PTR _point$[ebp]
  00052	52		 push	 edx
  00053	8b 45 08	 mov	 eax, DWORD PTR _nFlags$[ebp]
  00056	50		 push	 eax
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?OnLButtonDown@CWnd@@IAEXIVCPoint@@@Z ; CWnd::OnLButtonDown

; 412  : }

  0005f	5e		 pop	 esi
  00060	83 c4 08	 add	 esp, 8
  00063	3b ec		 cmp	 ebp, esp
  00065	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 0c 00	 ret	 12			; 0000000cH
?OnLButtonDown@CNewBoxesView@@IAEXIVCPoint@@@Z ENDP	; CNewBoxesView::OnLButtonDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv210 = -204						; size = 4
tv212 = -200						; size = 4
tv208 = -196						; size = 4
tv211 = -192						; size = 4
tv206 = -188						; size = 4
tv133 = -184						; size = 4
tv203 = -180						; size = 4
tv65 = -176						; size = 4
tv201 = -172						; size = 4
tv68 = -168						; size = 4
$T2 = -164						; size = 4
$T3 = -160						; size = 4
$T4 = -156						; size = 4
$T5 = -152						; size = 8
$T6 = -144						; size = 4
$T7 = -140						; size = 4
_arIn$ = -132						; size = 72
_result$ = -52						; size = 4
_file$ = -40						; size = 20
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnToption@CNewBoxesView@@QAEXXZ PROC			; CNewBoxesView::OnToption
; _this$ = ecx

; 517  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnToption@CNewBoxesView@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	51		 push	 ecx
  0001a	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00020	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	59		 pop	 ecx
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	50		 push	 eax
  00035	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00038	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003e	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 518  :   CFile file;

  00041	8d 4d d8	 lea	 ecx, DWORD PTR _file$[ebp]
  00044	e8 00 00 00 00	 call	 ??0CFile@@QAE@XZ	; CFile::CFile
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 519  :   CString result;

  00050	8b f4		 mov	 esi, esp
  00052	8d 4d cc	 lea	 ecx, DWORD PTR _result$[ebp]
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 520  :   if (!file.Open((LPCSTR)testFile, CFile::modeRead))

  00066	6a 00		 push	 0
  00068	6a 00		 push	 0
  0006a	8b f4		 mov	 esi, esp
  0006c	b9 00 00 00 00	 mov	 ecx, OFFSET ?testFile@@3V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A ; testFile
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00077	3b f4		 cmp	 esi, esp
  00079	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007e	50		 push	 eax
  0007f	8d 4d d8	 lea	 ecx, DWORD PTR _file$[ebp]
  00082	e8 00 00 00 00	 call	 ?Open@CFile@@UAEHPBDIPAVCFileException@@@Z ; CFile::Open
  00087	85 c0		 test	 eax, eax
  00089	0f 85 b1 00 00
	00		 jne	 $LN2@OnToption

; 521  :   {
; 522  :     die((LPCSTR)(CString ("Cannot open test file = ") + testFile));

  0008f	68 00 00 00 00	 push	 OFFSET ?testFile@@3V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A ; testFile
  00094	8b f4		 mov	 esi, esp
  00096	68 00 00 00 00	 push	 OFFSET $SG226979
  0009b	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	89 85 58 ff ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
  000b4	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv68[ebp]
  000ba	89 85 54 ff ff
	ff		 mov	 DWORD PTR tv201[ebp], eax
  000c0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000c4	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv201[ebp]
  000ca	51		 push	 ecx
  000cb	8d 95 70 ff ff
	ff		 lea	 edx, DWORD PTR $T6[ebp]
  000d1	52		 push	 edx
  000d2	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z ; ATL::operator+
  000d7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000da	89 85 50 ff ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  000e0	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv65[ebp]
  000e6	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv203[ebp], eax
  000ec	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000f0	8b f4		 mov	 esi, esp
  000f2	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv203[ebp]
  000f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  000fe	3b f4		 cmp	 esi, esp
  00100	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 ?die@@YAXPBD@Z		; die
  0010b	83 c4 04	 add	 esp, 4
  0010e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00112	8b f4		 mov	 esi, esp
  00114	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  0011a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00120	3b f4		 cmp	 esi, esp
  00122	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00127	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0012b	8b f4		 mov	 esi, esp
  0012d	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00133	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00139	3b f4		 cmp	 esi, esp
  0013b	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@OnToption:

; 523  :   };
; 524  :   CArchive arIn(&file, CArchive::load);

  00140	6a 00		 push	 0
  00142	68 00 10 00 00	 push	 4096			; 00001000H
  00147	6a 01		 push	 1
  00149	8d 4d d8	 lea	 ecx, DWORD PTR _file$[ebp]
  0014c	51		 push	 ecx
  0014d	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _arIn$[ebp]
  00153	e8 00 00 00 00	 call	 ??0CArchive@@QAE@PAVCFile@@IHPAX@Z ; CArchive::CArchive
  00158	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4

; 525  :   pDoc->Serialize(arIn);

  0015c	8b f4		 mov	 esi, esp
  0015e	8d 95 7c ff ff
	ff		 lea	 edx, DWORD PTR _arIn$[ebp]
  00164	52		 push	 edx
  00165	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDoc@@3PAVCNewBoxesDoc@@A ; pDoc
  0016a	8b 10		 mov	 edx, DWORD PTR [eax]
  0016c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDoc@@3PAVCNewBoxesDoc@@A ; pDoc
  00172	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00175	ff d0		 call	 eax
  00177	3b f4		 cmp	 esi, esp
  00179	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 526  :   arIn.Close();

  0017e	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _arIn$[ebp]
  00184	e8 00 00 00 00	 call	 ?Close@CArchive@@QAEXXZ	; CArchive::Close

; 527  :   file.Close();

  00189	8d 4d d8	 lea	 ecx, DWORD PTR _file$[ebp]
  0018c	e8 00 00 00 00	 call	 ?Close@CFile@@UAEXXZ	; CFile::Close

; 528  :   if (pDoc->GameSize().x == 0)

  00191	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00197	51		 push	 ecx
  00198	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDoc@@3PAVCNewBoxesDoc@@A ; pDoc
  0019e	e8 00 00 00 00	 call	 ?GameSize@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ; CNewBoxesDoc::GameSize
  001a3	83 38 00	 cmp	 DWORD PTR [eax], 0
  001a6	75 0d		 jne	 SHORT $LN3@OnToption

; 529  :   {
; 530  :     die("No valid position found");

  001a8	68 00 00 00 00	 push	 OFFSET $SG226981
  001ad	e8 00 00 00 00	 call	 ?die@@YAXPBD@Z		; die
  001b2	83 c4 04	 add	 esp, 4
$LN3@OnToption:

; 531  :   };
; 532  :   result = Test();

  001b5	8d 95 64 ff ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  001bb	52		 push	 edx
  001bc	e8 00 00 00 00	 call	 ?Test@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@XZ ; Test
  001c1	83 c4 04	 add	 esp, 4
  001c4	89 85 48 ff ff
	ff		 mov	 DWORD PTR tv133[ebp], eax
  001ca	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv133[ebp]
  001d0	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv206[ebp], eax
  001d6	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  001da	8b f4		 mov	 esi, esp
  001dc	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR tv206[ebp]
  001e2	51		 push	 ecx
  001e3	8d 4d cc	 lea	 ecx, DWORD PTR _result$[ebp]
  001e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
  001ec	3b f4		 cmp	 esi, esp
  001ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f3	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  001f7	8b f4		 mov	 esi, esp
  001f9	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  001ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 533  :   if (result != "")

  0020c	68 00 00 00 00	 push	 OFFSET $SG226983
  00211	8d 55 cc	 lea	 edx, DWORD PTR _result$[ebp]
  00214	52		 push	 edx
  00215	e8 00 00 00 00	 call	 ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator!=
  0021a	83 c4 08	 add	 esp, 8
  0021d	0f b6 c0	 movzx	 eax, al
  00220	85 c0		 test	 eax, eax
  00222	0f 84 af 00 00
	00		 je	 $LN4@OnToption

; 534  :   {
; 535  :     Information((LPCSTR)(result + "\n" + testFile));

  00228	68 00 00 00 00	 push	 OFFSET ?testFile@@3V?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@A ; testFile
  0022d	68 00 00 00 00	 push	 OFFSET $SG226984
  00232	8d 4d cc	 lea	 ecx, DWORD PTR _result$[ebp]
  00235	51		 push	 ecx
  00236	8d 95 60 ff ff
	ff		 lea	 edx, DWORD PTR $T3[ebp]
  0023c	52		 push	 edx
  0023d	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ; ATL::operator+
  00242	83 c4 0c	 add	 esp, 12			; 0000000cH
  00245	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv211[ebp], eax
  0024b	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv211[ebp]
  00251	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv208[ebp], eax
  00257	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0025b	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv208[ebp]
  00261	51		 push	 ecx
  00262	8d 95 5c ff ff
	ff		 lea	 edx, DWORD PTR $T2[ebp]
  00268	52		 push	 edx
  00269	e8 00 00 00 00	 call	 ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z ; ATL::operator+
  0026e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00271	89 85 38 ff ff
	ff		 mov	 DWORD PTR tv212[ebp], eax
  00277	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv212[ebp]
  0027d	89 85 34 ff ff
	ff		 mov	 DWORD PTR tv210[ebp], eax
  00283	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00287	8b f4		 mov	 esi, esp
  00289	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv210[ebp]
  0028f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  00295	3b f4		 cmp	 esi, esp
  00297	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0029c	50		 push	 eax
  0029d	e8 00 00 00 00	 call	 ?Information@@YAXPBD@Z	; Information
  002a2	83 c4 04	 add	 esp, 4
  002a5	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  002a9	8b f4		 mov	 esi, esp
  002ab	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  002b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002b7	3b f4		 cmp	 esi, esp
  002b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002be	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  002c2	8b f4		 mov	 esi, esp
  002c4	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  002ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  002d0	3b f4		 cmp	 esi, esp
  002d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN4@OnToption:

; 536  :   };
; 537  :   pDoc->SetModifiedFlag(false);

  002d7	8b f4		 mov	 esi, esp
  002d9	6a 00		 push	 0
  002db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDoc@@3PAVCNewBoxesDoc@@A ; pDoc
  002e1	8b 11		 mov	 edx, DWORD PTR [ecx]
  002e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDoc@@3PAVCNewBoxesDoc@@A ; pDoc
  002e9	8b 42 6c	 mov	 eax, DWORD PTR [edx+108]
  002ec	ff d0		 call	 eax
  002ee	3b f4		 cmp	 esi, esp
  002f0	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 538  :   AfxGetMainWnd()->PostMessage(WM_CLOSE);

  002f5	6a 00		 push	 0
  002f7	6a 00		 push	 0
  002f9	6a 10		 push	 16			; 00000010H
  002fb	e8 00 00 00 00	 call	 ?AfxGetMainWnd@@YGPAVCWnd@@XZ ; AfxGetMainWnd
  00300	8b c8		 mov	 ecx, eax
  00302	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA

; 539  : }

  00307	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0030b	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _arIn$[ebp]
  00311	e8 00 00 00 00	 call	 ??1CArchive@@QAE@XZ	; CArchive::~CArchive
  00316	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  0031a	8b f4		 mov	 esi, esp
  0031c	8d 4d cc	 lea	 ecx, DWORD PTR _result$[ebp]
  0031f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00325	3b f4		 cmp	 esi, esp
  00327	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0032c	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00333	8d 4d d8	 lea	 ecx, DWORD PTR _file$[ebp]
  00336	e8 00 00 00 00	 call	 ??1CFile@@UAE@XZ	; CFile::~CFile
  0033b	52		 push	 edx
  0033c	8b cd		 mov	 ecx, ebp
  0033e	50		 push	 eax
  0033f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN19@OnToption
  00345	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0034a	58		 pop	 eax
  0034b	5a		 pop	 edx
  0034c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0034f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00356	59		 pop	 ecx
  00357	5f		 pop	 edi
  00358	5e		 pop	 esi
  00359	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0035f	3b ec		 cmp	 ebp, esp
  00361	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00366	8b e5		 mov	 esp, ebp
  00368	5d		 pop	 ebp
  00369	c3		 ret	 0
  0036a	66 90		 npad	 2
$LN19@OnToption:
  0036c	03 00 00 00	 DD	 3
  00370	00 00 00 00	 DD	 $LN18@OnToption
$LN18@OnToption:
  00374	d8 ff ff ff	 DD	 -40			; ffffffd8H
  00378	14 00 00 00	 DD	 20			; 00000014H
  0037c	00 00 00 00	 DD	 $LN14@OnToption
  00380	cc ff ff ff	 DD	 -52			; ffffffccH
  00384	04 00 00 00	 DD	 4
  00388	00 00 00 00	 DD	 $LN15@OnToption
  0038c	7c ff ff ff	 DD	 -132			; ffffff7cH
  00390	48 00 00 00	 DD	 72			; 00000048H
  00394	00 00 00 00	 DD	 $LN16@OnToption
$LN16@OnToption:
  00398	61		 DB	 97			; 00000061H
  00399	72		 DB	 114			; 00000072H
  0039a	49		 DB	 73			; 00000049H
  0039b	6e		 DB	 110			; 0000006eH
  0039c	00		 DB	 0
$LN15@OnToption:
  0039d	72		 DB	 114			; 00000072H
  0039e	65		 DB	 101			; 00000065H
  0039f	73		 DB	 115			; 00000073H
  003a0	75		 DB	 117			; 00000075H
  003a1	6c		 DB	 108			; 0000006cH
  003a2	74		 DB	 116			; 00000074H
  003a3	00		 DB	 0
$LN14@OnToption:
  003a4	66		 DB	 102			; 00000066H
  003a5	69		 DB	 105			; 00000069H
  003a6	6c		 DB	 108			; 0000006cH
  003a7	65		 DB	 101			; 00000065H
  003a8	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _file$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CFile@@UAE@XZ	; CFile::~CFile
__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$1:
  00008	8b f4		 mov	 esi, esp
  0000a	8d 4d cc	 lea	 ecx, DWORD PTR _result$[ebp]
  0000d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00013	3b f4		 cmp	 esi, esp
  00015	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$2:
  0001a	8b f4		 mov	 esi, esp
  0001c	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00028	3b f4		 cmp	 esi, esp
  0002a	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$3:
  0002f	8b f4		 mov	 esi, esp
  00031	8d 8d 70 ff ff
	ff		 lea	 ecx, DWORD PTR $T6[ebp]
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0003d	3b f4		 cmp	 esi, esp
  0003f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$4:
  00044	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _arIn$[ebp]
  0004a	e9 00 00 00 00	 jmp	 ??1CArchive@@QAE@XZ	; CArchive::~CArchive
__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$5:
  0004f	8b f4		 mov	 esi, esp
  00051	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0005d	3b f4		 cmp	 esi, esp
  0005f	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$6:
  00064	8b f4		 mov	 esi, esp
  00066	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00072	3b f4		 cmp	 esi, esp
  00074	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?OnToption@CNewBoxesView@@QAEXXZ$7:
  00079	8b f4		 mov	 esi, esp
  0007b	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00081	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00087	3b f4		 cmp	 esi, esp
  00089	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
  0008e	cc		 int	 3
  0008f	cc		 int	 3
  00090	cc		 int	 3
  00091	cc		 int	 3
  00092	cc		 int	 3
__ehhandler$?OnToption@CNewBoxesView@@QAEXXZ:
  00093	90		 npad	 1
  00094	90		 npad	 1
  00095	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00099	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0009c	8b 8a 34 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-204]
  000a2	33 c8		 xor	 ecx, eax
  000a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a9	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnToption@CNewBoxesView@@QAEXXZ
  000ae	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnToption@CNewBoxesView@@QAEXXZ ENDP			; CNewBoxesView::OnToption
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dc$ = 8						; size = 4
?Dump@CNewBoxesView@@UBEXAAVCDumpContext@@@Z PROC	; CNewBoxesView::Dump
; _this$ = ecx

; 371  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 372  : 	CView::Dump(dc);

  0000e	8b 45 08	 mov	 eax, DWORD PTR _dc$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?Dump@CView@@UBEXAAVCDumpContext@@@Z ; CView::Dump

; 373  : }

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?Dump@CNewBoxesView@@UBEXAAVCDumpContext@@@Z ENDP	; CNewBoxesView::Dump
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AssertValid@CNewBoxesView@@UBEXXZ PROC			; CNewBoxesView::AssertValid
; _this$ = ecx

; 366  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 367  : 	CView::AssertValid();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?AssertValid@CView@@UBEXXZ ; CView::AssertValid

; 368  : }

  00016	83 c4 04	 add	 esp, 4
  00019	3b ec		 cmp	 ebp, esp
  0001b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?AssertValid@CNewBoxesView@@UBEXXZ ENDP			; CNewBoxesView::AssertValid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?OnWM_ThreadCompletion@CNewBoxesView@@UAEXXZ PROC	; CNewBoxesView::OnWM_ThreadCompletion
; _this$ = ecx

; 456  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  00015	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 457  :   ProcessManager(CurrentProcess()->OnThreadCompletion());

  00018	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  0001d	89 45 f8	 mov	 DWORD PTR tv66[ebp], eax
  00020	8b 45 f8	 mov	 eax, DWORD PTR tv66[ebp]
  00023	8b 10		 mov	 edx, DWORD PTR [eax]
  00025	8b f4		 mov	 esi, esp
  00027	8b 4d f8	 mov	 ecx, DWORD PTR tv66[ebp]
  0002a	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0002d	ff d0		 call	 eax
  0002f	3b f4		 cmp	 esi, esp
  00031	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  0003c	83 c4 04	 add	 esp, 4

; 458  : }

  0003f	5e		 pop	 esi
  00040	83 c4 08	 add	 esp, 8
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?OnWM_ThreadCompletion@CNewBoxesView@@UAEXXZ ENDP	; CNewBoxesView::OnWM_ThreadCompletion
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CNewBoxesView@@UAE@XZ PROC				; CNewBoxesView::~CNewBoxesView
; _this$ = ecx

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CNewBoxesView@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00030	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CNewBoxesView@@6B@

; 88   : //  if (pCurrentProcess != NULL) free(pCurrentProcess);
; 89   : //  pCurrentProcess = NULL;
; 90   :   ProcessManager(STATUS_SHUTDOWN);

  00036	6a 01		 push	 1
  00038	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  0003d	83 c4 04	 add	 esp, 4

; 91   : }

  00040	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ??1CView@@UAE@XZ	; CView::~CView
  00048	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00052	59		 pop	 ecx
  00053	83 c4 10	 add	 esp, 16			; 00000010H
  00056	3b ec		 cmp	 ebp, esp
  00058	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
  00061	cc		 int	 3
  00062	cc		 int	 3
  00063	cc		 int	 3
  00064	cc		 int	 3
  00065	cc		 int	 3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$??1CNewBoxesView@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CNewBoxesView@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CNewBoxesView@@UAE@XZ ENDP				; CNewBoxesView::~CNewBoxesView
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnEndPrinting@CNewBoxesView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z PROC ; CNewBoxesView::OnEndPrinting
; _this$ = ecx

; 357  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 358  : 	// TODO: add cleanup after printing
; 359  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 08 00	 ret	 8
?OnEndPrinting@CNewBoxesView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z ENDP ; CNewBoxesView::OnEndPrinting
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnBeginPrinting@CNewBoxesView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z PROC ; CNewBoxesView::OnBeginPrinting
; _this$ = ecx

; 352  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 353  : 	// TODO: add extra initialization before printing
; 354  : }

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 08 00	 ret	 8
?OnBeginPrinting@CNewBoxesView@@MAEXPAVCDC@@PAUCPrintInfo@@@Z ENDP ; CNewBoxesView::OnBeginPrinting
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pInfo$ = 8						; size = 4
?OnPreparePrinting@CNewBoxesView@@MAEHPAUCPrintInfo@@@Z PROC ; CNewBoxesView::OnPreparePrinting
; _this$ = ecx

; 346  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 347  : 	// default preparation
; 348  : 	return DoPreparePrinting(pInfo);

  0000e	8b 45 08	 mov	 eax, DWORD PTR _pInfo$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?DoPreparePrinting@CView@@QAEHPAUCPrintInfo@@@Z ; CView::DoPreparePrinting

; 349  : }

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?OnPreparePrinting@CNewBoxesView@@MAEHPAUCPrintInfo@@@Z ENDP ; CNewBoxesView::OnPreparePrinting
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnInitialUpdate@CNewBoxesView@@UAEXXZ PROC		; CNewBoxesView::OnInitialUpdate
; _this$ = ecx

; 440  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 441  : 	CView::OnInitialUpdate();

  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?OnInitialUpdate@CView@@UAEXXZ ; CView::OnInitialUpdate

; 442  :   windowHandle = this->m_hWnd;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0001c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?windowHandle@@3PAUHWND__@@A, ecx ; windowHandle

; 443  : 	
; 444  : 	// TODO: Add your specialized code here and/or call the base class
; 445  :   if (tOption)

  00022	0f b6 15 00 00
	00 00		 movzx	 edx, BYTE PTR ?tOption@@3_NA ; tOption
  00029	85 d2		 test	 edx, edx
  0002b	74 1e		 je	 SHORT $LN2@OnInitialU

; 446  :   {
; 447  :     OnToption();

  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?OnToption@CNewBoxesView@@QAEXXZ ; CNewBoxesView::OnToption

; 448  :     PostMessage(WM_COMMAND,ID_APP_EXIT,0);

  00035	6a 00		 push	 0
  00037	68 41 e1 00 00	 push	 57665			; 0000e141H
  0003c	68 11 01 00 00	 push	 273			; 00000111H
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?PostMessageA@CWnd@@QAEHIIJ@Z ; CWnd::PostMessageA

; 449  : //    theApp.CloseAllDocuments(true);//PostThreadMessage(WM_COMMAND, ID_APP_EXIT,0);//ExitInstance();
; 450  :     return;

  00049	eb 0e		 jmp	 SHORT $LN1@OnInitialU
$LN2@OnInitialU:

; 451  :   };
; 452  :   SetTimer(1,50,NULL);	

  0004b	6a 00		 push	 0
  0004d	6a 32		 push	 50			; 00000032H
  0004f	6a 01		 push	 1
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?SetTimer@CWnd@@QAEIIIP6GXPAUHWND__@@IIK@Z@Z ; CWnd::SetTimer
$LN1@OnInitialU:

; 453  : }

  00059	83 c4 04	 add	 esp, 4
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?OnInitialUpdate@CNewBoxesView@@UAEXXZ ENDP		; CNewBoxesView::OnInitialUpdate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_cs$ = 8						; size = 4
?PreCreateWindow@CNewBoxesView@@UAEHAAUtagCREATESTRUCTA@@@Z PROC ; CNewBoxesView::PreCreateWindow
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 95   : 	// TODO: Modify the Window class or styles here by modifying
; 96   : 	//  the CREATESTRUCT cs
; 97   : 
; 98   : 	return CView::PreCreateWindow(cs);

  0000e	8b 45 08	 mov	 eax, DWORD PTR _cs$[ebp]
  00011	50		 push	 eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?PreCreateWindow@CView@@MAEHAAUtagCREATESTRUCTA@@@Z ; CView::PreCreateWindow

; 99   : }

  0001a	83 c4 04	 add	 esp, 4
  0001d	3b ec		 cmp	 ebp, esp
  0001f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
?PreCreateWindow@CNewBoxesView@@UAEHAAUtagCREATESTRUCTA@@@Z ENDP ; CNewBoxesView::PreCreateWindow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv813 = -764						; size = 4
tv812 = -760						; size = 4
tv703 = -756						; size = 4
tv574 = -752						; size = 4
tv573 = -748						; size = 4
tv462 = -744						; size = 4
tv348 = -740						; size = 4
tv347 = -736						; size = 4
tv217 = -732						; size = 4
tv1062 = -728						; size = 4
tv137 = -724						; size = 4
tv220 = -720						; size = 4
$T2 = -716						; size = 8
$T3 = -708						; size = 8
$T4 = -700						; size = 8
$T5 = -692						; size = 8
$T6 = -684						; size = 8
$T7 = -676						; size = 8
$T8 = -668						; size = 8
$T9 = -660						; size = 8
$T10 = -652						; size = 8
$T11 = -644						; size = 8
$T12 = -636						; size = 8
$T13 = -628						; size = 8
$T14 = -620						; size = 8
$T15 = -612						; size = 8
$T16 = -604						; size = 8
$T17 = -596						; size = 8
$T18 = -588						; size = 8
$T19 = -580						; size = 8
$T20 = -572						; size = 8
$T21 = -564						; size = 8
$T22 = -556						; size = 8
$T23 = -548						; size = 8
$T24 = -540						; size = 8
$T25 = -532						; size = 8
$T26 = -524						; size = 8
$T27 = -516						; size = 8
$T28 = -508						; size = 8
$T29 = -500						; size = 8
$T30 = -492						; size = 8
$T31 = -484						; size = 8
$T32 = -476						; size = 8
$T33 = -468						; size = 8
$T34 = -460						; size = 4
$T35 = -456						; size = 8
$T36 = -448						; size = 8
$T37 = -440						; size = 8
$T38 = -432						; size = 8
$T39 = -424						; size = 8
_specialPen$40 = -412					; size = 8
_specialPen$41 = -396					; size = 8
_specialPen$42 = -380					; size = 8
_specialPen$43 = -364					; size = 8
_specialPen$44 = -348					; size = 8
_originalPen$ = -336					; size = 4
_backgroundPen$ = -328					; size = 8
_computerPen$ = -312					; size = 8
_humanPen$ = -296					; size = 8
_dotPen$ = -280						; size = 8
_blackPen$ = -264					; size = 8
_whitePen$ = -248					; size = 8
_msg$ = -232						; size = 4
_fillColor$ = -224					; size = 4
_moveCount$ = -220					; size = 4
_owner$ = -216						; size = 4
_lineType$ = -212					; size = 4
_location$ = -204					; size = 8
_dotNum$ = -188						; size = 8
_dotDesc$ = -172					; size = 16
_score$ = -148						; size = 8
_dotSize$ = -132					; size = 8
_dotSpacing$ = -116					; size = 8
_gameSize$ = -100					; size = 8
_neighborXY$ = -84					; size = 8
_dotXY$ = -68						; size = 8
_screenOffset$ = -52					; size = 8
_minMax$ = -36						; size = 8
_pDoc$ = -24						; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pDC$ = 8						; size = 4
?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z PROC		; CNewBoxesView::OnDraw
; _this$ = ecx

; 113  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec f0 02 00
	00		 sub	 esp, 752		; 000002f0H
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	51		 push	 ecx
  0001a	8d bd 04 fd ff
	ff		 lea	 edi, DWORD PTR [ebp-764]
  00020	b9 bc 00 00 00	 mov	 ecx, 188		; 000000bcH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	59		 pop	 ecx
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00032	33 c5		 xor	 eax, ebp
  00034	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00037	50		 push	 eax
  00038	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00041	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 114  :   if (tOption) 

  00044	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?tOption@@3_NA ; tOption
  0004b	85 c0		 test	 eax, eax
  0004d	74 05		 je	 SHORT $LN32@OnDraw

; 115  :   {
; 116  :     return;

  0004f	e9 27 0f 00 00	 jmp	 $LN1@OnDraw
$LN32@OnDraw:

; 117  :   };
; 118  : 	CNewBoxesDoc* pDoc = GetDocument();

  00054	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?GetDocument@CNewBoxesView@@QAEPAVCNewBoxesDoc@@XZ ; CNewBoxesView::GetDocument
  0005c	89 45 e8	 mov	 DWORD PTR _pDoc$[ebp], eax

; 119  : 	ASSERT_VALID(pDoc);

  0005f	6a 77		 push	 119			; 00000077H
  00061	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00066	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ?AfxAssertValidObject@@YGXPBVCObject@@PBDH@Z ; AfxAssertValidObject

; 120  : 	// TODO: add draw code for native data here
; 121  : 
; 122  :   POINT minMax;
; 123  :   VECTOR screenOffset;

  0006f	8d 4d cc	 lea	 ecx, DWORD PTR _screenOffset$[ebp]
  00072	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@XZ	; VECTOR::VECTOR

; 124  :   VECTOR dotXY, neighborXY;

  00077	8d 4d bc	 lea	 ecx, DWORD PTR _dotXY$[ebp]
  0007a	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@XZ	; VECTOR::VECTOR
  0007f	8d 4d ac	 lea	 ecx, DWORD PTR _neighborXY$[ebp]
  00082	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@XZ	; VECTOR::VECTOR

; 125  :   VECTOR gameSize;

  00087	8d 4d 9c	 lea	 ecx, DWORD PTR _gameSize$[ebp]
  0008a	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@XZ	; VECTOR::VECTOR

; 126  :   VECTOR dotSpacing;

  0008f	8d 4d 8c	 lea	 ecx, DWORD PTR _dotSpacing$[ebp]
  00092	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@XZ	; VECTOR::VECTOR

; 127  :   VECTOR dotSize;

  00097	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _dotSize$[ebp]
  0009d	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@XZ	; VECTOR::VECTOR

; 128  :   VECTOR score;

  000a2	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _score$[ebp]
  000a8	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@XZ	; VECTOR::VECTOR

; 129  :   RECT dotDesc;
; 130  :   VECTOR dotNum;

  000ad	8d 8d 44 ff ff
	ff		 lea	 ecx, DWORD PTR _dotNum$[ebp]
  000b3	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@XZ	; VECTOR::VECTOR

; 131  :   VECTOR location;

  000b8	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR _location$[ebp]
  000be	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@XZ	; VECTOR::VECTOR

; 132  :   int lineType, owner, moveCount=0;

  000c3	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _moveCount$[ebp], 0

; 133  :   COLORREF fillColor = pDoc->BackgroundColor();

  000cd	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  000d0	e8 00 00 00 00	 call	 ?BackgroundColor@CNewBoxesDoc@@QAEKXZ ; CNewBoxesDoc::BackgroundColor
  000d5	89 85 20 ff ff
	ff		 mov	 DWORD PTR _fillColor$[ebp], eax

; 134  :   CString msg;

  000db	8b f4		 mov	 esi, esp
  000dd	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _msg$[ebp]
  000e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000e9	3b f4		 cmp	 esi, esp
  000eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 135  :   CPen whitePen, blackPen, dotPen, humanPen, computerPen, backgroundPen, *originalPen;

  000f7	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _whitePen$[ebp]
  000fd	e8 00 00 00 00	 call	 ??0CPen@@QAE@XZ		; CPen::CPen
  00102	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00106	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _blackPen$[ebp]
  0010c	e8 00 00 00 00	 call	 ??0CPen@@QAE@XZ		; CPen::CPen
  00111	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00115	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _dotPen$[ebp]
  0011b	e8 00 00 00 00	 call	 ??0CPen@@QAE@XZ		; CPen::CPen
  00120	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00124	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _humanPen$[ebp]
  0012a	e8 00 00 00 00	 call	 ??0CPen@@QAE@XZ		; CPen::CPen
  0012f	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00133	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _computerPen$[ebp]
  00139	e8 00 00 00 00	 call	 ??0CPen@@QAE@XZ		; CPen::CPen
  0013e	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00142	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _backgroundPen$[ebp]
  00148	e8 00 00 00 00	 call	 ??0CPen@@QAE@XZ		; CPen::CPen
  0014d	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6

; 136  :   gameSize = pDoc->GameSize();

  00151	8d 95 58 fe ff
	ff		 lea	 edx, DWORD PTR $T39[ebp]
  00157	52		 push	 edx
  00158	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  0015b	e8 00 00 00 00	 call	 ?GameSize@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ; CNewBoxesDoc::GameSize
  00160	50		 push	 eax
  00161	8d 4d 9c	 lea	 ecx, DWORD PTR _gameSize$[ebp]
  00164	e8 00 00 00 00	 call	 ??4VECTOR@@QAEAAV0@ABUtagPOINT@@@Z ; VECTOR::operator=

; 137  :   dotSpacing = pDoc->DotSpacing();

  00169	8d 85 50 fe ff
	ff		 lea	 eax, DWORD PTR $T38[ebp]
  0016f	50		 push	 eax
  00170	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00173	e8 00 00 00 00	 call	 ?DotSpacing@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ; CNewBoxesDoc::DotSpacing
  00178	50		 push	 eax
  00179	8d 4d 8c	 lea	 ecx, DWORD PTR _dotSpacing$[ebp]
  0017c	e8 00 00 00 00	 call	 ??4VECTOR@@QAEAAV0@ABUtagPOINT@@@Z ; VECTOR::operator=

; 138  :   screenOffset = pDoc->ScreenOffset();

  00181	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR $T37[ebp]
  00187	51		 push	 ecx
  00188	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  0018b	e8 00 00 00 00	 call	 ?ScreenOffset@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ; CNewBoxesDoc::ScreenOffset
  00190	50		 push	 eax
  00191	8d 4d cc	 lea	 ecx, DWORD PTR _screenOffset$[ebp]
  00194	e8 00 00 00 00	 call	 ??4VECTOR@@QAEAAV0@ABUtagPOINT@@@Z ; VECTOR::operator=

; 139  :   dotSize = pDoc->DotSize();

  00199	8d 95 40 fe ff
	ff		 lea	 edx, DWORD PTR $T36[ebp]
  0019f	52		 push	 edx
  001a0	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  001a3	e8 00 00 00 00	 call	 ?DotSize@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ; CNewBoxesDoc::DotSize
  001a8	50		 push	 eax
  001a9	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _dotSize$[ebp]
  001af	e8 00 00 00 00	 call	 ??4VECTOR@@QAEAAV0@ABUtagPOINT@@@Z ; VECTOR::operator=

; 140  :   dotPen.CreatePen(0,pDoc->DotPenWidth(),pDoc->DotColor());

  001b4	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  001b7	e8 00 00 00 00	 call	 ?DotColor@CNewBoxesDoc@@QAEKXZ ; CNewBoxesDoc::DotColor
  001bc	50		 push	 eax
  001bd	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  001c0	e8 00 00 00 00	 call	 ?DotPenWidth@CNewBoxesDoc@@QAEHXZ ; CNewBoxesDoc::DotPenWidth
  001c5	50		 push	 eax
  001c6	6a 00		 push	 0
  001c8	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _dotPen$[ebp]
  001ce	e8 00 00 00 00	 call	 ?CreatePen@CPen@@QAEHHHK@Z ; CPen::CreatePen

; 141  :   blackPen.CreatePen(0, pDoc->LinePenWidth(), RGB(0,0,0));

  001d3	6a 00		 push	 0
  001d5	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  001d8	e8 00 00 00 00	 call	 ?LinePenWidth@CNewBoxesDoc@@QAEHXZ ; CNewBoxesDoc::LinePenWidth
  001dd	50		 push	 eax
  001de	6a 00		 push	 0
  001e0	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _blackPen$[ebp]
  001e6	e8 00 00 00 00	 call	 ?CreatePen@CPen@@QAEHHHK@Z ; CPen::CreatePen

; 142  :   whitePen.CreatePen(0, pDoc->LinePenWidth(), RGB(255,255,255));

  001eb	68 ff ff ff 00	 push	 16777215		; 00ffffffH
  001f0	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  001f3	e8 00 00 00 00	 call	 ?LinePenWidth@CNewBoxesDoc@@QAEHXZ ; CNewBoxesDoc::LinePenWidth
  001f8	50		 push	 eax
  001f9	6a 00		 push	 0
  001fb	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _whitePen$[ebp]
  00201	e8 00 00 00 00	 call	 ?CreatePen@CPen@@QAEHHHK@Z ; CPen::CreatePen

; 143  :   backgroundPen.CreatePen(0,pDoc->LinePenWidth(),pDoc->BackgroundColor());

  00206	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00209	e8 00 00 00 00	 call	 ?BackgroundColor@CNewBoxesDoc@@QAEKXZ ; CNewBoxesDoc::BackgroundColor
  0020e	50		 push	 eax
  0020f	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00212	e8 00 00 00 00	 call	 ?LinePenWidth@CNewBoxesDoc@@QAEHXZ ; CNewBoxesDoc::LinePenWidth
  00217	50		 push	 eax
  00218	6a 00		 push	 0
  0021a	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _backgroundPen$[ebp]
  00220	e8 00 00 00 00	 call	 ?CreatePen@CPen@@QAEHHHK@Z ; CPen::CreatePen

; 144  :   humanPen.CreatePen(0,pDoc->LinePenWidth(),pDoc->HumanLineColor());

  00225	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00228	e8 00 00 00 00	 call	 ?HumanLineColor@CNewBoxesDoc@@QAEKXZ ; CNewBoxesDoc::HumanLineColor
  0022d	50		 push	 eax
  0022e	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00231	e8 00 00 00 00	 call	 ?LinePenWidth@CNewBoxesDoc@@QAEHXZ ; CNewBoxesDoc::LinePenWidth
  00236	50		 push	 eax
  00237	6a 00		 push	 0
  00239	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _humanPen$[ebp]
  0023f	e8 00 00 00 00	 call	 ?CreatePen@CPen@@QAEHHHK@Z ; CPen::CreatePen

; 145  :   computerPen.CreatePen(0,pDoc->LinePenWidth(),pDoc->ComputerLineColor());

  00244	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00247	e8 00 00 00 00	 call	 ?ComputerLineColor@CNewBoxesDoc@@QAEKXZ ; CNewBoxesDoc::ComputerLineColor
  0024c	50		 push	 eax
  0024d	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00250	e8 00 00 00 00	 call	 ?LinePenWidth@CNewBoxesDoc@@QAEHXZ ; CNewBoxesDoc::LinePenWidth
  00255	50		 push	 eax
  00256	6a 00		 push	 0
  00258	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _computerPen$[ebp]
  0025e	e8 00 00 00 00	 call	 ?CreatePen@CPen@@QAEHHHK@Z ; CPen::CreatePen

; 146  :   originalPen = pDC->SelectObject(&dotPen);

  00263	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _dotPen$[ebp]
  00269	50		 push	 eax
  0026a	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  0026d	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject
  00272	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _originalPen$[ebp], eax

; 147  :   location = pDoc->StatusTextLocation();

  00278	8d 8d 38 fe ff
	ff		 lea	 ecx, DWORD PTR $T35[ebp]
  0027e	51		 push	 ecx
  0027f	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00282	e8 00 00 00 00	 call	 ?StatusTextLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ; CNewBoxesDoc::StatusTextLocation
  00287	8b 10		 mov	 edx, DWORD PTR [eax]
  00289	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0028c	89 95 34 ff ff
	ff		 mov	 DWORD PTR _location$[ebp], edx
  00292	89 85 38 ff ff
	ff		 mov	 DWORD PTR _location$[ebp+4], eax

; 148  :   pDC->SetBkColor(pDoc->BackgroundColor());

  00298	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  0029b	e8 00 00 00 00	 call	 ?BackgroundColor@CNewBoxesDoc@@QAEKXZ ; CNewBoxesDoc::BackgroundColor
  002a0	8b f4		 mov	 esi, esp
  002a2	50		 push	 eax
  002a3	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  002a6	8b 11		 mov	 edx, DWORD PTR [ecx]
  002a8	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  002ab	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  002ae	ff d0		 call	 eax
  002b0	3b f4		 cmp	 esi, esp
  002b2	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 149  :   pDC->TextOut(location.x, location.y, CurrentProcess()->GetTitle());

  002b7	e8 00 00 00 00	 call	 ?CurrentProcess@@YAPAVPROCESS@@XZ ; CurrentProcess
  002bc	89 85 30 fd ff
	ff		 mov	 DWORD PTR tv220[ebp], eax
  002c2	8b f4		 mov	 esi, esp
  002c4	8d 8d 34 fe ff
	ff		 lea	 ecx, DWORD PTR $T34[ebp]
  002ca	51		 push	 ecx
  002cb	8b 95 30 fd ff
	ff		 mov	 edx, DWORD PTR tv220[ebp]
  002d1	8b 02		 mov	 eax, DWORD PTR [edx]
  002d3	8b 8d 30 fd ff
	ff		 mov	 ecx, DWORD PTR tv220[ebp]
  002d9	8b 10		 mov	 edx, DWORD PTR [eax]
  002db	ff d2		 call	 edx
  002dd	3b f4		 cmp	 esi, esp
  002df	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002e4	89 85 2c fd ff
	ff		 mov	 DWORD PTR tv137[ebp], eax
  002ea	8b 85 2c fd ff
	ff		 mov	 eax, DWORD PTR tv137[ebp]
  002f0	89 85 28 fd ff
	ff		 mov	 DWORD PTR tv1062[ebp], eax
  002f6	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  002fa	8b 8d 28 fd ff
	ff		 mov	 ecx, DWORD PTR tv1062[ebp]
  00300	51		 push	 ecx
  00301	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR _location$[ebp+4]
  00307	52		 push	 edx
  00308	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR _location$[ebp]
  0030e	50		 push	 eax
  0030f	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00312	e8 00 00 00 00	 call	 ?TextOutA@CDC@@QAEHHHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CDC::TextOutA
  00317	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0031b	8b f4		 mov	 esi, esp
  0031d	8d 8d 34 fe ff
	ff		 lea	 ecx, DWORD PTR $T34[ebp]
  00323	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00329	3b f4		 cmp	 esi, esp
  0032b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 150  :   switch (displayMode)

  00330	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A ; displayMode
  00336	89 8d 24 fd ff
	ff		 mov	 DWORD PTR tv217[ebp], ecx
  0033c	83 bd 24 fd ff
	ff 02		 cmp	 DWORD PTR tv217[ebp], 2
  00343	74 0b		 je	 SHORT $LN33@OnDraw
  00345	83 bd 24 fd ff
	ff 03		 cmp	 DWORD PTR tv217[ebp], 3
  0034c	74 20		 je	 SHORT $LN34@OnDraw
  0034e	eb 3a		 jmp	 SHORT $LN35@OnDraw
$LN33@OnDraw:

; 151  :   {
; 152  :   case DISPLAY_LOOP:   minMax = pDoc->ComputeLoopWeights(0); break;

  00350	6a 00		 push	 0
  00352	8d 95 2c fe ff
	ff		 lea	 edx, DWORD PTR $T33[ebp]
  00358	52		 push	 edx
  00359	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  0035c	e8 00 00 00 00	 call	 ?ComputeLoopWeights@CNewBoxesDoc@@QAE?AUtagPOINT@@H@Z ; CNewBoxesDoc::ComputeLoopWeights
  00361	8b 08		 mov	 ecx, DWORD PTR [eax]
  00363	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00366	89 4d dc	 mov	 DWORD PTR _minMax$[ebp], ecx
  00369	89 55 e0	 mov	 DWORD PTR _minMax$[ebp+4], edx
  0036c	eb 2a		 jmp	 SHORT $LN2@OnDraw
$LN34@OnDraw:

; 153  :   case DISPLAY_DIVIDE: minMax = pDoc->ComputeDivideWeights(); break;

  0036e	8d 85 24 fe ff
	ff		 lea	 eax, DWORD PTR $T32[ebp]
  00374	50		 push	 eax
  00375	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00378	e8 00 00 00 00	 call	 ?ComputeDivideWeights@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ; CNewBoxesDoc::ComputeDivideWeights
  0037d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0037f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00382	89 4d dc	 mov	 DWORD PTR _minMax$[ebp], ecx
  00385	89 55 e0	 mov	 DWORD PTR _minMax$[ebp+4], edx
  00388	eb 0e		 jmp	 SHORT $LN2@OnDraw
$LN35@OnDraw:

; 154  :   default: minMax.x=0; minMax.y=1;

  0038a	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _minMax$[ebp], 0
  00391	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _minMax$[ebp+4], 1
$LN2@OnDraw:

; 155  :   };
; 156  :   for (dotNum.y=0; dotNum.y<gameSize.y-1; dotNum.y++)

  00398	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _dotNum$[ebp+4], 0
  003a2	eb 0f		 jmp	 SHORT $LN6@OnDraw
$LN4@OnDraw:
  003a4	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _dotNum$[ebp+4]
  003aa	83 c0 01	 add	 eax, 1
  003ad	89 85 48 ff ff
	ff		 mov	 DWORD PTR _dotNum$[ebp+4], eax
$LN6@OnDraw:
  003b3	8b 4d a0	 mov	 ecx, DWORD PTR _gameSize$[ebp+4]
  003b6	83 e9 01	 sub	 ecx, 1
  003b9	39 8d 48 ff ff
	ff		 cmp	 DWORD PTR _dotNum$[ebp+4], ecx
  003bf	0f 8d 11 01 00
	00		 jge	 $LN5@OnDraw

; 157  :   {
; 158  :     for (dotNum.x=0; dotNum.x<gameSize.x-1; dotNum.x++)

  003c5	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _dotNum$[ebp], 0
  003cf	eb 0f		 jmp	 SHORT $LN9@OnDraw
$LN7@OnDraw:
  003d1	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _dotNum$[ebp]
  003d7	83 c2 01	 add	 edx, 1
  003da	89 95 44 ff ff
	ff		 mov	 DWORD PTR _dotNum$[ebp], edx
$LN9@OnDraw:
  003e0	8b 45 9c	 mov	 eax, DWORD PTR _gameSize$[ebp]
  003e3	83 e8 01	 sub	 eax, 1
  003e6	39 85 44 ff ff
	ff		 cmp	 DWORD PTR _dotNum$[ebp], eax
  003ec	0f 8d df 00 00
	00		 jge	 $LN8@OnDraw

; 159  :     {
; 160  :       owner = pDoc->BoxOwner(dotNum);

  003f2	8d 8d 44 ff ff
	ff		 lea	 ecx, DWORD PTR _dotNum$[ebp]
  003f8	51		 push	 ecx
  003f9	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  003fc	e8 00 00 00 00	 call	 ?BoxOwner@CNewBoxesDoc@@QBE?AW4OWNER_TYPE@@ABUtagPOINT@@@Z ; CNewBoxesDoc::BoxOwner
  00401	89 85 28 ff ff
	ff		 mov	 DWORD PTR _owner$[ebp], eax

; 161  :       dotXY = screenOffset + dotSpacing * dotNum;

  00407	8d 95 44 ff ff
	ff		 lea	 edx, DWORD PTR _dotNum$[ebp]
  0040d	52		 push	 edx
  0040e	8d 85 1c fe ff
	ff		 lea	 eax, DWORD PTR $T31[ebp]
  00414	50		 push	 eax
  00415	8d 4d 8c	 lea	 ecx, DWORD PTR _dotSpacing$[ebp]
  00418	e8 00 00 00 00	 call	 ??DVECTOR@@QAE?AV0@ABV0@@Z ; VECTOR::operator*
  0041d	50		 push	 eax
  0041e	8d 8d 14 fe ff
	ff		 lea	 ecx, DWORD PTR $T30[ebp]
  00424	51		 push	 ecx
  00425	8d 4d cc	 lea	 ecx, DWORD PTR _screenOffset$[ebp]
  00428	e8 00 00 00 00	 call	 ??HVECTOR@@QAE?AV0@ABV0@@Z ; VECTOR::operator+
  0042d	8b 10		 mov	 edx, DWORD PTR [eax]
  0042f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00432	89 55 bc	 mov	 DWORD PTR _dotXY$[ebp], edx
  00435	89 45 c0	 mov	 DWORD PTR _dotXY$[ebp+4], eax

; 162  :       switch (displayMode)

  00438	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A ; displayMode
  0043e	89 8d 20 fd ff
	ff		 mov	 DWORD PTR tv347[ebp], ecx
  00444	83 bd 20 fd ff
	ff 01		 cmp	 DWORD PTR tv347[ebp], 1
  0044b	74 02		 je	 SHORT $LN36@OnDraw
  0044d	eb 50		 jmp	 SHORT $LN40@OnDraw
$LN36@OnDraw:

; 163  :       {
; 164  :       case DISPLAY_GAME:
; 165  :         {
; 166  :           switch (owner)

  0044f	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _owner$[ebp]
  00455	89 95 1c fd ff
	ff		 mov	 DWORD PTR tv348[ebp], edx
  0045b	83 bd 1c fd ff
	ff 01		 cmp	 DWORD PTR tv348[ebp], 1
  00462	74 0b		 je	 SHORT $LN37@OnDraw
  00464	83 bd 1c fd ff
	ff 02		 cmp	 DWORD PTR tv348[ebp], 2
  0046b	74 12		 je	 SHORT $LN38@OnDraw
  0046d	eb 20		 jmp	 SHORT $LN39@OnDraw
$LN37@OnDraw:

; 167  :           {
; 168  :           case OWNER_HUMAN:    fillColor = pDoc->HumanBoxColor();    break;

  0046f	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00472	e8 00 00 00 00	 call	 ?HumanBoxColor@CNewBoxesDoc@@QAEKXZ ; CNewBoxesDoc::HumanBoxColor
  00477	89 85 20 ff ff
	ff		 mov	 DWORD PTR _fillColor$[ebp], eax
  0047d	eb 1e		 jmp	 SHORT $LN12@OnDraw
$LN38@OnDraw:

; 169  :           case OWNER_COMPUTER: fillColor = pDoc->ComputerBoxColor(); break;

  0047f	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00482	e8 00 00 00 00	 call	 ?ComputerBoxColor@CNewBoxesDoc@@QAEKXZ ; CNewBoxesDoc::ComputerBoxColor
  00487	89 85 20 ff ff
	ff		 mov	 DWORD PTR _fillColor$[ebp], eax
  0048d	eb 0e		 jmp	 SHORT $LN12@OnDraw
$LN39@OnDraw:

; 170  :           default: fillColor = pDoc->BackgroundColor();

  0048f	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00492	e8 00 00 00 00	 call	 ?BackgroundColor@CNewBoxesDoc@@QAEKXZ ; CNewBoxesDoc::BackgroundColor
  00497	89 85 20 ff ff
	ff		 mov	 DWORD PTR _fillColor$[ebp], eax
$LN12@OnDraw:

; 171  :           };
; 172  :           break;

  0049d	eb 0e		 jmp	 SHORT $LN10@OnDraw
$LN40@OnDraw:

; 173  :         };
; 174  :       default: fillColor = pDoc->BackgroundColor();

  0049f	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  004a2	e8 00 00 00 00	 call	 ?BackgroundColor@CNewBoxesDoc@@QAEKXZ ; CNewBoxesDoc::BackgroundColor
  004a7	89 85 20 ff ff
	ff		 mov	 DWORD PTR _fillColor$[ebp], eax
$LN10@OnDraw:

; 175  :       };
; 176  :       pDC->FillSolidRect(dotXY.x, dotXY.y,

  004ad	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _fillColor$[ebp]
  004b3	50		 push	 eax
  004b4	8b 4d 90	 mov	 ecx, DWORD PTR _dotSpacing$[ebp+4]
  004b7	51		 push	 ecx
  004b8	8b 55 8c	 mov	 edx, DWORD PTR _dotSpacing$[ebp]
  004bb	52		 push	 edx
  004bc	8b 45 c0	 mov	 eax, DWORD PTR _dotXY$[ebp+4]
  004bf	50		 push	 eax
  004c0	8b 4d bc	 mov	 ecx, DWORD PTR _dotXY$[ebp]
  004c3	51		 push	 ecx
  004c4	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  004c7	e8 00 00 00 00	 call	 ?FillSolidRect@CDC@@QAEXHHHHK@Z ; CDC::FillSolidRect

; 177  :                          dotSpacing.x, dotSpacing.y,
; 178  :                          fillColor);
; 179  :     };

  004cc	e9 00 ff ff ff	 jmp	 $LN7@OnDraw
$LN8@OnDraw:

; 180  :   };

  004d1	e9 ce fe ff ff	 jmp	 $LN4@OnDraw
$LN5@OnDraw:

; 181  :   for (dotNum.y=0; dotNum.y<gameSize.y; dotNum.y++)

  004d6	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _dotNum$[ebp+4], 0
  004e0	eb 0f		 jmp	 SHORT $LN16@OnDraw
$LN14@OnDraw:
  004e2	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR _dotNum$[ebp+4]
  004e8	83 c2 01	 add	 edx, 1
  004eb	89 95 48 ff ff
	ff		 mov	 DWORD PTR _dotNum$[ebp+4], edx
$LN16@OnDraw:
  004f1	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _dotNum$[ebp+4]
  004f7	3b 45 a0	 cmp	 eax, DWORD PTR _gameSize$[ebp+4]
  004fa	0f 8d 43 08 00
	00		 jge	 $LN15@OnDraw

; 182  :   {
; 183  :     for (dotNum.x=0; dotNum.x<gameSize.x; dotNum.x++)

  00500	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _dotNum$[ebp], 0
  0050a	eb 0f		 jmp	 SHORT $LN19@OnDraw
$LN17@OnDraw:
  0050c	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _dotNum$[ebp]
  00512	83 c1 01	 add	 ecx, 1
  00515	89 8d 44 ff ff
	ff		 mov	 DWORD PTR _dotNum$[ebp], ecx
$LN19@OnDraw:
  0051b	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _dotNum$[ebp]
  00521	3b 55 9c	 cmp	 edx, DWORD PTR _gameSize$[ebp]
  00524	0f 8d 14 08 00
	00		 jge	 $LN18@OnDraw

; 184  :     {
; 185  :       dotXY = screenOffset + dotSpacing * dotNum;

  0052a	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _dotNum$[ebp]
  00530	50		 push	 eax
  00531	8d 8d 0c fe ff
	ff		 lea	 ecx, DWORD PTR $T29[ebp]
  00537	51		 push	 ecx
  00538	8d 4d 8c	 lea	 ecx, DWORD PTR _dotSpacing$[ebp]
  0053b	e8 00 00 00 00	 call	 ??DVECTOR@@QAE?AV0@ABV0@@Z ; VECTOR::operator*
  00540	50		 push	 eax
  00541	8d 95 04 fe ff
	ff		 lea	 edx, DWORD PTR $T28[ebp]
  00547	52		 push	 edx
  00548	8d 4d cc	 lea	 ecx, DWORD PTR _screenOffset$[ebp]
  0054b	e8 00 00 00 00	 call	 ??HVECTOR@@QAE?AV0@ABV0@@Z ; VECTOR::operator+
  00550	8b 08		 mov	 ecx, DWORD PTR [eax]
  00552	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00555	89 4d bc	 mov	 DWORD PTR _dotXY$[ebp], ecx
  00558	89 55 c0	 mov	 DWORD PTR _dotXY$[ebp+4], edx

; 186  :       if (dotNum.y < gameSize.y-1)

  0055b	8b 45 a0	 mov	 eax, DWORD PTR _gameSize$[ebp+4]
  0055e	83 e8 01	 sub	 eax, 1
  00561	39 85 48 ff ff
	ff		 cmp	 DWORD PTR _dotNum$[ebp+4], eax
  00567	0f 8d 99 03 00
	00		 jge	 $LN41@OnDraw

; 187  :       {
; 188  :         lineType = pDoc->VerticalLineType(dotNum);

  0056d	8d 8d 44 ff ff
	ff		 lea	 ecx, DWORD PTR _dotNum$[ebp]
  00573	51		 push	 ecx
  00574	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00577	e8 00 00 00 00	 call	 ?VerticalLineType@CNewBoxesDoc@@QBE?AW4LINE_TYPE@@ABUtagPOINT@@@Z ; CNewBoxesDoc::VerticalLineType
  0057c	89 85 2c ff ff
	ff		 mov	 DWORD PTR _lineType$[ebp], eax

; 189  :         if (lineType != LINE_NONE) moveCount++;

  00582	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR _lineType$[ebp], 0
  00589	74 0f		 je	 SHORT $LN42@OnDraw
  0058b	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR _moveCount$[ebp]
  00591	83 c2 01	 add	 edx, 1
  00594	89 95 24 ff ff
	ff		 mov	 DWORD PTR _moveCount$[ebp], edx
$LN42@OnDraw:

; 190  :         switch (displayMode)

  0059a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A ; displayMode
  0059f	89 85 18 fd ff
	ff		 mov	 DWORD PTR tv462[ebp], eax
  005a5	83 bd 18 fd ff
	ff 01		 cmp	 DWORD PTR tv462[ebp], 1
  005ac	0f 84 10 02 00
	00		 je	 $LN45@OnDraw
  005b2	83 bd 18 fd ff
	ff 02		 cmp	 DWORD PTR tv462[ebp], 2
  005b9	0f 84 0a 01 00
	00		 je	 $LN44@OnDraw
  005bf	83 bd 18 fd ff
	ff 03		 cmp	 DWORD PTR tv462[ebp], 3
  005c6	74 05		 je	 SHORT $LN43@OnDraw
  005c8	e9 f7 01 00 00	 jmp	 $LN46@OnDraw
$LN43@OnDraw:

; 191  :         {
; 192  :         case DISPLAY_DIVIDE:
; 193  :           {
; 194  :             CPen specialPen;

  005cd	8d 8d a4 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$44[ebp]
  005d3	e8 00 00 00 00	 call	 ??0CPen@@QAE@XZ		; CPen::CPen
  005d8	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8

; 195  :             specialPen.CreatePen(

  005dc	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _dotNum$[ebp]
  005e2	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR _dotNum$[ebp+4]
  005e8	89 8d fc fd ff
	ff		 mov	 DWORD PTR $T27[ebp], ecx
  005ee	89 95 00 fe ff
	ff		 mov	 DWORD PTR $T27[ebp+4], edx
  005f4	8b 45 e0	 mov	 eax, DWORD PTR _minMax$[ebp+4]
  005f7	50		 push	 eax
  005f8	8b 4d dc	 mov	 ecx, DWORD PTR _minMax$[ebp]
  005fb	51		 push	 ecx
  005fc	8b 95 00 fe ff
	ff		 mov	 edx, DWORD PTR $T27[ebp+4]
  00602	52		 push	 edx
  00603	8b 85 fc fd ff
	ff		 mov	 eax, DWORD PTR $T27[ebp]
  00609	50		 push	 eax
  0060a	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  0060d	e8 00 00 00 00	 call	 ?VerticalDivideWeight@CNewBoxesDoc@@QAEHUtagPOINT@@@Z ; CNewBoxesDoc::VerticalDivideWeight
  00612	50		 push	 eax
  00613	e8 00 00 00 00	 call	 ?Weight2Color@@YAKHUtagPOINT@@@Z ; Weight2Color
  00618	83 c4 0c	 add	 esp, 12			; 0000000cH
  0061b	50		 push	 eax
  0061c	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  0061f	e8 00 00 00 00	 call	 ?LinePenWidth@CNewBoxesDoc@@QAEHXZ ; CNewBoxesDoc::LinePenWidth
  00624	6b c8 03	 imul	 ecx, eax, 3
  00627	51		 push	 ecx
  00628	6a 00		 push	 0
  0062a	8d 8d a4 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$44[ebp]
  00630	e8 00 00 00 00	 call	 ?CreatePen@CPen@@QAEHHHK@Z ; CPen::CreatePen

; 196  :                         0,
; 197  :                         3*pDoc->LinePenWidth(),
; 198  :                         Weight2Color(pDoc->VerticalDivideWeight(dotNum), minMax));
; 199  :             pDC->SelectObject(specialPen);

  00635	8d 8d a4 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$44[ebp]
  0063b	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  00640	50		 push	 eax
  00641	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00644	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject

; 200  :             pDC->MoveTo(dotXY);

  00649	8b 55 bc	 mov	 edx, DWORD PTR _dotXY$[ebp]
  0064c	8b 45 c0	 mov	 eax, DWORD PTR _dotXY$[ebp+4]
  0064f	89 95 f4 fd ff
	ff		 mov	 DWORD PTR $T26[ebp], edx
  00655	89 85 f8 fd ff
	ff		 mov	 DWORD PTR $T26[ebp+4], eax
  0065b	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR $T26[ebp+4]
  00661	51		 push	 ecx
  00662	8b 95 f4 fd ff
	ff		 mov	 edx, DWORD PTR $T26[ebp]
  00668	52		 push	 edx
  00669	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR $T25[ebp]
  0066f	50		 push	 eax
  00670	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00673	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@UtagPOINT@@@Z ; CDC::MoveTo

; 201  :             neighborXY = dotXY;

  00678	8b 4d bc	 mov	 ecx, DWORD PTR _dotXY$[ebp]
  0067b	8b 55 c0	 mov	 edx, DWORD PTR _dotXY$[ebp+4]
  0067e	89 4d ac	 mov	 DWORD PTR _neighborXY$[ebp], ecx
  00681	89 55 b0	 mov	 DWORD PTR _neighborXY$[ebp+4], edx

; 202  :             neighborXY.y += dotSpacing.y;   // A vertical line down.

  00684	8b 45 b0	 mov	 eax, DWORD PTR _neighborXY$[ebp+4]
  00687	03 45 90	 add	 eax, DWORD PTR _dotSpacing$[ebp+4]
  0068a	89 45 b0	 mov	 DWORD PTR _neighborXY$[ebp+4], eax

; 203  :             pDC->LineTo(neighborXY);

  0068d	8b 4d ac	 mov	 ecx, DWORD PTR _neighborXY$[ebp]
  00690	8b 55 b0	 mov	 edx, DWORD PTR _neighborXY$[ebp+4]
  00693	89 8d e4 fd ff
	ff		 mov	 DWORD PTR $T24[ebp], ecx
  00699	89 95 e8 fd ff
	ff		 mov	 DWORD PTR $T24[ebp+4], edx
  0069f	8b 85 e8 fd ff
	ff		 mov	 eax, DWORD PTR $T24[ebp+4]
  006a5	50		 push	 eax
  006a6	8b 8d e4 fd ff
	ff		 mov	 ecx, DWORD PTR $T24[ebp]
  006ac	51		 push	 ecx
  006ad	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  006b0	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHUtagPOINT@@@Z ; CDC::LineTo

; 204  :           };

  006b5	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  006b9	8d 8d a4 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$44[ebp]
  006bf	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen

; 205  :           break;

  006c4	e9 08 01 00 00	 jmp	 $LN20@OnDraw
$LN44@OnDraw:

; 206  :         case DISPLAY_LOOP:
; 207  :           {
; 208  :             CPen specialPen;

  006c9	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$43[ebp]
  006cf	e8 00 00 00 00	 call	 ??0CPen@@QAE@XZ		; CPen::CPen
  006d4	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9

; 209  :             specialPen.CreatePen(

  006d8	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _dotNum$[ebp]
  006de	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _dotNum$[ebp+4]
  006e4	89 95 dc fd ff
	ff		 mov	 DWORD PTR $T23[ebp], edx
  006ea	89 85 e0 fd ff
	ff		 mov	 DWORD PTR $T23[ebp+4], eax
  006f0	8b 4d e0	 mov	 ecx, DWORD PTR _minMax$[ebp+4]
  006f3	51		 push	 ecx
  006f4	8b 55 dc	 mov	 edx, DWORD PTR _minMax$[ebp]
  006f7	52		 push	 edx
  006f8	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR $T23[ebp+4]
  006fe	50		 push	 eax
  006ff	8b 8d dc fd ff
	ff		 mov	 ecx, DWORD PTR $T23[ebp]
  00705	51		 push	 ecx
  00706	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00709	e8 00 00 00 00	 call	 ?VerticalLoopWeight@CNewBoxesDoc@@QAEHUtagPOINT@@@Z ; CNewBoxesDoc::VerticalLoopWeight
  0070e	50		 push	 eax
  0070f	e8 00 00 00 00	 call	 ?Weight2Color@@YAKHUtagPOINT@@@Z ; Weight2Color
  00714	83 c4 0c	 add	 esp, 12			; 0000000cH
  00717	50		 push	 eax
  00718	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  0071b	e8 00 00 00 00	 call	 ?LinePenWidth@CNewBoxesDoc@@QAEHXZ ; CNewBoxesDoc::LinePenWidth
  00720	6b d0 03	 imul	 edx, eax, 3
  00723	52		 push	 edx
  00724	6a 00		 push	 0
  00726	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$43[ebp]
  0072c	e8 00 00 00 00	 call	 ?CreatePen@CPen@@QAEHHHK@Z ; CPen::CreatePen

; 210  :                         0,
; 211  :                         3*pDoc->LinePenWidth(),
; 212  :                         Weight2Color(pDoc->VerticalLoopWeight(dotNum), minMax));
; 213  :             pDC->SelectObject(specialPen);

  00731	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$43[ebp]
  00737	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  0073c	50		 push	 eax
  0073d	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00740	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject

; 214  :             pDC->MoveTo(dotXY);

  00745	8b 45 bc	 mov	 eax, DWORD PTR _dotXY$[ebp]
  00748	8b 4d c0	 mov	 ecx, DWORD PTR _dotXY$[ebp+4]
  0074b	89 85 d4 fd ff
	ff		 mov	 DWORD PTR $T22[ebp], eax
  00751	89 8d d8 fd ff
	ff		 mov	 DWORD PTR $T22[ebp+4], ecx
  00757	8b 95 d8 fd ff
	ff		 mov	 edx, DWORD PTR $T22[ebp+4]
  0075d	52		 push	 edx
  0075e	8b 85 d4 fd ff
	ff		 mov	 eax, DWORD PTR $T22[ebp]
  00764	50		 push	 eax
  00765	8d 8d cc fd ff
	ff		 lea	 ecx, DWORD PTR $T21[ebp]
  0076b	51		 push	 ecx
  0076c	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  0076f	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@UtagPOINT@@@Z ; CDC::MoveTo

; 215  :             neighborXY = dotXY;

  00774	8b 55 bc	 mov	 edx, DWORD PTR _dotXY$[ebp]
  00777	8b 45 c0	 mov	 eax, DWORD PTR _dotXY$[ebp+4]
  0077a	89 55 ac	 mov	 DWORD PTR _neighborXY$[ebp], edx
  0077d	89 45 b0	 mov	 DWORD PTR _neighborXY$[ebp+4], eax

; 216  :             neighborXY.y += dotSpacing.y;   // A vertical line down.

  00780	8b 4d b0	 mov	 ecx, DWORD PTR _neighborXY$[ebp+4]
  00783	03 4d 90	 add	 ecx, DWORD PTR _dotSpacing$[ebp+4]
  00786	89 4d b0	 mov	 DWORD PTR _neighborXY$[ebp+4], ecx

; 217  :             pDC->LineTo(neighborXY);

  00789	8b 55 ac	 mov	 edx, DWORD PTR _neighborXY$[ebp]
  0078c	8b 45 b0	 mov	 eax, DWORD PTR _neighborXY$[ebp+4]
  0078f	89 95 c4 fd ff
	ff		 mov	 DWORD PTR $T20[ebp], edx
  00795	89 85 c8 fd ff
	ff		 mov	 DWORD PTR $T20[ebp+4], eax
  0079b	8b 8d c8 fd ff
	ff		 mov	 ecx, DWORD PTR $T20[ebp+4]
  007a1	51		 push	 ecx
  007a2	8b 95 c4 fd ff
	ff		 mov	 edx, DWORD PTR $T20[ebp]
  007a8	52		 push	 edx
  007a9	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  007ac	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHUtagPOINT@@@Z ; CDC::LineTo

; 218  :           };

  007b1	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  007b5	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$43[ebp]
  007bb	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen

; 219  :           break;

  007c0	eb 0f		 jmp	 SHORT $LN20@OnDraw
$LN45@OnDraw:

; 220  :         case DISPLAY_GAME: break;

  007c2	eb 0d		 jmp	 SHORT $LN20@OnDraw
$LN46@OnDraw:

; 221  :         default: ImplementationError("Unknown Display Mode");

  007c4	68 00 00 00 00	 push	 OFFSET $SG226837
  007c9	e8 00 00 00 00	 call	 ?ImplementationError@@YAXPBD@Z ; ImplementationError
  007ce	83 c4 04	 add	 esp, 4
$LN20@OnDraw:

; 222  :         };
; 223  :         switch (displayMode)

  007d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A ; displayMode
  007d6	89 85 14 fd ff
	ff		 mov	 DWORD PTR tv573[ebp], eax
  007dc	83 bd 14 fd ff
	ff 01		 cmp	 DWORD PTR tv573[ebp], 1
  007e3	74 17		 je	 SHORT $LN47@OnDraw
  007e5	83 bd 14 fd ff
	ff 02		 cmp	 DWORD PTR tv573[ebp], 2
  007ec	74 79		 je	 SHORT $LN52@OnDraw
  007ee	83 bd 14 fd ff
	ff 03		 cmp	 DWORD PTR tv573[ebp], 3
  007f5	74 70		 je	 SHORT $LN52@OnDraw
  007f7	e9 9e 00 00 00	 jmp	 $LN22@OnDraw
$LN47@OnDraw:

; 224  :         {
; 225  :         case DISPLAY_GAME:
; 226  :           switch (lineType)

  007fc	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _lineType$[ebp]
  00802	89 8d 10 fd ff
	ff		 mov	 DWORD PTR tv574[ebp], ecx
  00808	83 bd 10 fd ff
	ff 00		 cmp	 DWORD PTR tv574[ebp], 0
  0080f	74 40		 je	 SHORT $LN50@OnDraw
  00811	83 bd 10 fd ff
	ff 01		 cmp	 DWORD PTR tv574[ebp], 1
  00818	74 21		 je	 SHORT $LN49@OnDraw
  0081a	83 bd 10 fd ff
	ff 02		 cmp	 DWORD PTR tv574[ebp], 2
  00821	74 02		 je	 SHORT $LN48@OnDraw
  00823	eb 40		 jmp	 SHORT $LN24@OnDraw
$LN48@OnDraw:

; 227  :           {
; 228  :           case LINE_HUMAN:    pDC->SelectObject(humanPen);    break;

  00825	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _humanPen$[ebp]
  0082b	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  00830	50		 push	 eax
  00831	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00834	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject
  00839	eb 2a		 jmp	 SHORT $LN24@OnDraw
$LN49@OnDraw:

; 229  :           case LINE_COMPUTER: pDC->SelectObject(computerPen); break;

  0083b	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _computerPen$[ebp]
  00841	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  00846	50		 push	 eax
  00847	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  0084a	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject
  0084f	eb 14		 jmp	 SHORT $LN24@OnDraw
$LN50@OnDraw:

; 230  :           case LINE_NONE:     pDC->SelectObject(backgroundPen); break;

  00851	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _backgroundPen$[ebp]
  00857	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  0085c	50		 push	 eax
  0085d	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00860	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject
$LN24@OnDraw:

; 231  :           };
; 232  :           break;

  00865	eb 33		 jmp	 SHORT $LN22@OnDraw
$LN52@OnDraw:

; 233  :         case DISPLAY_LOOP:
; 234  :         case DISPLAY_DIVIDE:
; 235  :           if (lineType == LINE_NONE)

  00867	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR _lineType$[ebp], 0
  0086e	75 16		 jne	 SHORT $LN53@OnDraw

; 236  :           {
; 237  :             pDC->SelectObject(whitePen);

  00870	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _whitePen$[ebp]
  00876	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  0087b	50		 push	 eax
  0087c	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  0087f	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject

; 238  :           }

  00884	eb 14		 jmp	 SHORT $LN22@OnDraw
$LN53@OnDraw:

; 239  :           else
; 240  :           {
; 241  :             pDC->SelectObject(blackPen);

  00886	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _blackPen$[ebp]
  0088c	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  00891	50		 push	 eax
  00892	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00895	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject
$LN22@OnDraw:

; 242  :           };
; 243  :           break;
; 244  :         };
; 245  :         pDC->MoveTo(dotXY);

  0089a	8b 55 bc	 mov	 edx, DWORD PTR _dotXY$[ebp]
  0089d	8b 45 c0	 mov	 eax, DWORD PTR _dotXY$[ebp+4]
  008a0	89 95 bc fd ff
	ff		 mov	 DWORD PTR $T19[ebp], edx
  008a6	89 85 c0 fd ff
	ff		 mov	 DWORD PTR $T19[ebp+4], eax
  008ac	8b 8d c0 fd ff
	ff		 mov	 ecx, DWORD PTR $T19[ebp+4]
  008b2	51		 push	 ecx
  008b3	8b 95 bc fd ff
	ff		 mov	 edx, DWORD PTR $T19[ebp]
  008b9	52		 push	 edx
  008ba	8d 85 b4 fd ff
	ff		 lea	 eax, DWORD PTR $T18[ebp]
  008c0	50		 push	 eax
  008c1	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  008c4	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@UtagPOINT@@@Z ; CDC::MoveTo

; 246  :         neighborXY = dotXY;

  008c9	8b 4d bc	 mov	 ecx, DWORD PTR _dotXY$[ebp]
  008cc	8b 55 c0	 mov	 edx, DWORD PTR _dotXY$[ebp+4]
  008cf	89 4d ac	 mov	 DWORD PTR _neighborXY$[ebp], ecx
  008d2	89 55 b0	 mov	 DWORD PTR _neighborXY$[ebp+4], edx

; 247  :         neighborXY.y += dotSpacing.y;   // A vertical line down.

  008d5	8b 45 b0	 mov	 eax, DWORD PTR _neighborXY$[ebp+4]
  008d8	03 45 90	 add	 eax, DWORD PTR _dotSpacing$[ebp+4]
  008db	89 45 b0	 mov	 DWORD PTR _neighborXY$[ebp+4], eax

; 248  :         pDC->LineTo(neighborXY);

  008de	8b 4d ac	 mov	 ecx, DWORD PTR _neighborXY$[ebp]
  008e1	8b 55 b0	 mov	 edx, DWORD PTR _neighborXY$[ebp+4]
  008e4	89 8d ac fd ff
	ff		 mov	 DWORD PTR $T17[ebp], ecx
  008ea	89 95 b0 fd ff
	ff		 mov	 DWORD PTR $T17[ebp+4], edx
  008f0	8b 85 b0 fd ff
	ff		 mov	 eax, DWORD PTR $T17[ebp+4]
  008f6	50		 push	 eax
  008f7	8b 8d ac fd ff
	ff		 mov	 ecx, DWORD PTR $T17[ebp]
  008fd	51		 push	 ecx
  008fe	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00901	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHUtagPOINT@@@Z ; CDC::LineTo
$LN41@OnDraw:

; 249  :       };// if dotNum.y
; 250  :       if (dotNum.x < gameSize.x-1)

  00906	8b 55 9c	 mov	 edx, DWORD PTR _gameSize$[ebp]
  00909	83 ea 01	 sub	 edx, 1
  0090c	39 95 44 ff ff
	ff		 cmp	 DWORD PTR _dotNum$[ebp], edx
  00912	0f 8d b9 03 00
	00		 jge	 $LN55@OnDraw

; 251  :       {
; 252  :         CPen specialPen;

  00918	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$42[ebp]
  0091e	e8 00 00 00 00	 call	 ??0CPen@@QAE@XZ		; CPen::CPen
  00923	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH

; 253  :         lineType = pDoc->HorizontalLineType(dotNum);

  00927	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _dotNum$[ebp]
  0092d	50		 push	 eax
  0092e	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00931	e8 00 00 00 00	 call	 ?HorizontalLineType@CNewBoxesDoc@@QBE?AW4LINE_TYPE@@ABUtagPOINT@@@Z ; CNewBoxesDoc::HorizontalLineType
  00936	89 85 2c ff ff
	ff		 mov	 DWORD PTR _lineType$[ebp], eax

; 254  :         if (lineType != LINE_NONE) moveCount++;

  0093c	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR _lineType$[ebp], 0
  00943	74 0f		 je	 SHORT $LN56@OnDraw
  00945	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR _moveCount$[ebp]
  0094b	83 c1 01	 add	 ecx, 1
  0094e	89 8d 24 ff ff
	ff		 mov	 DWORD PTR _moveCount$[ebp], ecx
$LN56@OnDraw:

; 255  :         switch (displayMode)

  00954	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A ; displayMode
  0095a	89 95 0c fd ff
	ff		 mov	 DWORD PTR tv703[ebp], edx
  00960	83 bd 0c fd ff
	ff 01		 cmp	 DWORD PTR tv703[ebp], 1
  00967	0f 84 10 02 00
	00		 je	 $LN59@OnDraw
  0096d	83 bd 0c fd ff
	ff 02		 cmp	 DWORD PTR tv703[ebp], 2
  00974	0f 84 0a 01 00
	00		 je	 $LN58@OnDraw
  0097a	83 bd 0c fd ff
	ff 03		 cmp	 DWORD PTR tv703[ebp], 3
  00981	74 05		 je	 SHORT $LN57@OnDraw
  00983	e9 f7 01 00 00	 jmp	 $LN60@OnDraw
$LN57@OnDraw:

; 256  :         {
; 257  :         case DISPLAY_DIVIDE:
; 258  :           {
; 259  :             CPen specialPen;

  00988	8d 8d 74 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$41[ebp]
  0098e	e8 00 00 00 00	 call	 ??0CPen@@QAE@XZ		; CPen::CPen
  00993	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH

; 260  :             specialPen.CreatePen(

  00997	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _dotNum$[ebp]
  0099d	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _dotNum$[ebp+4]
  009a3	89 85 a4 fd ff
	ff		 mov	 DWORD PTR $T16[ebp], eax
  009a9	89 8d a8 fd ff
	ff		 mov	 DWORD PTR $T16[ebp+4], ecx
  009af	8b 55 e0	 mov	 edx, DWORD PTR _minMax$[ebp+4]
  009b2	52		 push	 edx
  009b3	8b 45 dc	 mov	 eax, DWORD PTR _minMax$[ebp]
  009b6	50		 push	 eax
  009b7	8b 8d a8 fd ff
	ff		 mov	 ecx, DWORD PTR $T16[ebp+4]
  009bd	51		 push	 ecx
  009be	8b 95 a4 fd ff
	ff		 mov	 edx, DWORD PTR $T16[ebp]
  009c4	52		 push	 edx
  009c5	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  009c8	e8 00 00 00 00	 call	 ?HorizontalDivideWeight@CNewBoxesDoc@@QAEHUtagPOINT@@@Z ; CNewBoxesDoc::HorizontalDivideWeight
  009cd	50		 push	 eax
  009ce	e8 00 00 00 00	 call	 ?Weight2Color@@YAKHUtagPOINT@@@Z ; Weight2Color
  009d3	83 c4 0c	 add	 esp, 12			; 0000000cH
  009d6	50		 push	 eax
  009d7	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  009da	e8 00 00 00 00	 call	 ?LinePenWidth@CNewBoxesDoc@@QAEHXZ ; CNewBoxesDoc::LinePenWidth
  009df	6b c0 03	 imul	 eax, eax, 3
  009e2	50		 push	 eax
  009e3	6a 00		 push	 0
  009e5	8d 8d 74 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$41[ebp]
  009eb	e8 00 00 00 00	 call	 ?CreatePen@CPen@@QAEHHHK@Z ; CPen::CreatePen

; 261  :                        0,
; 262  :                        3*pDoc->LinePenWidth(),
; 263  :                        Weight2Color(pDoc->HorizontalDivideWeight(dotNum), minMax));
; 264  :             pDC->SelectObject(specialPen);

  009f0	8d 8d 74 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$41[ebp]
  009f6	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  009fb	50		 push	 eax
  009fc	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  009ff	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject

; 265  :             pDC->MoveTo(dotXY);

  00a04	8b 4d bc	 mov	 ecx, DWORD PTR _dotXY$[ebp]
  00a07	8b 55 c0	 mov	 edx, DWORD PTR _dotXY$[ebp+4]
  00a0a	89 8d 9c fd ff
	ff		 mov	 DWORD PTR $T15[ebp], ecx
  00a10	89 95 a0 fd ff
	ff		 mov	 DWORD PTR $T15[ebp+4], edx
  00a16	8b 85 a0 fd ff
	ff		 mov	 eax, DWORD PTR $T15[ebp+4]
  00a1c	50		 push	 eax
  00a1d	8b 8d 9c fd ff
	ff		 mov	 ecx, DWORD PTR $T15[ebp]
  00a23	51		 push	 ecx
  00a24	8d 95 94 fd ff
	ff		 lea	 edx, DWORD PTR $T14[ebp]
  00a2a	52		 push	 edx
  00a2b	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00a2e	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@UtagPOINT@@@Z ; CDC::MoveTo

; 266  :             neighborXY = dotXY; 

  00a33	8b 45 bc	 mov	 eax, DWORD PTR _dotXY$[ebp]
  00a36	8b 4d c0	 mov	 ecx, DWORD PTR _dotXY$[ebp+4]
  00a39	89 45 ac	 mov	 DWORD PTR _neighborXY$[ebp], eax
  00a3c	89 4d b0	 mov	 DWORD PTR _neighborXY$[ebp+4], ecx

; 267  :             neighborXY.x += dotSpacing.x;

  00a3f	8b 55 ac	 mov	 edx, DWORD PTR _neighborXY$[ebp]
  00a42	03 55 8c	 add	 edx, DWORD PTR _dotSpacing$[ebp]
  00a45	89 55 ac	 mov	 DWORD PTR _neighborXY$[ebp], edx

; 268  :             pDC->LineTo(neighborXY);  // A horizontal line right

  00a48	8b 45 ac	 mov	 eax, DWORD PTR _neighborXY$[ebp]
  00a4b	8b 4d b0	 mov	 ecx, DWORD PTR _neighborXY$[ebp+4]
  00a4e	89 85 8c fd ff
	ff		 mov	 DWORD PTR $T13[ebp], eax
  00a54	89 8d 90 fd ff
	ff		 mov	 DWORD PTR $T13[ebp+4], ecx
  00a5a	8b 95 90 fd ff
	ff		 mov	 edx, DWORD PTR $T13[ebp+4]
  00a60	52		 push	 edx
  00a61	8b 85 8c fd ff
	ff		 mov	 eax, DWORD PTR $T13[ebp]
  00a67	50		 push	 eax
  00a68	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00a6b	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHUtagPOINT@@@Z ; CDC::LineTo

; 269  :           };

  00a70	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00a74	8d 8d 74 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$41[ebp]
  00a7a	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen

; 270  :           break;

  00a7f	e9 08 01 00 00	 jmp	 $LN26@OnDraw
$LN58@OnDraw:

; 271  :         case DISPLAY_LOOP:
; 272  :           {
; 273  :             CPen specialPen;

  00a84	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$40[ebp]
  00a8a	e8 00 00 00 00	 call	 ??0CPen@@QAE@XZ		; CPen::CPen
  00a8f	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH

; 274  :             specialPen.CreatePen(

  00a93	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _dotNum$[ebp]
  00a99	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR _dotNum$[ebp+4]
  00a9f	89 8d 84 fd ff
	ff		 mov	 DWORD PTR $T12[ebp], ecx
  00aa5	89 95 88 fd ff
	ff		 mov	 DWORD PTR $T12[ebp+4], edx
  00aab	8b 45 e0	 mov	 eax, DWORD PTR _minMax$[ebp+4]
  00aae	50		 push	 eax
  00aaf	8b 4d dc	 mov	 ecx, DWORD PTR _minMax$[ebp]
  00ab2	51		 push	 ecx
  00ab3	8b 95 88 fd ff
	ff		 mov	 edx, DWORD PTR $T12[ebp+4]
  00ab9	52		 push	 edx
  00aba	8b 85 84 fd ff
	ff		 mov	 eax, DWORD PTR $T12[ebp]
  00ac0	50		 push	 eax
  00ac1	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00ac4	e8 00 00 00 00	 call	 ?HorizontalLoopWeight@CNewBoxesDoc@@QAEHUtagPOINT@@@Z ; CNewBoxesDoc::HorizontalLoopWeight
  00ac9	50		 push	 eax
  00aca	e8 00 00 00 00	 call	 ?Weight2Color@@YAKHUtagPOINT@@@Z ; Weight2Color
  00acf	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ad2	50		 push	 eax
  00ad3	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00ad6	e8 00 00 00 00	 call	 ?LinePenWidth@CNewBoxesDoc@@QAEHXZ ; CNewBoxesDoc::LinePenWidth
  00adb	6b c8 03	 imul	 ecx, eax, 3
  00ade	51		 push	 ecx
  00adf	6a 00		 push	 0
  00ae1	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$40[ebp]
  00ae7	e8 00 00 00 00	 call	 ?CreatePen@CPen@@QAEHHHK@Z ; CPen::CreatePen

; 275  :                        0,
; 276  :                        3*pDoc->LinePenWidth(),
; 277  :                        Weight2Color(pDoc->HorizontalLoopWeight(dotNum), minMax));
; 278  :             pDC->SelectObject(specialPen);

  00aec	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$40[ebp]
  00af2	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  00af7	50		 push	 eax
  00af8	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00afb	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject

; 279  :             pDC->MoveTo(dotXY);

  00b00	8b 55 bc	 mov	 edx, DWORD PTR _dotXY$[ebp]
  00b03	8b 45 c0	 mov	 eax, DWORD PTR _dotXY$[ebp+4]
  00b06	89 95 7c fd ff
	ff		 mov	 DWORD PTR $T11[ebp], edx
  00b0c	89 85 80 fd ff
	ff		 mov	 DWORD PTR $T11[ebp+4], eax
  00b12	8b 8d 80 fd ff
	ff		 mov	 ecx, DWORD PTR $T11[ebp+4]
  00b18	51		 push	 ecx
  00b19	8b 95 7c fd ff
	ff		 mov	 edx, DWORD PTR $T11[ebp]
  00b1f	52		 push	 edx
  00b20	8d 85 74 fd ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  00b26	50		 push	 eax
  00b27	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00b2a	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@UtagPOINT@@@Z ; CDC::MoveTo

; 280  :             neighborXY = dotXY; 

  00b2f	8b 4d bc	 mov	 ecx, DWORD PTR _dotXY$[ebp]
  00b32	8b 55 c0	 mov	 edx, DWORD PTR _dotXY$[ebp+4]
  00b35	89 4d ac	 mov	 DWORD PTR _neighborXY$[ebp], ecx
  00b38	89 55 b0	 mov	 DWORD PTR _neighborXY$[ebp+4], edx

; 281  :             neighborXY.x += dotSpacing.x;

  00b3b	8b 45 ac	 mov	 eax, DWORD PTR _neighborXY$[ebp]
  00b3e	03 45 8c	 add	 eax, DWORD PTR _dotSpacing$[ebp]
  00b41	89 45 ac	 mov	 DWORD PTR _neighborXY$[ebp], eax

; 282  :             pDC->LineTo(neighborXY);  // A horizontal line right

  00b44	8b 4d ac	 mov	 ecx, DWORD PTR _neighborXY$[ebp]
  00b47	8b 55 b0	 mov	 edx, DWORD PTR _neighborXY$[ebp+4]
  00b4a	89 8d 6c fd ff
	ff		 mov	 DWORD PTR $T9[ebp], ecx
  00b50	89 95 70 fd ff
	ff		 mov	 DWORD PTR $T9[ebp+4], edx
  00b56	8b 85 70 fd ff
	ff		 mov	 eax, DWORD PTR $T9[ebp+4]
  00b5c	50		 push	 eax
  00b5d	8b 8d 6c fd ff
	ff		 mov	 ecx, DWORD PTR $T9[ebp]
  00b63	51		 push	 ecx
  00b64	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00b67	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHUtagPOINT@@@Z ; CDC::LineTo

; 283  :           };

  00b6c	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  00b70	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$40[ebp]
  00b76	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen

; 284  :           break;

  00b7b	eb 0f		 jmp	 SHORT $LN26@OnDraw
$LN59@OnDraw:

; 285  :         case DISPLAY_GAME: break;

  00b7d	eb 0d		 jmp	 SHORT $LN26@OnDraw
$LN60@OnDraw:

; 286  :         default: ImplementationError("Unknown Display Mode");

  00b7f	68 00 00 00 00	 push	 OFFSET $SG226852
  00b84	e8 00 00 00 00	 call	 ?ImplementationError@@YAXPBD@Z ; ImplementationError
  00b89	83 c4 04	 add	 esp, 4
$LN26@OnDraw:

; 287  :         }; //switch (displayMode)
; 288  :         switch (displayMode)

  00b8c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?displayMode@@3W4DISPLAY_MODE@@A ; displayMode
  00b92	89 95 08 fd ff
	ff		 mov	 DWORD PTR tv812[ebp], edx
  00b98	83 bd 08 fd ff
	ff 01		 cmp	 DWORD PTR tv812[ebp], 1
  00b9f	74 17		 je	 SHORT $LN61@OnDraw
  00ba1	83 bd 08 fd ff
	ff 02		 cmp	 DWORD PTR tv812[ebp], 2
  00ba8	74 79		 je	 SHORT $LN66@OnDraw
  00baa	83 bd 08 fd ff
	ff 03		 cmp	 DWORD PTR tv812[ebp], 3
  00bb1	74 70		 je	 SHORT $LN66@OnDraw
  00bb3	e9 9e 00 00 00	 jmp	 $LN28@OnDraw
$LN61@OnDraw:

; 289  :         {
; 290  :         case DISPLAY_GAME:
; 291  :           switch (lineType)

  00bb8	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _lineType$[ebp]
  00bbe	89 85 04 fd ff
	ff		 mov	 DWORD PTR tv813[ebp], eax
  00bc4	83 bd 04 fd ff
	ff 00		 cmp	 DWORD PTR tv813[ebp], 0
  00bcb	74 40		 je	 SHORT $LN64@OnDraw
  00bcd	83 bd 04 fd ff
	ff 01		 cmp	 DWORD PTR tv813[ebp], 1
  00bd4	74 21		 je	 SHORT $LN63@OnDraw
  00bd6	83 bd 04 fd ff
	ff 02		 cmp	 DWORD PTR tv813[ebp], 2
  00bdd	74 02		 je	 SHORT $LN62@OnDraw
  00bdf	eb 40		 jmp	 SHORT $LN30@OnDraw
$LN62@OnDraw:

; 292  :           {
; 293  :           case LINE_HUMAN:    pDC->SelectObject(humanPen);    break;

  00be1	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _humanPen$[ebp]
  00be7	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  00bec	50		 push	 eax
  00bed	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00bf0	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject
  00bf5	eb 2a		 jmp	 SHORT $LN30@OnDraw
$LN63@OnDraw:

; 294  :           case LINE_COMPUTER: pDC->SelectObject(computerPen); break;

  00bf7	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _computerPen$[ebp]
  00bfd	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  00c02	50		 push	 eax
  00c03	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00c06	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject
  00c0b	eb 14		 jmp	 SHORT $LN30@OnDraw
$LN64@OnDraw:

; 295  :           case LINE_NONE:     pDC->SelectObject(backgroundPen); break;

  00c0d	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _backgroundPen$[ebp]
  00c13	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  00c18	50		 push	 eax
  00c19	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00c1c	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject
$LN30@OnDraw:

; 296  :           };
; 297  :           break;

  00c21	eb 33		 jmp	 SHORT $LN28@OnDraw
$LN66@OnDraw:

; 298  :         case DISPLAY_LOOP:
; 299  :         case DISPLAY_DIVIDE:
; 300  :           if (lineType == LINE_NONE)

  00c23	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR _lineType$[ebp], 0
  00c2a	75 16		 jne	 SHORT $LN67@OnDraw

; 301  :           {
; 302  :             pDC->SelectObject(whitePen);

  00c2c	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _whitePen$[ebp]
  00c32	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  00c37	50		 push	 eax
  00c38	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00c3b	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject

; 303  :           }

  00c40	eb 14		 jmp	 SHORT $LN28@OnDraw
$LN67@OnDraw:

; 304  :           else
; 305  :           {
; 306  :             pDC->SelectObject(blackPen);

  00c42	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _blackPen$[ebp]
  00c48	e8 00 00 00 00	 call	 ??BCGdiObject@@QBEPAXXZ	; CGdiObject::operator void *
  00c4d	50		 push	 eax
  00c4e	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00c51	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAXPAX@Z ; CDC::SelectObject
$LN28@OnDraw:

; 307  :           };
; 308  :           break;
; 309  :         };
; 310  :         pDC->MoveTo(dotXY);

  00c56	8b 4d bc	 mov	 ecx, DWORD PTR _dotXY$[ebp]
  00c59	8b 55 c0	 mov	 edx, DWORD PTR _dotXY$[ebp+4]
  00c5c	89 8d 64 fd ff
	ff		 mov	 DWORD PTR $T8[ebp], ecx
  00c62	89 95 68 fd ff
	ff		 mov	 DWORD PTR $T8[ebp+4], edx
  00c68	8b 85 68 fd ff
	ff		 mov	 eax, DWORD PTR $T8[ebp+4]
  00c6e	50		 push	 eax
  00c6f	8b 8d 64 fd ff
	ff		 mov	 ecx, DWORD PTR $T8[ebp]
  00c75	51		 push	 ecx
  00c76	8d 95 5c fd ff
	ff		 lea	 edx, DWORD PTR $T7[ebp]
  00c7c	52		 push	 edx
  00c7d	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00c80	e8 00 00 00 00	 call	 ?MoveTo@CDC@@QAE?AVCPoint@@UtagPOINT@@@Z ; CDC::MoveTo

; 311  :         neighborXY = dotXY; 

  00c85	8b 45 bc	 mov	 eax, DWORD PTR _dotXY$[ebp]
  00c88	8b 4d c0	 mov	 ecx, DWORD PTR _dotXY$[ebp+4]
  00c8b	89 45 ac	 mov	 DWORD PTR _neighborXY$[ebp], eax
  00c8e	89 4d b0	 mov	 DWORD PTR _neighborXY$[ebp+4], ecx

; 312  :         neighborXY.x += dotSpacing.x;

  00c91	8b 55 ac	 mov	 edx, DWORD PTR _neighborXY$[ebp]
  00c94	03 55 8c	 add	 edx, DWORD PTR _dotSpacing$[ebp]
  00c97	89 55 ac	 mov	 DWORD PTR _neighborXY$[ebp], edx

; 313  :         pDC->LineTo(neighborXY);  // A horizontal line right

  00c9a	8b 45 ac	 mov	 eax, DWORD PTR _neighborXY$[ebp]
  00c9d	8b 4d b0	 mov	 ecx, DWORD PTR _neighborXY$[ebp+4]
  00ca0	89 85 54 fd ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  00ca6	89 8d 58 fd ff
	ff		 mov	 DWORD PTR $T6[ebp+4], ecx
  00cac	8b 95 58 fd ff
	ff		 mov	 edx, DWORD PTR $T6[ebp+4]
  00cb2	52		 push	 edx
  00cb3	8b 85 54 fd ff
	ff		 mov	 eax, DWORD PTR $T6[ebp]
  00cb9	50		 push	 eax
  00cba	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00cbd	e8 00 00 00 00	 call	 ?LineTo@CDC@@QAEHUtagPOINT@@@Z ; CDC::LineTo

; 314  :       };// if dotNum.x

  00cc2	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00cc6	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$42[ebp]
  00ccc	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen
$LN55@OnDraw:

; 315  :       pDC->SelectObject(&dotPen);

  00cd1	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _dotPen$[ebp]
  00cd7	51		 push	 ecx
  00cd8	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00cdb	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 316  :       dotDesc.top = dotXY.y - dotSize.y/2;

  00ce0	8b 45 80	 mov	 eax, DWORD PTR _dotSize$[ebp+4]
  00ce3	99		 cdq
  00ce4	2b c2		 sub	 eax, edx
  00ce6	d1 f8		 sar	 eax, 1
  00ce8	8b 55 c0	 mov	 edx, DWORD PTR _dotXY$[ebp+4]
  00ceb	2b d0		 sub	 edx, eax
  00ced	89 95 58 ff ff
	ff		 mov	 DWORD PTR _dotDesc$[ebp+4], edx

; 317  :       dotDesc.left= dotXY.x - dotSize.x/2;

  00cf3	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _dotSize$[ebp]
  00cf9	99		 cdq
  00cfa	2b c2		 sub	 eax, edx
  00cfc	d1 f8		 sar	 eax, 1
  00cfe	8b 4d bc	 mov	 ecx, DWORD PTR _dotXY$[ebp]
  00d01	2b c8		 sub	 ecx, eax
  00d03	89 8d 54 ff ff
	ff		 mov	 DWORD PTR _dotDesc$[ebp], ecx

; 318  :       dotDesc.bottom = dotDesc.top + dotSize.y;

  00d09	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR _dotDesc$[ebp+4]
  00d0f	03 55 80	 add	 edx, DWORD PTR _dotSize$[ebp+4]
  00d12	89 95 60 ff ff
	ff		 mov	 DWORD PTR _dotDesc$[ebp+12], edx

; 319  :       dotDesc.right  = dotDesc.left + dotSize.x;

  00d18	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _dotDesc$[ebp]
  00d1e	03 85 7c ff ff
	ff		 add	 eax, DWORD PTR _dotSize$[ebp]
  00d24	89 85 5c ff ff
	ff		 mov	 DWORD PTR _dotDesc$[ebp+8], eax

; 320  :       pDC->Ellipse(&dotDesc);

  00d2a	8d 8d 54 ff ff
	ff		 lea	 ecx, DWORD PTR _dotDesc$[ebp]
  00d30	51		 push	 ecx
  00d31	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00d34	e8 00 00 00 00	 call	 ?Ellipse@CDC@@QAEHPBUtagRECT@@@Z ; CDC::Ellipse

; 321  :     };// for dotNum.x

  00d39	e9 ce f7 ff ff	 jmp	 $LN17@OnDraw
$LN18@OnDraw:

; 322  :   }; // for dotNum.y

  00d3e	e9 9f f7 ff ff	 jmp	 $LN14@OnDraw
$LN15@OnDraw:

; 323  :   pDC->SetBkColor(pDoc->BackgroundColor());

  00d43	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00d46	e8 00 00 00 00	 call	 ?BackgroundColor@CNewBoxesDoc@@QAEKXZ ; CNewBoxesDoc::BackgroundColor
  00d4b	8b f4		 mov	 esi, esp
  00d4d	50		 push	 eax
  00d4e	8b 55 08	 mov	 edx, DWORD PTR _pDC$[ebp]
  00d51	8b 02		 mov	 eax, DWORD PTR [edx]
  00d53	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00d56	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  00d59	ff d2		 call	 edx
  00d5b	3b f4		 cmp	 esi, esp
  00d5d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 324  :   pDC->SetTextColor(RGB(96,123,139));

  00d62	8b f4		 mov	 esi, esp
  00d64	68 60 7b 8b 00	 push	 9141088			; 008b7b60H
  00d69	8b 45 08	 mov	 eax, DWORD PTR _pDC$[ebp]
  00d6c	8b 10		 mov	 edx, DWORD PTR [eax]
  00d6e	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00d71	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00d74	ff d0		 call	 eax
  00d76	3b f4		 cmp	 esi, esp
  00d78	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 325  :   score = pDoc->Score();

  00d7d	8d 8d 4c fd ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00d83	51		 push	 ecx
  00d84	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00d87	e8 00 00 00 00	 call	 ?Score@CNewBoxesDoc@@QBE?AVVECTOR@@XZ ; CNewBoxesDoc::Score
  00d8c	8b 10		 mov	 edx, DWORD PTR [eax]
  00d8e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00d91	89 95 6c ff ff
	ff		 mov	 DWORD PTR _score$[ebp], edx
  00d97	89 85 70 ff ff
	ff		 mov	 DWORD PTR _score$[ebp+4], eax

; 326  :   location = pDoc->HumanScoreLocation();

  00d9d	8d 8d 44 fd ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  00da3	51		 push	 ecx
  00da4	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00da7	e8 00 00 00 00	 call	 ?HumanScoreLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ; CNewBoxesDoc::HumanScoreLocation
  00dac	8b 10		 mov	 edx, DWORD PTR [eax]
  00dae	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00db1	89 95 34 ff ff
	ff		 mov	 DWORD PTR _location$[ebp], edx
  00db7	89 85 38 ff ff
	ff		 mov	 DWORD PTR _location$[ebp+4], eax

; 327  :   msg.Format("您的得分：%3d",score.x);

  00dbd	8b f4		 mov	 esi, esp
  00dbf	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _score$[ebp]
  00dc5	51		 push	 ecx
  00dc6	68 00 00 00 00	 push	 OFFSET $SG226861
  00dcb	8d 95 18 ff ff
	ff		 lea	 edx, DWORD PTR _msg$[ebp]
  00dd1	52		 push	 edx
  00dd2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  00dd8	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ddb	3b f4		 cmp	 esi, esp
  00ddd	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 328  :   pDC->TextOut(location.x, location.y, msg);

  00de2	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00de8	50		 push	 eax
  00de9	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _location$[ebp+4]
  00def	51		 push	 ecx
  00df0	8b 95 34 ff ff
	ff		 mov	 edx, DWORD PTR _location$[ebp]
  00df6	52		 push	 edx
  00df7	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00dfa	e8 00 00 00 00	 call	 ?TextOutA@CDC@@QAEHHHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CDC::TextOutA

; 329  :   pDC->SetTextColor(RGB(0,0,0));

  00dff	8b f4		 mov	 esi, esp
  00e01	6a 00		 push	 0
  00e03	8b 45 08	 mov	 eax, DWORD PTR _pDC$[ebp]
  00e06	8b 10		 mov	 edx, DWORD PTR [eax]
  00e08	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00e0b	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00e0e	ff d0		 call	 eax
  00e10	3b f4		 cmp	 esi, esp
  00e12	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 330  :   location = pDoc->ComputerScoreLocation();

  00e17	8d 8d 3c fd ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00e1d	51		 push	 ecx
  00e1e	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00e21	e8 00 00 00 00	 call	 ?ComputerScoreLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ; CNewBoxesDoc::ComputerScoreLocation
  00e26	8b 10		 mov	 edx, DWORD PTR [eax]
  00e28	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00e2b	89 95 34 ff ff
	ff		 mov	 DWORD PTR _location$[ebp], edx
  00e31	89 85 38 ff ff
	ff		 mov	 DWORD PTR _location$[ebp+4], eax

; 331  :   msg.Format("电脑得分：%3d",score.y);

  00e37	8b f4		 mov	 esi, esp
  00e39	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _score$[ebp+4]
  00e3f	51		 push	 ecx
  00e40	68 00 00 00 00	 push	 OFFSET $SG226862
  00e45	8d 95 18 ff ff
	ff		 lea	 edx, DWORD PTR _msg$[ebp]
  00e4b	52		 push	 edx
  00e4c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  00e52	83 c4 0c	 add	 esp, 12			; 0000000cH
  00e55	3b f4		 cmp	 esi, esp
  00e57	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 332  :   pDC->TextOut(location.x, location.y, msg);

  00e5c	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00e62	50		 push	 eax
  00e63	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _location$[ebp+4]
  00e69	51		 push	 ecx
  00e6a	8b 95 34 ff ff
	ff		 mov	 edx, DWORD PTR _location$[ebp]
  00e70	52		 push	 edx
  00e71	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00e74	e8 00 00 00 00	 call	 ?TextOutA@CDC@@QAEHHHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CDC::TextOutA

; 333  :   pDC->SetTextColor(RGB(139,0,0));

  00e79	8b f4		 mov	 esi, esp
  00e7b	68 8b 00 00 00	 push	 139			; 0000008bH
  00e80	8b 45 08	 mov	 eax, DWORD PTR _pDC$[ebp]
  00e83	8b 10		 mov	 edx, DWORD PTR [eax]
  00e85	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00e88	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  00e8b	ff d0		 call	 eax
  00e8d	3b f4		 cmp	 esi, esp
  00e8f	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 334  :   location = pDoc->MoveCountLocation();

  00e94	8d 8d 34 fd ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00e9a	51		 push	 ecx
  00e9b	8b 4d e8	 mov	 ecx, DWORD PTR _pDoc$[ebp]
  00e9e	e8 00 00 00 00	 call	 ?MoveCountLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ; CNewBoxesDoc::MoveCountLocation
  00ea3	8b 10		 mov	 edx, DWORD PTR [eax]
  00ea5	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00ea8	89 95 34 ff ff
	ff		 mov	 DWORD PTR _location$[ebp], edx
  00eae	89 85 38 ff ff
	ff		 mov	 DWORD PTR _location$[ebp+4], eax

; 335  :   msg.Format("已走步数：%3d", moveCount);

  00eb4	8b f4		 mov	 esi, esp
  00eb6	8b 8d 24 ff ff
	ff		 mov	 ecx, DWORD PTR _moveCount$[ebp]
  00ebc	51		 push	 ecx
  00ebd	68 00 00 00 00	 push	 OFFSET $SG226863
  00ec2	8d 95 18 ff ff
	ff		 lea	 edx, DWORD PTR _msg$[ebp]
  00ec8	52		 push	 edx
  00ec9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Format@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ
  00ecf	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ed2	3b f4		 cmp	 esi, esp
  00ed4	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 336  :   pDC->TextOut(location.x, location.y, msg);

  00ed9	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00edf	50		 push	 eax
  00ee0	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _location$[ebp+4]
  00ee6	51		 push	 ecx
  00ee7	8b 95 34 ff ff
	ff		 mov	 edx, DWORD PTR _location$[ebp]
  00eed	52		 push	 edx
  00eee	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00ef1	e8 00 00 00 00	 call	 ?TextOutA@CDC@@QAEHHHABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@@Z ; CDC::TextOutA

; 337  :   pDC->SelectObject(originalPen);

  00ef6	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _originalPen$[ebp]
  00efc	50		 push	 eax
  00efd	8b 4d 08	 mov	 ecx, DWORD PTR _pDC$[ebp]
  00f00	e8 00 00 00 00	 call	 ?SelectObject@CDC@@QAEPAVCPen@@PAV2@@Z ; CDC::SelectObject

; 338  : }

  00f05	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00f09	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _backgroundPen$[ebp]
  00f0f	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen
  00f14	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00f18	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _computerPen$[ebp]
  00f1e	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen
  00f23	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00f27	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _humanPen$[ebp]
  00f2d	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen
  00f32	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00f36	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _dotPen$[ebp]
  00f3c	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen
  00f41	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00f45	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _blackPen$[ebp]
  00f4b	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen
  00f50	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00f54	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _whitePen$[ebp]
  00f5a	e8 00 00 00 00	 call	 ??1CPen@@UAE@XZ		; CPen::~CPen
  00f5f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00f66	8b f4		 mov	 esi, esp
  00f68	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _msg$[ebp]
  00f6e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00f74	3b f4		 cmp	 esi, esp
  00f76	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@OnDraw:
  00f7b	52		 push	 edx
  00f7c	8b cd		 mov	 ecx, ebp
  00f7e	50		 push	 eax
  00f7f	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN108@OnDraw
  00f85	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00f8a	58		 pop	 eax
  00f8b	5a		 pop	 edx
  00f8c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00f8f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00f96	59		 pop	 ecx
  00f97	5f		 pop	 edi
  00f98	5e		 pop	 esi
  00f99	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00f9c	33 cd		 xor	 ecx, ebp
  00f9e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00fa3	81 c4 fc 02 00
	00		 add	 esp, 764		; 000002fcH
  00fa9	3b ec		 cmp	 ebp, esp
  00fab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00fb0	8b e5		 mov	 esp, ebp
  00fb2	5d		 pop	 ebp
  00fb3	c2 04 00	 ret	 4
  00fb6	66 90		 npad	 2
$LN108@OnDraw:
  00fb8	17 00 00 00	 DD	 23			; 00000017H
  00fbc	00 00 00 00	 DD	 $LN107@OnDraw
$LN107@OnDraw:
  00fc0	dc ff ff ff	 DD	 -36			; ffffffdcH
  00fc4	08 00 00 00	 DD	 8
  00fc8	00 00 00 00	 DD	 $LN83@OnDraw
  00fcc	cc ff ff ff	 DD	 -52			; ffffffccH
  00fd0	08 00 00 00	 DD	 8
  00fd4	00 00 00 00	 DD	 $LN84@OnDraw
  00fd8	bc ff ff ff	 DD	 -68			; ffffffbcH
  00fdc	08 00 00 00	 DD	 8
  00fe0	00 00 00 00	 DD	 $LN85@OnDraw
  00fe4	ac ff ff ff	 DD	 -84			; ffffffacH
  00fe8	08 00 00 00	 DD	 8
  00fec	00 00 00 00	 DD	 $LN86@OnDraw
  00ff0	9c ff ff ff	 DD	 -100			; ffffff9cH
  00ff4	08 00 00 00	 DD	 8
  00ff8	00 00 00 00	 DD	 $LN87@OnDraw
  00ffc	8c ff ff ff	 DD	 -116			; ffffff8cH
  01000	08 00 00 00	 DD	 8
  01004	00 00 00 00	 DD	 $LN88@OnDraw
  01008	7c ff ff ff	 DD	 -132			; ffffff7cH
  0100c	08 00 00 00	 DD	 8
  01010	00 00 00 00	 DD	 $LN89@OnDraw
  01014	6c ff ff ff	 DD	 -148			; ffffff6cH
  01018	08 00 00 00	 DD	 8
  0101c	00 00 00 00	 DD	 $LN90@OnDraw
  01020	54 ff ff ff	 DD	 -172			; ffffff54H
  01024	10 00 00 00	 DD	 16			; 00000010H
  01028	00 00 00 00	 DD	 $LN91@OnDraw
  0102c	44 ff ff ff	 DD	 -188			; ffffff44H
  01030	08 00 00 00	 DD	 8
  01034	00 00 00 00	 DD	 $LN92@OnDraw
  01038	34 ff ff ff	 DD	 -204			; ffffff34H
  0103c	08 00 00 00	 DD	 8
  01040	00 00 00 00	 DD	 $LN93@OnDraw
  01044	18 ff ff ff	 DD	 -232			; ffffff18H
  01048	04 00 00 00	 DD	 4
  0104c	00 00 00 00	 DD	 $LN94@OnDraw
  01050	08 ff ff ff	 DD	 -248			; ffffff08H
  01054	08 00 00 00	 DD	 8
  01058	00 00 00 00	 DD	 $LN95@OnDraw
  0105c	f8 fe ff ff	 DD	 -264			; fffffef8H
  01060	08 00 00 00	 DD	 8
  01064	00 00 00 00	 DD	 $LN96@OnDraw
  01068	e8 fe ff ff	 DD	 -280			; fffffee8H
  0106c	08 00 00 00	 DD	 8
  01070	00 00 00 00	 DD	 $LN97@OnDraw
  01074	d8 fe ff ff	 DD	 -296			; fffffed8H
  01078	08 00 00 00	 DD	 8
  0107c	00 00 00 00	 DD	 $LN98@OnDraw
  01080	c8 fe ff ff	 DD	 -312			; fffffec8H
  01084	08 00 00 00	 DD	 8
  01088	00 00 00 00	 DD	 $LN99@OnDraw
  0108c	b8 fe ff ff	 DD	 -328			; fffffeb8H
  01090	08 00 00 00	 DD	 8
  01094	00 00 00 00	 DD	 $LN100@OnDraw
  01098	a4 fe ff ff	 DD	 -348			; fffffea4H
  0109c	08 00 00 00	 DD	 8
  010a0	00 00 00 00	 DD	 $LN101@OnDraw
  010a4	94 fe ff ff	 DD	 -364			; fffffe94H
  010a8	08 00 00 00	 DD	 8
  010ac	00 00 00 00	 DD	 $LN102@OnDraw
  010b0	84 fe ff ff	 DD	 -380			; fffffe84H
  010b4	08 00 00 00	 DD	 8
  010b8	00 00 00 00	 DD	 $LN103@OnDraw
  010bc	74 fe ff ff	 DD	 -396			; fffffe74H
  010c0	08 00 00 00	 DD	 8
  010c4	00 00 00 00	 DD	 $LN104@OnDraw
  010c8	64 fe ff ff	 DD	 -412			; fffffe64H
  010cc	08 00 00 00	 DD	 8
  010d0	00 00 00 00	 DD	 $LN105@OnDraw
$LN105@OnDraw:
  010d4	73		 DB	 115			; 00000073H
  010d5	70		 DB	 112			; 00000070H
  010d6	65		 DB	 101			; 00000065H
  010d7	63		 DB	 99			; 00000063H
  010d8	69		 DB	 105			; 00000069H
  010d9	61		 DB	 97			; 00000061H
  010da	6c		 DB	 108			; 0000006cH
  010db	50		 DB	 80			; 00000050H
  010dc	65		 DB	 101			; 00000065H
  010dd	6e		 DB	 110			; 0000006eH
  010de	00		 DB	 0
$LN104@OnDraw:
  010df	73		 DB	 115			; 00000073H
  010e0	70		 DB	 112			; 00000070H
  010e1	65		 DB	 101			; 00000065H
  010e2	63		 DB	 99			; 00000063H
  010e3	69		 DB	 105			; 00000069H
  010e4	61		 DB	 97			; 00000061H
  010e5	6c		 DB	 108			; 0000006cH
  010e6	50		 DB	 80			; 00000050H
  010e7	65		 DB	 101			; 00000065H
  010e8	6e		 DB	 110			; 0000006eH
  010e9	00		 DB	 0
$LN103@OnDraw:
  010ea	73		 DB	 115			; 00000073H
  010eb	70		 DB	 112			; 00000070H
  010ec	65		 DB	 101			; 00000065H
  010ed	63		 DB	 99			; 00000063H
  010ee	69		 DB	 105			; 00000069H
  010ef	61		 DB	 97			; 00000061H
  010f0	6c		 DB	 108			; 0000006cH
  010f1	50		 DB	 80			; 00000050H
  010f2	65		 DB	 101			; 00000065H
  010f3	6e		 DB	 110			; 0000006eH
  010f4	00		 DB	 0
$LN102@OnDraw:
  010f5	73		 DB	 115			; 00000073H
  010f6	70		 DB	 112			; 00000070H
  010f7	65		 DB	 101			; 00000065H
  010f8	63		 DB	 99			; 00000063H
  010f9	69		 DB	 105			; 00000069H
  010fa	61		 DB	 97			; 00000061H
  010fb	6c		 DB	 108			; 0000006cH
  010fc	50		 DB	 80			; 00000050H
  010fd	65		 DB	 101			; 00000065H
  010fe	6e		 DB	 110			; 0000006eH
  010ff	00		 DB	 0
$LN101@OnDraw:
  01100	73		 DB	 115			; 00000073H
  01101	70		 DB	 112			; 00000070H
  01102	65		 DB	 101			; 00000065H
  01103	63		 DB	 99			; 00000063H
  01104	69		 DB	 105			; 00000069H
  01105	61		 DB	 97			; 00000061H
  01106	6c		 DB	 108			; 0000006cH
  01107	50		 DB	 80			; 00000050H
  01108	65		 DB	 101			; 00000065H
  01109	6e		 DB	 110			; 0000006eH
  0110a	00		 DB	 0
$LN100@OnDraw:
  0110b	62		 DB	 98			; 00000062H
  0110c	61		 DB	 97			; 00000061H
  0110d	63		 DB	 99			; 00000063H
  0110e	6b		 DB	 107			; 0000006bH
  0110f	67		 DB	 103			; 00000067H
  01110	72		 DB	 114			; 00000072H
  01111	6f		 DB	 111			; 0000006fH
  01112	75		 DB	 117			; 00000075H
  01113	6e		 DB	 110			; 0000006eH
  01114	64		 DB	 100			; 00000064H
  01115	50		 DB	 80			; 00000050H
  01116	65		 DB	 101			; 00000065H
  01117	6e		 DB	 110			; 0000006eH
  01118	00		 DB	 0
$LN99@OnDraw:
  01119	63		 DB	 99			; 00000063H
  0111a	6f		 DB	 111			; 0000006fH
  0111b	6d		 DB	 109			; 0000006dH
  0111c	70		 DB	 112			; 00000070H
  0111d	75		 DB	 117			; 00000075H
  0111e	74		 DB	 116			; 00000074H
  0111f	65		 DB	 101			; 00000065H
  01120	72		 DB	 114			; 00000072H
  01121	50		 DB	 80			; 00000050H
  01122	65		 DB	 101			; 00000065H
  01123	6e		 DB	 110			; 0000006eH
  01124	00		 DB	 0
$LN98@OnDraw:
  01125	68		 DB	 104			; 00000068H
  01126	75		 DB	 117			; 00000075H
  01127	6d		 DB	 109			; 0000006dH
  01128	61		 DB	 97			; 00000061H
  01129	6e		 DB	 110			; 0000006eH
  0112a	50		 DB	 80			; 00000050H
  0112b	65		 DB	 101			; 00000065H
  0112c	6e		 DB	 110			; 0000006eH
  0112d	00		 DB	 0
$LN97@OnDraw:
  0112e	64		 DB	 100			; 00000064H
  0112f	6f		 DB	 111			; 0000006fH
  01130	74		 DB	 116			; 00000074H
  01131	50		 DB	 80			; 00000050H
  01132	65		 DB	 101			; 00000065H
  01133	6e		 DB	 110			; 0000006eH
  01134	00		 DB	 0
$LN96@OnDraw:
  01135	62		 DB	 98			; 00000062H
  01136	6c		 DB	 108			; 0000006cH
  01137	61		 DB	 97			; 00000061H
  01138	63		 DB	 99			; 00000063H
  01139	6b		 DB	 107			; 0000006bH
  0113a	50		 DB	 80			; 00000050H
  0113b	65		 DB	 101			; 00000065H
  0113c	6e		 DB	 110			; 0000006eH
  0113d	00		 DB	 0
$LN95@OnDraw:
  0113e	77		 DB	 119			; 00000077H
  0113f	68		 DB	 104			; 00000068H
  01140	69		 DB	 105			; 00000069H
  01141	74		 DB	 116			; 00000074H
  01142	65		 DB	 101			; 00000065H
  01143	50		 DB	 80			; 00000050H
  01144	65		 DB	 101			; 00000065H
  01145	6e		 DB	 110			; 0000006eH
  01146	00		 DB	 0
$LN94@OnDraw:
  01147	6d		 DB	 109			; 0000006dH
  01148	73		 DB	 115			; 00000073H
  01149	67		 DB	 103			; 00000067H
  0114a	00		 DB	 0
$LN93@OnDraw:
  0114b	6c		 DB	 108			; 0000006cH
  0114c	6f		 DB	 111			; 0000006fH
  0114d	63		 DB	 99			; 00000063H
  0114e	61		 DB	 97			; 00000061H
  0114f	74		 DB	 116			; 00000074H
  01150	69		 DB	 105			; 00000069H
  01151	6f		 DB	 111			; 0000006fH
  01152	6e		 DB	 110			; 0000006eH
  01153	00		 DB	 0
$LN92@OnDraw:
  01154	64		 DB	 100			; 00000064H
  01155	6f		 DB	 111			; 0000006fH
  01156	74		 DB	 116			; 00000074H
  01157	4e		 DB	 78			; 0000004eH
  01158	75		 DB	 117			; 00000075H
  01159	6d		 DB	 109			; 0000006dH
  0115a	00		 DB	 0
$LN91@OnDraw:
  0115b	64		 DB	 100			; 00000064H
  0115c	6f		 DB	 111			; 0000006fH
  0115d	74		 DB	 116			; 00000074H
  0115e	44		 DB	 68			; 00000044H
  0115f	65		 DB	 101			; 00000065H
  01160	73		 DB	 115			; 00000073H
  01161	63		 DB	 99			; 00000063H
  01162	00		 DB	 0
$LN90@OnDraw:
  01163	73		 DB	 115			; 00000073H
  01164	63		 DB	 99			; 00000063H
  01165	6f		 DB	 111			; 0000006fH
  01166	72		 DB	 114			; 00000072H
  01167	65		 DB	 101			; 00000065H
  01168	00		 DB	 0
$LN89@OnDraw:
  01169	64		 DB	 100			; 00000064H
  0116a	6f		 DB	 111			; 0000006fH
  0116b	74		 DB	 116			; 00000074H
  0116c	53		 DB	 83			; 00000053H
  0116d	69		 DB	 105			; 00000069H
  0116e	7a		 DB	 122			; 0000007aH
  0116f	65		 DB	 101			; 00000065H
  01170	00		 DB	 0
$LN88@OnDraw:
  01171	64		 DB	 100			; 00000064H
  01172	6f		 DB	 111			; 0000006fH
  01173	74		 DB	 116			; 00000074H
  01174	53		 DB	 83			; 00000053H
  01175	70		 DB	 112			; 00000070H
  01176	61		 DB	 97			; 00000061H
  01177	63		 DB	 99			; 00000063H
  01178	69		 DB	 105			; 00000069H
  01179	6e		 DB	 110			; 0000006eH
  0117a	67		 DB	 103			; 00000067H
  0117b	00		 DB	 0
$LN87@OnDraw:
  0117c	67		 DB	 103			; 00000067H
  0117d	61		 DB	 97			; 00000061H
  0117e	6d		 DB	 109			; 0000006dH
  0117f	65		 DB	 101			; 00000065H
  01180	53		 DB	 83			; 00000053H
  01181	69		 DB	 105			; 00000069H
  01182	7a		 DB	 122			; 0000007aH
  01183	65		 DB	 101			; 00000065H
  01184	00		 DB	 0
$LN86@OnDraw:
  01185	6e		 DB	 110			; 0000006eH
  01186	65		 DB	 101			; 00000065H
  01187	69		 DB	 105			; 00000069H
  01188	67		 DB	 103			; 00000067H
  01189	68		 DB	 104			; 00000068H
  0118a	62		 DB	 98			; 00000062H
  0118b	6f		 DB	 111			; 0000006fH
  0118c	72		 DB	 114			; 00000072H
  0118d	58		 DB	 88			; 00000058H
  0118e	59		 DB	 89			; 00000059H
  0118f	00		 DB	 0
$LN85@OnDraw:
  01190	64		 DB	 100			; 00000064H
  01191	6f		 DB	 111			; 0000006fH
  01192	74		 DB	 116			; 00000074H
  01193	58		 DB	 88			; 00000058H
  01194	59		 DB	 89			; 00000059H
  01195	00		 DB	 0
$LN84@OnDraw:
  01196	73		 DB	 115			; 00000073H
  01197	63		 DB	 99			; 00000063H
  01198	72		 DB	 114			; 00000072H
  01199	65		 DB	 101			; 00000065H
  0119a	65		 DB	 101			; 00000065H
  0119b	6e		 DB	 110			; 0000006eH
  0119c	4f		 DB	 79			; 0000004fH
  0119d	66		 DB	 102			; 00000066H
  0119e	66		 DB	 102			; 00000066H
  0119f	73		 DB	 115			; 00000073H
  011a0	65		 DB	 101			; 00000065H
  011a1	74		 DB	 116			; 00000074H
  011a2	00		 DB	 0
$LN83@OnDraw:
  011a3	6d		 DB	 109			; 0000006dH
  011a4	69		 DB	 105			; 00000069H
  011a5	6e		 DB	 110			; 0000006eH
  011a6	4d		 DB	 77			; 0000004dH
  011a7	61		 DB	 97			; 00000061H
  011a8	78		 DB	 120			; 00000078H
  011a9	00		 DB	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _msg$[ebp]
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000e	3b f4		 cmp	 esi, esp
  00010	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$1:
  00015	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _whitePen$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$2:
  00020	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _blackPen$[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$3:
  0002b	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _dotPen$[ebp]
  00031	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$4:
  00036	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _humanPen$[ebp]
  0003c	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$5:
  00041	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _computerPen$[ebp]
  00047	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$6:
  0004c	8d 8d b8 fe ff
	ff		 lea	 ecx, DWORD PTR _backgroundPen$[ebp]
  00052	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$7:
  00057	8b f4		 mov	 esi, esp
  00059	8d 8d 34 fe ff
	ff		 lea	 ecx, DWORD PTR $T34[ebp]
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  00065	3b f4		 cmp	 esi, esp
  00067	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$8:
  0006c	8d 8d a4 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$44[ebp]
  00072	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$9:
  00077	8d 8d 94 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$43[ebp]
  0007d	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$10:
  00082	8d 8d 84 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$42[ebp]
  00088	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$11:
  0008d	8d 8d 74 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$41[ebp]
  00093	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
__unwindfunclet$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z$12:
  00098	8d 8d 64 fe ff
	ff		 lea	 ecx, DWORD PTR _specialPen$40[ebp]
  0009e	e9 00 00 00 00	 jmp	 ??1CPen@@UAE@XZ		; CPen::~CPen
  000a3	cc		 int	 3
  000a4	cc		 int	 3
  000a5	cc		 int	 3
  000a6	cc		 int	 3
  000a7	cc		 int	 3
__ehhandler$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z:
  000a8	90		 npad	 1
  000a9	90		 npad	 1
  000aa	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  000ae	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  000b1	8b 8a 04 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-764]
  000b7	33 c8		 xor	 ecx, eax
  000b9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000be	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  000c1	33 c8		 xor	 ecx, eax
  000c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c8	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z
  000cd	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?OnDraw@CNewBoxesView@@UAEXPAVCDC@@@Z ENDP		; CNewBoxesView::OnDraw
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDocument@CNewBoxesView@@QAEPAVCNewBoxesDoc@@XZ PROC	; CNewBoxesView::GetDocument
; _this$ = ecx

; 376  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 377  : 	ASSERT(m_pDocument->IsKindOf(RUNTIME_CLASS(CNewBoxesDoc)));

  0000e	e8 00 00 00 00	 call	 ?GetThisClass@CNewBoxesDoc@@SGPAUCRuntimeClass@@XZ ; CNewBoxesDoc::GetThisClass
  00013	50		 push	 eax
  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  0001d	e8 00 00 00 00	 call	 ?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z ; CObject::IsKindOf
  00022	85 c0		 test	 eax, eax
  00024	75 14		 jne	 SHORT $LN3@GetDocumen
  00026	68 79 01 00 00	 push	 377			; 00000179H
  0002b	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00030	e8 00 00 00 00	 call	 ?AfxAssertFailedLine@@YGHPBDH@Z ; AfxAssertFailedLine
  00035	85 c0		 test	 eax, eax
  00037	74 01		 je	 SHORT $LN3@GetDocumen
  00039	cc		 int	 3
$LN3@GetDocumen:

; 378  : 	return (CNewBoxesDoc*)m_pDocument;

  0003a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0003d	8b 82 80 00 00
	00		 mov	 eax, DWORD PTR [edx+128]

; 379  : }

  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?GetDocument@CNewBoxesView@@QAEPAVCNewBoxesDoc@@XZ ENDP	; CNewBoxesView::GetDocument
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
tv81 = -24						; size = 4
$T2 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ PROC	; CNewBoxesView::CreateObject

; 36   : IMPLEMENT_DYNCREATE(CNewBoxesView, CView)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	c7 45 e8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-24], -858993460 ; ccccccccH
  0001b	c7 45 ec cc cc
	cc cc		 mov	 DWORD PTR [ebp-20], -858993460 ; ccccccccH
  00022	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002e	33 c5		 xor	 eax, ebp
  00030	50		 push	 eax
  00031	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00034	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003a	6a 24		 push	 36			; 00000024H
  0003c	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00041	68 88 00 00 00	 push	 136			; 00000088H
  00046	e8 00 00 00 00	 call	 ??2CObject@@SGPAXIPBDH@Z ; CObject::operator new
  0004b	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00055	83 7d ec 00	 cmp	 DWORD PTR $T2[ebp], 0
  00059	74 0d		 je	 SHORT $LN3@CreateObje
  0005b	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp]
  0005e	e8 00 00 00 00	 call	 ??0CNewBoxesView@@IAE@XZ ; CNewBoxesView::CNewBoxesView
  00063	89 45 e8	 mov	 DWORD PTR tv81[ebp], eax
  00066	eb 07		 jmp	 SHORT $LN4@CreateObje
$LN3@CreateObje:
  00068	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN4@CreateObje:
  0006f	8b 45 e8	 mov	 eax, DWORD PTR tv81[ebp]
  00072	89 45 f0	 mov	 DWORD PTR $T3[ebp], eax
  00075	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0007c	8b 45 f0	 mov	 eax, DWORD PTR $T3[ebp]
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00082	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00089	59		 pop	 ecx
  0008a	83 c4 18	 add	 esp, 24			; 00000018H
  0008d	3b ec		 cmp	 ebp, esp
  0008f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ$0:
  00000	6a 24		 push	 36			; 00000024H
  00002	68 00 00 00 00	 push	 OFFSET ?THIS_FILE@@3PADA
  00007	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3CObject@@SGXPAXPBDH@Z ; CObject::operator delete
  00010	c3		 ret	 0
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
__ehhandler$?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ:
  00016	90		 npad	 1
  00017	90		 npad	 1
  00018	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001f	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00022	33 c8		 xor	 ecx, eax
  00024	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00029	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ
  0002e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateObject@CNewBoxesView@@SGPAVCObject@@XZ ENDP	; CNewBoxesView::CreateObject
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRuntimeClass@CNewBoxesView@@UBEPAUCRuntimeClass@@XZ PROC ; CNewBoxesView::GetRuntimeClass
; _this$ = ecx

; 36   : IMPLEMENT_DYNCREATE(CNewBoxesView, CView)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	b8 00 00 00 00	 mov	 eax, OFFSET ?classCNewBoxesView@CNewBoxesView@@2UCRuntimeClass@@B ; CNewBoxesView::classCNewBoxesView
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?GetRuntimeClass@CNewBoxesView@@UBEPAUCRuntimeClass@@XZ ENDP ; CNewBoxesView::GetRuntimeClass
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
?GetThisClass@CNewBoxesView@@SGPAUCRuntimeClass@@XZ PROC ; CNewBoxesView::GetThisClass

; 36   : IMPLEMENT_DYNCREATE(CNewBoxesView, CView)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?classCNewBoxesView@CNewBoxesView@@2UCRuntimeClass@@B ; CNewBoxesView::classCNewBoxesView
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?GetThisClass@CNewBoxesView@@SGPAUCRuntimeClass@@XZ ENDP ; CNewBoxesView::GetThisClass
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
?_GetBaseClass@CNewBoxesView@@KGPAUCRuntimeClass@@XZ PROC ; CNewBoxesView::_GetBaseClass

; 36   : IMPLEMENT_DYNCREATE(CNewBoxesView, CView)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetThisClass@CView@@SGPAUCRuntimeClass@@XZ ; CView::GetThisClass
  00008	3b ec		 cmp	 ebp, esp
  0000a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?_GetBaseClass@CNewBoxesView@@KGPAUCRuntimeClass@@XZ ENDP ; CNewBoxesView::_GetBaseClass
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CNewBoxesView@@IAE@XZ PROC				; CNewBoxesView::CNewBoxesView
; _this$ = ecx

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CNewBoxesView@@IAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	c7 45 f0 cc cc
	cc cc		 mov	 DWORD PTR [ebp-16], -858993460 ; ccccccccH
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001e	33 c5		 xor	 eax, ebp
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??0CView@@IAE@XZ	; CView::CView
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CNewBoxesView@@6B@

; 80   : 	// TODO: add construction code here
; 81   :   pViewWindow = this;

  00045	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	89 0d 00 00 00
	00		 mov	 DWORD PTR ?pViewWindow@@3PAVCNewBoxesView@@A, ecx ; pViewWindow

; 82   :   //pCurrentProcess = new PROCESS_IDLE;
; 83   :   ProcessManager(STATUS_STARTUP);

  0004e	6a 00		 push	 0
  00050	e8 00 00 00 00	 call	 ?ProcessManager@@YAXW4STATUS@@@Z ; ProcessManager
  00055	83 c4 04	 add	 esp, 4

; 84   : }

  00058	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00065	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006c	59		 pop	 ecx
  0006d	83 c4 10	 add	 esp, 16			; 00000010H
  00070	3b ec		 cmp	 ebp, esp
  00072	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0CNewBoxesView@@IAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CView@@UAE@XZ	; CView::~CView
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CNewBoxesView@@IAE@XZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CNewBoxesView@@IAE@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CNewBoxesView@@IAE@XZ ENDP				; CNewBoxesView::CNewBoxesView
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?ComputeDivideWeights@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?ComputeDivideWeights@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ PROC ; CNewBoxesDoc::ComputeDivideWeights, COMDAT
; _this$ = ecx

; 144  :   {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 145  :     m_pGame->FindAvoids();

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 88 28 36 00
	00		 mov	 ecx, DWORD PTR [eax+13864]
  00017	e8 00 00 00 00	 call	 ?FindAvoids@DOTS_AND_BOXES@@QAEXXZ ; DOTS_AND_BOXES::FindAvoids

; 146  :     m_pGame->ComputeDivideAndConquerWeights_3();

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	8b 89 28 36 00
	00		 mov	 ecx, DWORD PTR [ecx+13864]
  00025	e8 00 00 00 00	 call	 ?ComputeDivideAndConquerWeights_3@DOTS_AND_BOXES@@QAEXXZ ; DOTS_AND_BOXES::ComputeDivideAndConquerWeights_3

; 147  :     return m_pGame->MinMaxDivideWeight();

  0002a	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 88 28 36 00
	00		 mov	 ecx, DWORD PTR [eax+13864]
  00037	e8 00 00 00 00	 call	 ?MinMaxDivideWeight@DOTS_AND_BOXES@@QBE?AUtagPOINT@@XZ ; DOTS_AND_BOXES::MinMaxDivideWeight
  0003c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 148  :   };

  0003f	83 c4 04	 add	 esp, 4
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?ComputeDivideWeights@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ENDP ; CNewBoxesDoc::ComputeDivideWeights
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?ComputeLoopWeights@CNewBoxesDoc@@QAE?AUtagPOINT@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_MINLOOPBREAK$ = 12					; size = 4
?ComputeLoopWeights@CNewBoxesDoc@@QAE?AUtagPOINT@@H@Z PROC ; CNewBoxesDoc::ComputeLoopWeights, COMDAT
; _this$ = ecx

; 138  :   {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 139  :     m_pGame->FindAvoids();

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 88 28 36 00
	00		 mov	 ecx, DWORD PTR [eax+13864]
  00017	e8 00 00 00 00	 call	 ?FindAvoids@DOTS_AND_BOXES@@QAEXXZ ; DOTS_AND_BOXES::FindAvoids

; 140  :     m_pGame->ComputeBreakUpLoopWeights(MINLOOPBREAK);

  0001c	8b 4d 0c	 mov	 ecx, DWORD PTR _MINLOOPBREAK$[ebp]
  0001f	51		 push	 ecx
  00020	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00023	8b 8a 28 36 00
	00		 mov	 ecx, DWORD PTR [edx+13864]
  00029	e8 00 00 00 00	 call	 ?ComputeBreakUpLoopWeights@DOTS_AND_BOXES@@QAEXH@Z ; DOTS_AND_BOXES::ComputeBreakUpLoopWeights

; 141  :     return m_pGame->MinMaxLoopWeight();

  0002e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00031	50		 push	 eax
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	8b 89 28 36 00
	00		 mov	 ecx, DWORD PTR [ecx+13864]
  0003b	e8 00 00 00 00	 call	 ?MinMaxLoopWeight@DOTS_AND_BOXES@@QBE?AUtagPOINT@@XZ ; DOTS_AND_BOXES::MinMaxLoopWeight
  00040	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 142  :   };

  00043	83 c4 04	 add	 esp, 4
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 08 00	 ret	 8
?ComputeLoopWeights@CNewBoxesDoc@@QAE?AUtagPOINT@@H@Z ENDP ; CNewBoxesDoc::ComputeLoopWeights
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?LinePenWidth@CNewBoxesDoc@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LinePenWidth@CNewBoxesDoc@@QAEHXZ PROC			; CNewBoxesDoc::LinePenWidth, COMDAT
; _this$ = ecx

; 105  :   int LinePenWidth(void){return m_linePenWidth;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 1c 01 00
	00		 mov	 eax, DWORD PTR [eax+284]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?LinePenWidth@CNewBoxesDoc@@QAEHXZ ENDP			; CNewBoxesDoc::LinePenWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?DotPenWidth@CNewBoxesDoc@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DotPenWidth@CNewBoxesDoc@@QAEHXZ PROC			; CNewBoxesDoc::DotPenWidth, COMDAT
; _this$ = ecx

; 104  :   int DotPenWidth(void){return m_dotPenWidth;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 18 01 00
	00		 mov	 eax, DWORD PTR [eax+280]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?DotPenWidth@CNewBoxesDoc@@QAEHXZ ENDP			; CNewBoxesDoc::DotPenWidth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?ComputerBoxColor@CNewBoxesDoc@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ComputerBoxColor@CNewBoxesDoc@@QAEKXZ PROC		; CNewBoxesDoc::ComputerBoxColor, COMDAT
; _this$ = ecx

; 101  :   COLORREF ComputerBoxColor(void){return m_computerBoxColor;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 58 01 00
	00		 mov	 eax, DWORD PTR [eax+344]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?ComputerBoxColor@CNewBoxesDoc@@QAEKXZ ENDP		; CNewBoxesDoc::ComputerBoxColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?HumanBoxColor@CNewBoxesDoc@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HumanBoxColor@CNewBoxesDoc@@QAEKXZ PROC		; CNewBoxesDoc::HumanBoxColor, COMDAT
; _this$ = ecx

; 100  :   COLORREF HumanBoxColor(void){return m_humanBoxColor;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 54 01 00
	00		 mov	 eax, DWORD PTR [eax+340]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?HumanBoxColor@CNewBoxesDoc@@QAEKXZ ENDP		; CNewBoxesDoc::HumanBoxColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?ComputerLineColor@CNewBoxesDoc@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ComputerLineColor@CNewBoxesDoc@@QAEKXZ PROC		; CNewBoxesDoc::ComputerLineColor, COMDAT
; _this$ = ecx

; 99   :   COLORREF ComputerLineColor(void){return m_computerLineColor;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 50 01 00
	00		 mov	 eax, DWORD PTR [eax+336]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?ComputerLineColor@CNewBoxesDoc@@QAEKXZ ENDP		; CNewBoxesDoc::ComputerLineColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?HumanLineColor@CNewBoxesDoc@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?HumanLineColor@CNewBoxesDoc@@QAEKXZ PROC		; CNewBoxesDoc::HumanLineColor, COMDAT
; _this$ = ecx

; 98   :   COLORREF HumanLineColor(void){return m_humanLineColor;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 4c 01 00
	00		 mov	 eax, DWORD PTR [eax+332]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?HumanLineColor@CNewBoxesDoc@@QAEKXZ ENDP		; CNewBoxesDoc::HumanLineColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?DotColor@CNewBoxesDoc@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DotColor@CNewBoxesDoc@@QAEKXZ PROC			; CNewBoxesDoc::DotColor, COMDAT
; _this$ = ecx

; 97   :   COLORREF DotColor(void){return m_dotColor;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 44 01 00
	00		 mov	 eax, DWORD PTR [eax+324]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?DotColor@CNewBoxesDoc@@QAEKXZ ENDP			; CNewBoxesDoc::DotColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?BackgroundColor@CNewBoxesDoc@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BackgroundColor@CNewBoxesDoc@@QAEKXZ PROC		; CNewBoxesDoc::BackgroundColor, COMDAT
; _this$ = ecx

; 96   :   COLORREF BackgroundColor(void){return m_backgroundColor;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 40 01 00
	00		 mov	 eax, DWORD PTR [eax+320]
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
?BackgroundColor@CNewBoxesDoc@@QAEKXZ ENDP		; CNewBoxesDoc::BackgroundColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?MoveCountLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?MoveCountLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ PROC	; CNewBoxesDoc::MoveCountLocation, COMDAT
; _this$ = ecx

; 92   :   {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 93   :     return VECTOR(m_moveCountOffsetX, m_moveCountOffsetY);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 88 0c 01 00
	00		 mov	 ecx, DWORD PTR [eax+268]
  00017	51		 push	 ecx
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	8b 82 08 01 00
	00		 mov	 eax, DWORD PTR [edx+264]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00025	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@HH@Z	; VECTOR::VECTOR
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 94   :   };

  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?MoveCountLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ENDP	; CNewBoxesDoc::MoveCountLocation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?StatusTextLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?StatusTextLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ PROC	; CNewBoxesDoc::StatusTextLocation, COMDAT
; _this$ = ecx

; 88   :   {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     return VECTOR(m_statusTextOffsetX, m_statusTextOffsetY);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 88 04 01 00
	00		 mov	 ecx, DWORD PTR [eax+260]
  00017	51		 push	 ecx
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	8b 82 00 01 00
	00		 mov	 eax, DWORD PTR [edx+256]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00025	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@HH@Z	; VECTOR::VECTOR
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 90   :   };

  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?StatusTextLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ENDP	; CNewBoxesDoc::StatusTextLocation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?ComputerScoreLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?ComputerScoreLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ PROC ; CNewBoxesDoc::ComputerScoreLocation, COMDAT
; _this$ = ecx

; 84   :   {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 85   :     return VECTOR(m_computerScoreOffsetX, m_computerScoreOffsetY);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 88 fc 00 00
	00		 mov	 ecx, DWORD PTR [eax+252]
  00017	51		 push	 ecx
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	8b 82 f8 00 00
	00		 mov	 eax, DWORD PTR [edx+248]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00025	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@HH@Z	; VECTOR::VECTOR
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 86   :   };

  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?ComputerScoreLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ENDP ; CNewBoxesDoc::ComputerScoreLocation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?HumanScoreLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?HumanScoreLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ PROC	; CNewBoxesDoc::HumanScoreLocation, COMDAT
; _this$ = ecx

; 80   :   {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   :     return VECTOR(m_humanScoreOffsetX, m_humanScoreOffsetY);

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	8b 88 f4 00 00
	00		 mov	 ecx, DWORD PTR [eax+244]
  00017	51		 push	 ecx
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	8b 82 f0 00 00
	00		 mov	 eax, DWORD PTR [edx+240]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00025	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@HH@Z	; VECTOR::VECTOR
  0002a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 82   :   };

  0002d	83 c4 04	 add	 esp, 4
  00030	3b ec		 cmp	 ebp, esp
  00032	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?HumanScoreLocation@CNewBoxesDoc@@QAE?AVVECTOR@@XZ ENDP	; CNewBoxesDoc::HumanScoreLocation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?DotSize@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ
_TEXT	SEGMENT
_p$ = -16						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?DotSize@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ PROC		; CNewBoxesDoc::DotSize, COMDAT
; _this$ = ecx

; 78   :   POINT DotSize(void){POINT p = {m_currentDotSizeX,m_currentDotSizeY}; return p;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 88 10 01 00
	00		 mov	 ecx, DWORD PTR [eax+272]
  00026	89 4d f0	 mov	 DWORD PTR _p$[ebp], ecx
  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	8b 82 14 01 00
	00		 mov	 eax, DWORD PTR [edx+276]
  00032	89 45 f4	 mov	 DWORD PTR _p$[ebp+4], eax
  00035	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00038	8b 55 f0	 mov	 edx, DWORD PTR _p$[ebp]
  0003b	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp+4]
  0003e	89 11		 mov	 DWORD PTR [ecx], edx
  00040	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00043	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00046	52		 push	 edx
  00047	8b cd		 mov	 ecx, ebp
  00049	50		 push	 eax
  0004a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@DotSize
  00050	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00055	58		 pop	 eax
  00056	5a		 pop	 edx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
  0005d	0f 1f 00	 npad	 3
$LN5@DotSize:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@DotSize
$LN4@DotSize:
  00068	f0 ff ff ff	 DD	 -16			; fffffff0H
  0006c	08 00 00 00	 DD	 8
  00070	00 00 00 00	 DD	 $LN3@DotSize
$LN3@DotSize:
  00074	70		 DB	 112			; 00000070H
  00075	00		 DB	 0
?DotSize@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ENDP		; CNewBoxesDoc::DotSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?ScreenOffset@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ
_TEXT	SEGMENT
_p$ = -16						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?ScreenOffset@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ PROC	; CNewBoxesDoc::ScreenOffset, COMDAT
; _this$ = ecx

; 77   :   POINT ScreenOffset(void){POINT p={m_currentScreenOffsetX,m_currentScreenOffsetY}; return p;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 88 e8 00 00
	00		 mov	 ecx, DWORD PTR [eax+232]
  00026	89 4d f0	 mov	 DWORD PTR _p$[ebp], ecx
  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	8b 82 ec 00 00
	00		 mov	 eax, DWORD PTR [edx+236]
  00032	89 45 f4	 mov	 DWORD PTR _p$[ebp+4], eax
  00035	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00038	8b 55 f0	 mov	 edx, DWORD PTR _p$[ebp]
  0003b	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp+4]
  0003e	89 11		 mov	 DWORD PTR [ecx], edx
  00040	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00043	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00046	52		 push	 edx
  00047	8b cd		 mov	 ecx, ebp
  00049	50		 push	 eax
  0004a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@ScreenOffs
  00050	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00055	58		 pop	 eax
  00056	5a		 pop	 edx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
  0005d	0f 1f 00	 npad	 3
$LN5@ScreenOffs:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@ScreenOffs
$LN4@ScreenOffs:
  00068	f0 ff ff ff	 DD	 -16			; fffffff0H
  0006c	08 00 00 00	 DD	 8
  00070	00 00 00 00	 DD	 $LN3@ScreenOffs
$LN3@ScreenOffs:
  00074	70		 DB	 112			; 00000070H
  00075	00		 DB	 0
?ScreenOffset@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ENDP	; CNewBoxesDoc::ScreenOffset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?DotSpacing@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ
_TEXT	SEGMENT
_p$ = -16						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?DotSpacing@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ PROC	; CNewBoxesDoc::DotSpacing, COMDAT
; _this$ = ecx

; 76   :   POINT DotSpacing(void){POINT p ={m_currentDotSpaceX,m_currentDotSpaceY};return p;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 88 e0 00 00
	00		 mov	 ecx, DWORD PTR [eax+224]
  00026	89 4d f0	 mov	 DWORD PTR _p$[ebp], ecx
  00029	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0002c	8b 82 e4 00 00
	00		 mov	 eax, DWORD PTR [edx+228]
  00032	89 45 f4	 mov	 DWORD PTR _p$[ebp+4], eax
  00035	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00038	8b 55 f0	 mov	 edx, DWORD PTR _p$[ebp]
  0003b	8b 45 f4	 mov	 eax, DWORD PTR _p$[ebp+4]
  0003e	89 11		 mov	 DWORD PTR [ecx], edx
  00040	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00043	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00046	52		 push	 edx
  00047	8b cd		 mov	 ecx, ebp
  00049	50		 push	 eax
  0004a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@DotSpacing
  00050	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00055	58		 pop	 eax
  00056	5a		 pop	 edx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
  0005d	0f 1f 00	 npad	 3
$LN5@DotSpacing:
  00060	01 00 00 00	 DD	 1
  00064	00 00 00 00	 DD	 $LN4@DotSpacing
$LN4@DotSpacing:
  00068	f0 ff ff ff	 DD	 -16			; fffffff0H
  0006c	08 00 00 00	 DD	 8
  00070	00 00 00 00	 DD	 $LN3@DotSpacing
$LN3@DotSpacing:
  00074	70		 DB	 112			; 00000070H
  00075	00		 DB	 0
?DotSpacing@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ENDP	; CNewBoxesDoc::DotSpacing
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesDoc.h
;	COMDAT ?GameSize@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ
_TEXT	SEGMENT
_p$ = -16						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GameSize@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ PROC		; CNewBoxesDoc::GameSize, COMDAT
; _this$ = ecx

; 75   :   POINT GameSize(void){POINT p={m_pGame->Width(),m_pGame->Height()};return p;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 88 28 36 00
	00		 mov	 ecx, DWORD PTR [eax+13864]
  00026	e8 00 00 00 00	 call	 ?Width@DOTS_AND_BOXES@@QBEHXZ ; DOTS_AND_BOXES::Width
  0002b	89 45 f0	 mov	 DWORD PTR _p$[ebp], eax
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	8b 89 28 36 00
	00		 mov	 ecx, DWORD PTR [ecx+13864]
  00037	e8 00 00 00 00	 call	 ?Height@DOTS_AND_BOXES@@QBEHXZ ; DOTS_AND_BOXES::Height
  0003c	89 45 f4	 mov	 DWORD PTR _p$[ebp+4], eax
  0003f	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00042	8b 45 f0	 mov	 eax, DWORD PTR _p$[ebp]
  00045	8b 4d f4	 mov	 ecx, DWORD PTR _p$[ebp+4]
  00048	89 02		 mov	 DWORD PTR [edx], eax
  0004a	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0004d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00050	52		 push	 edx
  00051	8b cd		 mov	 ecx, ebp
  00053	50		 push	 eax
  00054	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@GameSize
  0005a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0005f	58		 pop	 eax
  00060	5a		 pop	 edx
  00061	83 c4 14	 add	 esp, 20			; 00000014H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 04 00	 ret	 4
  00071	0f 1f 00	 npad	 3
$LN5@GameSize:
  00074	01 00 00 00	 DD	 1
  00078	00 00 00 00	 DD	 $LN4@GameSize
$LN4@GameSize:
  0007c	f0 ff ff ff	 DD	 -16			; fffffff0H
  00080	08 00 00 00	 DD	 8
  00084	00 00 00 00	 DD	 $LN3@GameSize
$LN3@GameSize:
  00088	70		 DB	 112			; 00000070H
  00089	00		 DB	 0
?GameSize@CNewBoxesDoc@@QAE?AUtagPOINT@@XZ ENDP		; CNewBoxesDoc::GameSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
_TEXT	SEGMENT
?InvalidateView@@YAXXZ PROC				; InvalidateView

; 387  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 388  :   pDoc->UpdateAllViews(NULL);

  00003	6a 00		 push	 0
  00005	6a 00		 push	 0
  00007	6a 00		 push	 0
  00009	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDoc@@3PAVCNewBoxesDoc@@A ; pDoc
  0000f	e8 00 00 00 00	 call	 ?UpdateAllViews@CDocument@@QAEXPAVCView@@JPAVCObject@@@Z ; CDocument::UpdateAllViews

; 389  : }

  00014	3b ec		 cmp	 ebp, esp
  00016	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?InvalidateView@@YAXXZ ENDP				; InvalidateView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\DotBoxLib\DotsAndBoxes.h
;	COMDAT ?Height@DOTS_AND_BOXES@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Height@DOTS_AND_BOXES@@QBEHXZ PROC			; DOTS_AND_BOXES::Height, COMDAT
; _this$ = ecx

; 93   :   INLINE int Height(void) const {return m_height;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?Height@DOTS_AND_BOXES@@QBEHXZ ENDP			; DOTS_AND_BOXES::Height
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\DotBoxLib\DotsAndBoxes.h
;	COMDAT ?Width@DOTS_AND_BOXES@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Width@DOTS_AND_BOXES@@QBEHXZ PROC			; DOTS_AND_BOXES::Width, COMDAT
; _this$ = ecx

; 92   :   INLINE int Width(void) const {return m_width;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?Width@DOTS_AND_BOXES@@QBEHXZ ENDP			; DOTS_AND_BOXES::Width
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\stdafx.h
;	COMDAT ??DVECTOR@@QAE?AV0@ABV0@@Z
_TEXT	SEGMENT
_w$ = -16						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??DVECTOR@@QAE?AV0@ABV0@@Z PROC				; VECTOR::operator*, COMDAT
; _this$ = ecx

; 66   :   VECTOR  operator *(const VECTOR& v){VECTOR w;w.x=x*v.x;w.y=y*v.y;return w;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f0	 lea	 ecx, DWORD PTR _w$[ebp]
  00020	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@XZ	; VECTOR::VECTOR
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0002b	8b 10		 mov	 edx, DWORD PTR [eax]
  0002d	0f af 11	 imul	 edx, DWORD PTR [ecx]
  00030	89 55 f0	 mov	 DWORD PTR _w$[ebp], edx
  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00039	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0003c	0f af 51 04	 imul	 edx, DWORD PTR [ecx+4]
  00040	89 55 f4	 mov	 DWORD PTR _w$[ebp+4], edx
  00043	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00046	8b 4d f0	 mov	 ecx, DWORD PTR _w$[ebp]
  00049	8b 55 f4	 mov	 edx, DWORD PTR _w$[ebp+4]
  0004c	89 08		 mov	 DWORD PTR [eax], ecx
  0004e	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00051	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00054	52		 push	 edx
  00055	8b cd		 mov	 ecx, ebp
  00057	50		 push	 eax
  00058	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@operator
  0005e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00063	58		 pop	 eax
  00064	5a		 pop	 edx
  00065	83 c4 14	 add	 esp, 20			; 00000014H
  00068	3b ec		 cmp	 ebp, esp
  0006a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 08 00	 ret	 8
  00075	0f 1f 00	 npad	 3
$LN5@operator:
  00078	01 00 00 00	 DD	 1
  0007c	00 00 00 00	 DD	 $LN4@operator
$LN4@operator:
  00080	f0 ff ff ff	 DD	 -16			; fffffff0H
  00084	08 00 00 00	 DD	 8
  00088	00 00 00 00	 DD	 $LN3@operator
$LN3@operator:
  0008c	77		 DB	 119			; 00000077H
  0008d	00		 DB	 0
??DVECTOR@@QAE?AV0@ABV0@@Z ENDP				; VECTOR::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\stdafx.h
;	COMDAT ??HVECTOR@@QAE?AV0@ABV0@@Z
_TEXT	SEGMENT
_w$ = -16						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_vector$ = 12						; size = 4
??HVECTOR@@QAE?AV0@ABV0@@Z PROC				; VECTOR::operator+, COMDAT
; _this$ = ecx

; 64   :   VECTOR  operator +(const VECTOR& vector){VECTOR w;w.x=x+vector.x; w.y=y+vector.y; return w;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	8d 4d f0	 lea	 ecx, DWORD PTR _w$[ebp]
  00020	e8 00 00 00 00	 call	 ??0VECTOR@@QAE@XZ	; VECTOR::VECTOR
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002a	8b 55 0c	 mov	 edx, DWORD PTR _vector$[ebp]
  0002d	03 0a		 add	 ecx, DWORD PTR [edx]
  0002f	89 4d f0	 mov	 DWORD PTR _w$[ebp], ecx
  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00038	8b 55 0c	 mov	 edx, DWORD PTR _vector$[ebp]
  0003b	03 4a 04	 add	 ecx, DWORD PTR [edx+4]
  0003e	89 4d f4	 mov	 DWORD PTR _w$[ebp+4], ecx
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _w$[ebp]
  00047	8b 55 f4	 mov	 edx, DWORD PTR _w$[ebp+4]
  0004a	89 08		 mov	 DWORD PTR [eax], ecx
  0004c	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0004f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00052	52		 push	 edx
  00053	8b cd		 mov	 ecx, ebp
  00055	50		 push	 eax
  00056	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@operator
  0005c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00061	58		 pop	 eax
  00062	5a		 pop	 edx
  00063	83 c4 14	 add	 esp, 20			; 00000014H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 08 00	 ret	 8
  00073	90		 npad	 1
$LN5@operator:
  00074	01 00 00 00	 DD	 1
  00078	00 00 00 00	 DD	 $LN4@operator
$LN4@operator:
  0007c	f0 ff ff ff	 DD	 -16			; fffffff0H
  00080	08 00 00 00	 DD	 8
  00084	00 00 00 00	 DD	 $LN3@operator
$LN3@operator:
  00088	77		 DB	 119			; 00000077H
  00089	00		 DB	 0
??HVECTOR@@QAE?AV0@ABV0@@Z ENDP				; VECTOR::operator+
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\stdafx.h
;	COMDAT ??4VECTOR@@QAEAAV0@ABUtagPOINT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_point$ = 8						; size = 4
??4VECTOR@@QAEAAV0@ABUtagPOINT@@@Z PROC			; VECTOR::operator=, COMDAT
; _this$ = ecx

; 63   :   VECTOR& operator =(const POINT& point){x=point.x;y=point.y;return *this;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _point$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _point$[ebp]
  00017	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001a	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??4VECTOR@@QAEAAV0@ABUtagPOINT@@@Z ENDP			; VECTOR::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\stdafx.h
;	COMDAT ??0VECTOR@@QAE@HH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??0VECTOR@@QAE@HH@Z PROC				; VECTOR::VECTOR, COMDAT
; _this$ = ecx

; 62   :   VECTOR(int a, int b){x=a;y=b;};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _a$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _b$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0VECTOR@@QAE@HH@Z ENDP				; VECTOR::VECTOR
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\stdafx.h
;	COMDAT ??0VECTOR@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0VECTOR@@QAE@XZ PROC					; VECTOR::VECTOR, COMDAT
; _this$ = ecx

; 61   :   VECTOR(void){};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0VECTOR@@QAE@XZ ENDP					; VECTOR::VECTOR
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File G:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\atlmfc\include\cstringt.h
;	COMDAT ??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z PROC ; ATL::operator!=, COMDAT

; 2566 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 2567 : 		return( str1.Compare( psz2 ) != 0 );

  0000c	8b f4		 mov	 esi, esp
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _psz2$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _str1$[ebp]
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Compare@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
  0001b	3b f4		 cmp	 esi, esp
  0001d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00022	85 c0		 test	 eax, eax
  00024	74 09		 je	 SHORT $LN3@operator
  00026	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  0002d	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR tv68[ebp], 0
$LN4@operator:
  00036	0f b6 45 fc	 movzx	 eax, BYTE PTR tv68[ebp]

; 2568 : 	}

  0003a	5e		 pop	 esi
  0003b	83 c4 04	 add	 esp, 4
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??9ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ENDP ; ATL::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File G:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\atlmfc\include\cstringt.h
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_strResult$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_str1$ = 12						; size = 4
_psz2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z PROC ; ATL::operator+, COMDAT

; 2400 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00021	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00024	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 2401 : 		CStringT strResult( str1.GetManager() );

  0003f	8b f4		 mov	 esi, esp
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetManager@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b f4		 mov	 esi, esp
  00053	50		 push	 eax
  00054	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2402 : 
; 2403 : 		CThisSimpleString::Concatenate( strResult, str1, str1.GetLength(), psz2, CThisSimpleString::StringLength( psz2 ) );

  0006b	8b f4		 mov	 esi, esp
  0006d	8b 45 10	 mov	 eax, DWORD PTR _psz2$[ebp]
  00070	50		 push	 eax
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?StringLength@?$CSimpleStringT@D$00@ATL@@SAHPBD@Z
  00077	83 c4 04	 add	 esp, 4
  0007a	3b f4		 cmp	 esi, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b f4		 mov	 esi, esp
  00083	50		 push	 eax
  00084	8b 4d 10	 mov	 ecx, DWORD PTR _psz2$[ebp]
  00087	51		 push	 ecx
  00088	8b fc		 mov	 edi, esp
  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  0008d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  00093	3b fc		 cmp	 edi, esp
  00095	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009a	50		 push	 eax
  0009b	8b fc		 mov	 edi, esp
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  000a6	3b fc		 cmp	 edi, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	50		 push	 eax
  000ae	8d 55 ec	 lea	 edx, DWORD PTR _strResult$[ebp]
  000b1	52		 push	 edx
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z
  000b8	83 c4 14	 add	 esp, 20			; 00000014H
  000bb	3b f4		 cmp	 esi, esp
  000bd	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2404 : 
; 2405 : 		return( strResult );

  000c2	8b f4		 mov	 esi, esp
  000c4	8d 45 ec	 lea	 eax, DWORD PTR _strResult$[ebp]
  000c7	50		 push	 eax
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  000d1	3b f4		 cmp	 esi, esp
  000d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d8	8b 4d e4	 mov	 ecx, DWORD PTR $T2[ebp]
  000db	83 c9 01	 or	 ecx, 1
  000de	89 4d e4	 mov	 DWORD PTR $T2[ebp], ecx
  000e1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000e8	8b f4		 mov	 esi, esp
  000ea	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  000ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000f3	3b f4		 cmp	 esi, esp
  000f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fa	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2406 : 	}

  000fd	52		 push	 edx
  000fe	8b cd		 mov	 ecx, ebp
  00100	50		 push	 eax
  00101	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@operator
  00107	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0010c	58		 pop	 eax
  0010d	5a		 pop	 edx
  0010e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00111	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00118	59		 pop	 ecx
  00119	5f		 pop	 edi
  0011a	5e		 pop	 esi
  0011b	83 c4 1c	 add	 esp, 28			; 0000001cH
  0011e	3b ec		 cmp	 ebp, esp
  00120	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00125	8b e5		 mov	 esp, ebp
  00127	5d		 pop	 ebp
  00128	c3		 ret	 0
  00129	0f 1f 00	 npad	 3
$LN9@operator:
  0012c	01 00 00 00	 DD	 1
  00130	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  00134	ec ff ff ff	 DD	 -20			; ffffffecH
  00138	04 00 00 00	 DD	 4
  0013c	00 00 00 00	 DD	 $LN6@operator
$LN6@operator:
  00140	73		 DB	 115			; 00000073H
  00141	74		 DB	 116			; 00000074H
  00142	72		 DB	 114			; 00000072H
  00143	52		 DB	 82			; 00000052H
  00144	65		 DB	 101			; 00000065H
  00145	73		 DB	 115			; 00000073H
  00146	75		 DB	 117			; 00000075H
  00147	6c		 DB	 108			; 0000006cH
  00148	74		 DB	 116			; 00000074H
  00149	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@PBD@Z ENDP ; ATL::operator+
; Function compile flags: /Odtp /RTCsu
; File G:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\atlmfc\include\cstringt.h
;	COMDAT ??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
_strResult$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_str1$ = 12						; size = 4
_str2$ = 16						; size = 4
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z PROC ; ATL::operator+, COMDAT

; 2389 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	89 45 e4	 mov	 DWORD PTR [ebp-28], eax
  0001e	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  00021	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00024	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0002c	33 c5		 xor	 eax, ebp
  0002e	50		 push	 eax
  0002f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00032	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00038	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 2390 : 		CStringT strResult( str1.GetManager() );

  0003f	8b f4		 mov	 esi, esp
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  00044	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetManager@?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ
  0004a	3b f4		 cmp	 esi, esp
  0004c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00051	8b f4		 mov	 esi, esp
  00053	50		 push	 eax
  00054	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 2391 : 
; 2392 : 		CThisSimpleString::Concatenate( strResult, str1, str1.GetLength(), str2, str2.GetLength() );

  0006b	8b f4		 mov	 esi, esp
  0006d	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  00076	3b f4		 cmp	 esi, esp
  00078	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007d	8b f4		 mov	 esi, esp
  0007f	50		 push	 eax
  00080	8b fc		 mov	 edi, esp
  00082	8b 4d 10	 mov	 ecx, DWORD PTR _str2$[ebp]
  00085	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  0008b	3b fc		 cmp	 edi, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	50		 push	 eax
  00093	8b fc		 mov	 edi, esp
  00095	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLength@?$CSimpleStringT@D$00@ATL@@QBEHXZ
  0009e	3b fc		 cmp	 edi, esp
  000a0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a5	50		 push	 eax
  000a6	8b fc		 mov	 edi, esp
  000a8	8b 4d 0c	 mov	 ecx, DWORD PTR _str1$[ebp]
  000ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??B?$CSimpleStringT@D$00@ATL@@QBEPBDXZ
  000b1	3b fc		 cmp	 edi, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b8	50		 push	 eax
  000b9	8d 45 ec	 lea	 eax, DWORD PTR _strResult$[ebp]
  000bc	50		 push	 eax
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?Concatenate@?$CSimpleStringT@D$00@ATL@@KAXAAV12@PBDH1H@Z
  000c3	83 c4 14	 add	 esp, 20			; 00000014H
  000c6	3b f4		 cmp	 esi, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2393 : 
; 2394 : 		return( strResult );

  000cd	8b f4		 mov	 esi, esp
  000cf	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  000d2	51		 push	 ecx
  000d3	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
  000dc	3b f4		 cmp	 esi, esp
  000de	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e3	8b 55 e4	 mov	 edx, DWORD PTR $T2[ebp]
  000e6	83 ca 01	 or	 edx, 1
  000e9	89 55 e4	 mov	 DWORD PTR $T2[ebp], edx
  000ec	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000f3	8b f4		 mov	 esi, esp
  000f5	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  000f8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  000fe	3b f4		 cmp	 esi, esp
  00100	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00105	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2395 : 	}

  00108	52		 push	 edx
  00109	8b cd		 mov	 ecx, ebp
  0010b	50		 push	 eax
  0010c	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN9@operator
  00112	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00117	58		 pop	 eax
  00118	5a		 pop	 edx
  00119	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00123	59		 pop	 ecx
  00124	5f		 pop	 edi
  00125	5e		 pop	 esi
  00126	83 c4 1c	 add	 esp, 28			; 0000001cH
  00129	3b ec		 cmp	 ebp, esp
  0012b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c3		 ret	 0
$LN9@operator:
  00134	01 00 00 00	 DD	 1
  00138	00 00 00 00	 DD	 $LN8@operator
$LN8@operator:
  0013c	ec ff ff ff	 DD	 -20			; ffffffecH
  00140	04 00 00 00	 DD	 4
  00144	00 00 00 00	 DD	 $LN6@operator
$LN6@operator:
  00148	73		 DB	 115			; 00000073H
  00149	74		 DB	 116			; 00000074H
  0014a	72		 DB	 114			; 00000072H
  0014b	52		 DB	 82			; 00000052H
  0014c	65		 DB	 101			; 00000065H
  0014d	73		 DB	 115			; 00000073H
  0014e	75		 DB	 117			; 00000075H
  0014f	6c		 DB	 108			; 0000006cH
  00150	74		 DB	 116			; 00000074H
  00151	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z$0:
  00000	8b f4		 mov	 esi, esp
  00002	8d 4d ec	 lea	 ecx, DWORD PTR _strResult$[ebp]
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ
  0000b	3b f4		 cmp	 esi, esp
  0000d	e9 00 00 00 00	 jmp	 __RTC_CheckEsp
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??HATL@@YA?AV?$CStringT@DV?$StrTraitMFC_DLL@DV?$ChTraitsCRT@D@ATL@@@@@0@ABV10@0@Z ENDP ; ATL::operator+
; Function compile flags: /Odtp /RTCsu
; File G:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\atlmfc\include\atltrace.h
;	COMDAT ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z
_TEXT	SEGMENT
_buffer$ = -264						; size = 256
__$ArrayPad$ = -4					; size = 4
_pszCategory$ = 8					; size = 4
_nCategory$ = 12					; size = 4
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z PROC		; ATL::CTrace::RegisterCategory, COMDAT

; 329  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00011	b9 43 00 00 00	 mov	 ecx, 67			; 00000043H
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 330  : 		if (pszCategory == nullptr)

  00027	83 7d 08 00	 cmp	 DWORD PTR _pszCategory$[ebp], 0
  0002b	75 05		 jne	 SHORT $LN2@RegisterCa

; 331  : 		{
; 332  : 			return;

  0002d	e9 bb 00 00 00	 jmp	 $LN1@RegisterCa
$LN2@RegisterCa:

; 333  : 		}
; 334  : 
; 335  : 		if (m_nLastCategory >= MaxCategoryArray) 

  00032	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 32 ; ATL::CTrace::m_nLastCategory, 00000020H
  00039	72 36		 jb	 SHORT $LN3@RegisterCa

; 336  : 		{
; 337  : 			ATLASSERT(false && "Too many categories defined");

  0003b	33 c0		 xor	 eax, eax
  0003d	75 30		 jne	 SHORT $LN5@RegisterCa
  0003f	8b f4		 mov	 esi, esp
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_1EO@EBPPKGOM@?$AAf?$AAa?$AAl?$AAs?$AAe?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAT?$AAo?$AAo?$AA?5?$AAm@
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs@
  0004b	6a 00		 push	 0
  0004d	68 51 01 00 00	 push	 337			; 00000151H
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_1LM@KONDCONO@?$AAG?$AA?3?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAV?$AAi@
  00057	6a 02		 push	 2
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  0005f	83 c4 18	 add	 esp, 24			; 00000018H
  00062	3b f4		 cmp	 esi, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 01		 jne	 SHORT $LN5@RegisterCa
  0006e	cc		 int	 3
$LN5@RegisterCa:

; 338  : 			return;

  0006f	eb 7c		 jmp	 SHORT $LN1@RegisterCa
$LN3@RegisterCa:

; 339  : 		}
; 340  : 
; 341  : 		m_nMap[m_nLastCategory].nCategory = nCategory;

  00071	69 15 00 00 00
	00 04 01 00 00	 imul	 edx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  0007b	8b 45 0c	 mov	 eax, DWORD PTR _nCategory$[ebp]
  0007e	89 82 00 00 00
	00		 mov	 DWORD PTR ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A[edx], eax

; 342  : #ifdef _UNICODE
; 343  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, pszCategory);
; 344  : #else
; 345  : 		wchar_t buffer[MaxLengthOfCategoryName] = { 0 };	

  00084	68 00 01 00 00	 push	 256			; 00000100H
  00089	6a 00		 push	 0
  0008b	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00091	51		 push	 ecx
  00092	e8 00 00 00 00	 call	 _memset
  00097	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : #if _MSC_VER < 1900
; 347  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%S", pszCategory);
; 348  : #else
; 349  : 		swprintf_s(buffer, MaxLengthOfCategoryName - 1, L"%hs", pszCategory);

  0009a	8b 55 08	 mov	 edx, DWORD PTR _pszCategory$[ebp]
  0009d	52		 push	 edx
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_17LGGGMOOB@?$AA?$CF?$AAh?$AAs@
  000a3	6a 7f		 push	 127			; 0000007fH
  000a5	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 _swprintf_s
  000b1	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : #endif
; 351  : 		wcscpy_s(m_nMap[m_nLastCategory].categryName, MaxLengthOfCategoryName - 1, buffer);

  000b4	8b f4		 mov	 esi, esp
  000b6	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  000bc	51		 push	 ecx
  000bd	6a 7f		 push	 127			; 0000007fH
  000bf	69 15 00 00 00
	00 04 01 00 00	 imul	 edx, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, 260 ; ATL::CTrace::m_nLastCategory
  000c9	81 c2 04 00 00
	00		 add	 edx, OFFSET ?m_nMap@CTrace@ATL@@1PAUCategoryMap@12@A+4
  000cf	52		 push	 edx
  000d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wcscpy_s
  000d6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 352  : #endif
; 353  : 	
; 354  : 		m_nLastCategory++;

  000e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA ; ATL::CTrace::m_nLastCategory
  000e5	83 c0 01	 add	 eax, 1
  000e8	a3 00 00 00 00	 mov	 DWORD PTR ?m_nLastCategory@CTrace@ATL@@1IA, eax ; ATL::CTrace::m_nLastCategory
$LN1@RegisterCa:

; 355  : 	}

  000ed	52		 push	 edx
  000ee	8b cd		 mov	 ecx, ebp
  000f0	50		 push	 eax
  000f1	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@RegisterCa
  000f7	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000fc	58		 pop	 eax
  000fd	5a		 pop	 edx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00103	33 cd		 xor	 ecx, ebp
  00105	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010a	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  00110	3b ec		 cmp	 ebp, esp
  00112	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00117	8b e5		 mov	 esp, ebp
  00119	5d		 pop	 ebp
  0011a	c3		 ret	 0
  0011b	90		 npad	 1
$LN8@RegisterCa:
  0011c	01 00 00 00	 DD	 1
  00120	00 00 00 00	 DD	 $LN7@RegisterCa
$LN7@RegisterCa:
  00124	f8 fe ff ff	 DD	 -264			; fffffef8H
  00128	00 01 00 00	 DD	 256			; 00000100H
  0012c	00 00 00 00	 DD	 $LN6@RegisterCa
$LN6@RegisterCa:
  00130	62		 DB	 98			; 00000062H
  00131	75		 DB	 117			; 00000075H
  00132	66		 DB	 102			; 00000066H
  00133	66		 DB	 102			; 00000066H
  00134	65		 DB	 101			; 00000065H
  00135	72		 DB	 114			; 00000072H
  00136	00		 DB	 0
?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ENDP		; ATL::CTrace::RegisterCategory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File G:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceString@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceString@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceString'', COMDAT

; 114  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceString> atlTraceString(_T("atlTraceString"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG74238
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceString@ATL@@3V?$CTraceCategoryEx@$0CAAAA@$0A@@1@A ; ATL::atlTraceString
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceString@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceString''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File G:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 00 02 00	 push	 131072			; 00020000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<131072,0>::CTraceCategoryEx<131072,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File G:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\atlmfc\include\atltrace.h
;	COMDAT ??__EatlTraceException@ATL@@YAXXZ
text$di	SEGMENT
??__EatlTraceException@ATL@@YAXXZ PROC			; ATL::`dynamic initializer for 'atlTraceException'', COMDAT

; 110  : __declspec(selectany) CTraceCategoryEx<CTraceCategoryEx<>::TraceException> atlTraceException(_T("atlTraceException"));

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	68 00 00 00 00	 push	 OFFSET $SG74042
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET ?atlTraceException@ATL@@3V?$CTraceCategoryEx@$0CAAA@$0A@@1@A ; ATL::atlTraceException
  0000d	e8 00 00 00 00	 call	 ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
  00012	3b ec		 cmp	 ebp, esp
  00014	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
??__EatlTraceException@ATL@@YAXXZ ENDP			; ATL::`dynamic initializer for 'atlTraceException''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File G:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\atlmfc\include\atltrace.h
;	COMDAT ??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszCategoryName$ = 8					; size = 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z PROC	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>, COMDAT
; _this$ = ecx

; 480  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH
  0000b	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 481  : 	CTrace::RegisterCategory(pszCategoryName, traceCategory);

  0000e	68 00 20 00 00	 push	 8192			; 00002000H
  00013	8b 45 08	 mov	 eax, DWORD PTR _pszCategoryName$[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?RegisterCategory@CTrace@ATL@@SAXPBDI@Z ; ATL::CTrace::RegisterCategory
  0001c	83 c4 08	 add	 esp, 8

; 482  : }

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 c4 04	 add	 esp, 4
  00025	3b ec		 cmp	 ebp, esp
  00027	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
??0?$CTraceCategoryEx@$0CAAA@$0A@@ATL@@QAE@PBD@Z ENDP	; ATL::CTraceCategoryEx<8192,0>::CTraceCategoryEx<8192,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File G:\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\atlmfc\include\afx.h
;	COMDAT ?AfxAssertFailedLine@@YGHPBDH@Z
_TEXT	SEGMENT
_bResult$ = -44						; size = 4
_bQuit$ = -40						; size = 4
_msg$ = -32						; size = 28
_lpszFileName$ = 8					; size = 4
_nLine$ = 12						; size = 4
?AfxAssertFailedLine@@YGHPBDH@Z PROC			; AfxAssertFailedLine, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8d 7d d4	 lea	 edi, DWORD PTR [ebp-44]
  0000b	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd

; 313  : 	// we remove WM_QUIT because if it is in the queue then the message box
; 314  : 	// won't display
; 315  : 	MSG msg;
; 316  : 	BOOL bQuit = PeekMessage(&msg, NULL, WM_QUIT, WM_QUIT, PM_REMOVE);

  00017	8b f4		 mov	 esi, esp
  00019	6a 01		 push	 1
  0001b	6a 12		 push	 18			; 00000012H
  0001d	6a 12		 push	 18			; 00000012H
  0001f	6a 00		 push	 0
  00021	8d 45 e0	 lea	 eax, DWORD PTR _msg$[ebp]
  00024	50		 push	 eax
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PeekMessageA@20
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00032	89 45 d8	 mov	 DWORD PTR _bQuit$[ebp], eax

; 317  : 	BOOL bResult = _CrtDbgReport(_CRT_ASSERT, lpszFileName, nLine, NULL, NULL);

  00035	8b f4		 mov	 esi, esp
  00037	6a 00		 push	 0
  00039	6a 00		 push	 0
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR _nLine$[ebp]
  0003e	51		 push	 ecx
  0003f	8b 55 08	 mov	 edx, DWORD PTR _lpszFileName$[ebp]
  00042	52		 push	 edx
  00043	6a 02		 push	 2
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  0004b	83 c4 14	 add	 esp, 20			; 00000014H
  0004e	3b f4		 cmp	 esi, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	89 45 d4	 mov	 DWORD PTR _bResult$[ebp], eax

; 318  : 	if (bQuit)

  00058	83 7d d8 00	 cmp	 DWORD PTR _bQuit$[ebp], 0
  0005c	74 13		 je	 SHORT $LN2@AfxAssertF

; 319  : 		PostQuitMessage((int)msg.wParam);

  0005e	8b f4		 mov	 esi, esp
  00060	8b 45 e8	 mov	 eax, DWORD PTR _msg$[ebp+8]
  00063	50		 push	 eax
  00064	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
  0006a	3b f4		 cmp	 esi, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@AfxAssertF:

; 320  : 	return bResult;

  00071	8b 45 d4	 mov	 eax, DWORD PTR _bResult$[ebp]

; 321  : }

  00074	52		 push	 edx
  00075	8b cd		 mov	 ecx, ebp
  00077	50		 push	 eax
  00078	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@AfxAssertF
  0007e	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00083	58		 pop	 eax
  00084	5a		 pop	 edx
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	83 c4 2c	 add	 esp, 44			; 0000002cH
  0008a	3b ec		 cmp	 ebp, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 08 00	 ret	 8
  00097	90		 npad	 1
$LN6@AfxAssertF:
  00098	01 00 00 00	 DD	 1
  0009c	00 00 00 00	 DD	 $LN5@AfxAssertF
$LN5@AfxAssertF:
  000a0	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000a4	1c 00 00 00	 DD	 28			; 0000001cH
  000a8	00 00 00 00	 DD	 $LN4@AfxAssertF
$LN4@AfxAssertF:
  000ac	6d		 DB	 109			; 0000006dH
  000ad	73		 DB	 115			; 00000073H
  000ae	67		 DB	 103			; 00000067H
  000af	00		 DB	 0
?AfxAssertFailedLine@@YGHPBDH@Z ENDP			; AfxAssertFailedLine
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_wstdio.h
;	COMDAT _swprintf_s
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_swprintf_s PROC					; COMDAT

; 1523 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	c7 45 f4 cc cc
	cc cc		 mov	 DWORD PTR [ebp-12], -858993460 ; ccccccccH
  0000d	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  00014	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 1524 :             int _Result;
; 1525 :             va_list _ArgList;
; 1526 :             __crt_va_start(_ArgList, _Format);

  0001b	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0001e	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1527 :             _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  00021	8b 4d f8	 mov	 ecx, DWORD PTR __ArgList$[ebp]
  00024	51		 push	 ecx
  00025	6a 00		 push	 0
  00027	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  0002a	52		 push	 edx
  0002b	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  0002e	50		 push	 eax
  0002f	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 __vswprintf_s_l
  00038	83 c4 14	 add	 esp, 20			; 00000014H
  0003b	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1528 :             __crt_va_end(_ArgList);

  0003e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1529 :             return _Result;

  00045	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1530 :         }

  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	3b ec		 cmp	 ebp, esp
  0004d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
_swprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_wstdio.h
;	COMDAT __vswprintf_s_l
_TEXT	SEGMENT
tv73 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vswprintf_s_l PROC					; COMDAT

; 1256 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	c7 45 f8 cc cc
	cc cc		 mov	 DWORD PTR [ebp-8], -858993460 ; ccccccccH
  0000e	c7 45 fc cc cc
	cc cc		 mov	 DWORD PTR [ebp-4], -858993460 ; ccccccccH

; 1257 :         int const _Result = __stdio_common_vswprintf_s(

  00015	8b f4		 mov	 esi, esp
  00017	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00022	52		 push	 edx
  00023	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00030	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00033	52		 push	 edx
  00034	8b 00		 mov	 eax, DWORD PTR [eax]
  00036	50		 push	 eax
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vswprintf_s
  0003d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1258 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1259 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1260 : 
; 1261 :         return _Result < 0 ? -1 : _Result;

  0004a	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0004e	7d 09		 jge	 SHORT $LN3@vswprintf_
  00050	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  00057	eb 06		 jmp	 SHORT $LN4@vswprintf_
$LN3@vswprintf_:
  00059	8b 4d fc	 mov	 ecx, DWORD PTR __Result$[ebp]
  0005c	89 4d f8	 mov	 DWORD PTR tv73[ebp], ecx
$LN4@vswprintf_:
  0005f	8b 45 f8	 mov	 eax, DWORD PTR tv73[ebp]

; 1262 :     }

  00062	5e		 pop	 esi
  00063	83 c4 08	 add	 esp, 8
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
__vswprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Windows Kits\10\Include\10.0.22000.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 90   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\NewBoxesView.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
