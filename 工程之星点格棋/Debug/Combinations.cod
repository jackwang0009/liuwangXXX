; Listing generated by Microsoft (R) Optimizing Compiler Version 19.35.32217.1 

	TITLE	C:\Users\15485\Desktop\工程之星点格棋\工程之星点格棋\Debug\Combinations.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0COMBINATIONS@@QAE@XZ				; COMBINATIONS::COMBINATIONS
PUBLIC	?Index@COMBINATIONS@@QAEI_KHH@Z			; COMBINATIONS::Index
PUBLIC	?Combination@COMBINATIONS@@QAE_KIHH@Z		; COMBINATIONS::Combination
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__allshl:PROC
EXTRN	__aullshr:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\DotBoxLib\Combinations.cpp
_TEXT	SEGMENT
_j$ = -20						; size = 4
_i$ = -16						; size = 4
_result$ = -12						; size = 8
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_nOneBits$ = 12						; size = 4
_nTotalBits$ = 16					; size = 4
?Combination@COMBINATIONS@@QAE_KIHH@Z PROC		; COMBINATIONS::Combination
; _this$ = ecx

; 48   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  0000e	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00011	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00014	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  00017	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 49   :   ui64 result = 0;

  0001d	0f 57 c0	 xorps	 xmm0, xmm0
  00020	66 0f 13 45 f4	 movlpd	 QWORD PTR _result$[ebp], xmm0

; 50   :   int i, j=nTotalBits;

  00025	8b 45 10	 mov	 eax, DWORD PTR _nTotalBits$[ebp]
  00028	89 45 ec	 mov	 DWORD PTR _j$[ebp], eax

; 51   :   for (i=0; i<nTotalBits; i++)

  0002b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00032	eb 09		 jmp	 SHORT $LN4@Combinatio
$LN2@Combinatio:
  00034	8b 4d f0	 mov	 ecx, DWORD PTR _i$[ebp]
  00037	83 c1 01	 add	 ecx, 1
  0003a	89 4d f0	 mov	 DWORD PTR _i$[ebp], ecx
$LN4@Combinatio:
  0003d	8b 55 f0	 mov	 edx, DWORD PTR _i$[ebp]
  00040	3b 55 10	 cmp	 edx, DWORD PTR _nTotalBits$[ebp]
  00043	7d 61		 jge	 SHORT $LN3@Combinatio

; 52   :   {
; 53   :     j--;

  00045	8b 45 ec	 mov	 eax, DWORD PTR _j$[ebp]
  00048	83 e8 01	 sub	 eax, 1
  0004b	89 45 ec	 mov	 DWORD PTR _j$[ebp], eax

; 54   :     result <<= 1;

  0004e	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]
  00051	8b 55 f8	 mov	 edx, DWORD PTR _result$[ebp+4]
  00054	b1 01		 mov	 cl, 1
  00056	e8 00 00 00 00	 call	 __allshl
  0005b	89 45 f4	 mov	 DWORD PTR _result$[ebp], eax
  0005e	89 55 f8	 mov	 DWORD PTR _result$[ebp+4], edx

; 55   :     if (index >= table[nOneBits][j])

  00061	69 4d 0c a4 00
	00 00		 imul	 ecx, DWORD PTR _nOneBits$[ebp], 164
  00068	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  0006b	8b 55 ec	 mov	 edx, DWORD PTR _j$[ebp]
  0006e	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  00071	3b 04 91	 cmp	 eax, DWORD PTR [ecx+edx*4]
  00074	72 2e		 jb	 SHORT $LN5@Combinatio

; 56   :     {
; 57   :       index -= table[nOneBits][j];

  00076	69 4d 0c a4 00
	00 00		 imul	 ecx, DWORD PTR _nOneBits$[ebp], 164
  0007d	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  00080	8b 55 ec	 mov	 edx, DWORD PTR _j$[ebp]
  00083	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  00086	2b 04 91	 sub	 eax, DWORD PTR [ecx+edx*4]
  00089	89 45 08	 mov	 DWORD PTR _index$[ebp], eax

; 58   :       result |= 1;

  0008c	8b 4d f4	 mov	 ecx, DWORD PTR _result$[ebp]
  0008f	83 c9 01	 or	 ecx, 1
  00092	8b 55 f8	 mov	 edx, DWORD PTR _result$[ebp+4]
  00095	89 4d f4	 mov	 DWORD PTR _result$[ebp], ecx
  00098	89 55 f8	 mov	 DWORD PTR _result$[ebp+4], edx

; 59   :       nOneBits--;

  0009b	8b 45 0c	 mov	 eax, DWORD PTR _nOneBits$[ebp]
  0009e	83 e8 01	 sub	 eax, 1
  000a1	89 45 0c	 mov	 DWORD PTR _nOneBits$[ebp], eax
$LN5@Combinatio:

; 60   :     };
; 61   :   };

  000a4	eb 8e		 jmp	 SHORT $LN2@Combinatio
$LN3@Combinatio:

; 62   :   return result;

  000a6	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]
  000a9	8b 55 f8	 mov	 edx, DWORD PTR _result$[ebp+4]

; 63   : }

  000ac	83 c4 14	 add	 esp, 20			; 00000014H
  000af	3b ec		 cmp	 ebp, esp
  000b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 0c 00	 ret	 12			; 0000000cH
?Combination@COMBINATIONS@@QAE_KIHH@Z ENDP		; COMBINATIONS::Combination
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\DotBoxLib\Combinations.cpp
_TEXT	SEGMENT
tv133 = -24						; size = 8
_mask$ = -16						; size = 8
_result$ = -8						; size = 4
_this$ = -4						; size = 4
_p$ = 8							; size = 8
_nOneBits$ = 16						; size = 4
_nTotalBits$ = 20					; size = 4
?Index@COMBINATIONS@@QAEI_KHH@Z PROC			; COMBINATIONS::Index
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0000b	89 45 e8	 mov	 DWORD PTR [ebp-24], eax
  0000e	89 45 ec	 mov	 DWORD PTR [ebp-20], eax
  00011	89 45 f0	 mov	 DWORD PTR [ebp-16], eax
  00014	89 45 f4	 mov	 DWORD PTR [ebp-12], eax
  00017	89 45 f8	 mov	 DWORD PTR [ebp-8], eax
  0001a	89 45 fc	 mov	 DWORD PTR [ebp-4], eax
  0001d	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 32   :   unsigned int result = 0;

  00020	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 33   :   ui64 mask = 1I64 << nTotalBits;

  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	33 d2		 xor	 edx, edx
  0002e	8b 4d 14	 mov	 ecx, DWORD PTR _nTotalBits$[ebp]
  00031	e8 00 00 00 00	 call	 __allshl
  00036	89 45 f0	 mov	 DWORD PTR _mask$[ebp], eax
  00039	89 55 f4	 mov	 DWORD PTR _mask$[ebp+4], edx
$LN2@Index:

; 34   :   while (nOneBits > 0)

  0003c	83 7d 10 00	 cmp	 DWORD PTR _nOneBits$[ebp], 0
  00040	7e 57		 jle	 SHORT $LN3@Index

; 35   :   {
; 36   :     mask >>= 1;

  00042	8b 45 f0	 mov	 eax, DWORD PTR _mask$[ebp]
  00045	8b 55 f4	 mov	 edx, DWORD PTR _mask$[ebp+4]
  00048	b1 01		 mov	 cl, 1
  0004a	e8 00 00 00 00	 call	 __aullshr
  0004f	89 45 f0	 mov	 DWORD PTR _mask$[ebp], eax
  00052	89 55 f4	 mov	 DWORD PTR _mask$[ebp+4], edx

; 37   :     nTotalBits--;

  00055	8b 45 14	 mov	 eax, DWORD PTR _nTotalBits$[ebp]
  00058	83 e8 01	 sub	 eax, 1
  0005b	89 45 14	 mov	 DWORD PTR _nTotalBits$[ebp], eax

; 38   :     if ((p & mask) != 0)

  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00061	23 4d f0	 and	 ecx, DWORD PTR _mask$[ebp]
  00064	8b 55 0c	 mov	 edx, DWORD PTR _p$[ebp+4]
  00067	23 55 f4	 and	 edx, DWORD PTR _mask$[ebp+4]
  0006a	89 4d e8	 mov	 DWORD PTR tv133[ebp], ecx
  0006d	89 55 ec	 mov	 DWORD PTR tv133[ebp+4], edx
  00070	8b 45 e8	 mov	 eax, DWORD PTR tv133[ebp]
  00073	0b 45 ec	 or	 eax, DWORD PTR tv133[ebp+4]
  00076	74 1f		 je	 SHORT $LN4@Index

; 39   :     {
; 40   :       result += table[nOneBits][nTotalBits];

  00078	69 4d 10 a4 00
	00 00		 imul	 ecx, DWORD PTR _nOneBits$[ebp], 164
  0007f	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  00082	8b 55 14	 mov	 edx, DWORD PTR _nTotalBits$[ebp]
  00085	8b 45 f8	 mov	 eax, DWORD PTR _result$[ebp]
  00088	03 04 91	 add	 eax, DWORD PTR [ecx+edx*4]
  0008b	89 45 f8	 mov	 DWORD PTR _result$[ebp], eax

; 41   :       nOneBits--;

  0008e	8b 4d 10	 mov	 ecx, DWORD PTR _nOneBits$[ebp]
  00091	83 e9 01	 sub	 ecx, 1
  00094	89 4d 10	 mov	 DWORD PTR _nOneBits$[ebp], ecx
$LN4@Index:

; 42   :     };
; 43   :   };

  00097	eb a3		 jmp	 SHORT $LN2@Index
$LN3@Index:

; 44   :   return result;

  00099	8b 45 f8	 mov	 eax, DWORD PTR _result$[ebp]

; 45   : }

  0009c	83 c4 18	 add	 esp, 24			; 00000018H
  0009f	3b ec		 cmp	 ebp, esp
  000a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c2 10 00	 ret	 16			; 00000010H
?Index@COMBINATIONS@@QAEI_KHH@Z ENDP			; COMBINATIONS::Index
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\DotBoxLib\Combinations.cpp
_TEXT	SEGMENT
_c$ = -12						; size = 4
_r$ = -8						; size = 4
_this$ = -4						; size = 4
??0COMBINATIONS@@QAE@XZ PROC				; COMBINATIONS::COMBINATIONS
; _this$ = ecx

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 11   :   int r, c;
; 12   :   for (r=0; r<=10; r++)

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _r$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@COMBINATIO
$LN2@COMBINATIO:
  00012	8b 45 f8	 mov	 eax, DWORD PTR _r$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 f8	 mov	 DWORD PTR _r$[ebp], eax
$LN4@COMBINATIO:
  0001b	83 7d f8 0a	 cmp	 DWORD PTR _r$[ebp], 10	; 0000000aH
  0001f	7f 1b		 jg	 SHORT $LN3@COMBINATIO

; 13   :   {
; 14   :     table[r][0] = 0;

  00021	69 4d f8 a4 00
	00 00		 imul	 ecx, DWORD PTR _r$[ebp], 164
  00028	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  0002b	ba 04 00 00 00	 mov	 edx, 4
  00030	6b c2 00	 imul	 eax, edx, 0
  00033	c7 04 01 00 00
	00 00		 mov	 DWORD PTR [ecx+eax], 0

; 15   :   };

  0003a	eb d6		 jmp	 SHORT $LN2@COMBINATIO
$LN3@COMBINATIO:

; 16   :   for (c=0; c<=40; c++)

  0003c	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _c$[ebp], 0
  00043	eb 09		 jmp	 SHORT $LN7@COMBINATIO
$LN5@COMBINATIO:
  00045	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00048	83 c1 01	 add	 ecx, 1
  0004b	89 4d f4	 mov	 DWORD PTR _c$[ebp], ecx
$LN7@COMBINATIO:
  0004e	83 7d f4 28	 cmp	 DWORD PTR _c$[ebp], 40	; 00000028H
  00052	7f 17		 jg	 SHORT $LN6@COMBINATIO

; 17   :   {
; 18   :     table[0][c] = 1;

  00054	ba a4 00 00 00	 mov	 edx, 164		; 000000a4H
  00059	6b c2 00	 imul	 eax, edx, 0
  0005c	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00062	c7 04 88 01 00
	00 00		 mov	 DWORD PTR [eax+ecx*4], 1

; 19   :   };

  00069	eb da		 jmp	 SHORT $LN5@COMBINATIO
$LN6@COMBINATIO:

; 20   :   for (r=1; r<=10; r++)

  0006b	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _r$[ebp], 1
  00072	eb 09		 jmp	 SHORT $LN10@COMBINATIO
$LN8@COMBINATIO:
  00074	8b 55 f8	 mov	 edx, DWORD PTR _r$[ebp]
  00077	83 c2 01	 add	 edx, 1
  0007a	89 55 f8	 mov	 DWORD PTR _r$[ebp], edx
$LN10@COMBINATIO:
  0007d	83 7d f8 0a	 cmp	 DWORD PTR _r$[ebp], 10	; 0000000aH
  00081	7f 53		 jg	 SHORT $LN1@COMBINATIO

; 21   :   {
; 22   :     for (c=1; c<=40; c++)

  00083	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _c$[ebp], 1
  0008a	eb 09		 jmp	 SHORT $LN13@COMBINATIO
$LN11@COMBINATIO:
  0008c	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0008f	83 c0 01	 add	 eax, 1
  00092	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
$LN13@COMBINATIO:
  00095	83 7d f4 28	 cmp	 DWORD PTR _c$[ebp], 40	; 00000028H
  00099	7f 39		 jg	 SHORT $LN12@COMBINATIO

; 23   :     {
; 24   :       table[r][c] = table[r][c-1] + table[r-1][c-1];

  0009b	69 4d f8 a4 00
	00 00		 imul	 ecx, DWORD PTR _r$[ebp], 164
  000a2	03 4d fc	 add	 ecx, DWORD PTR _this$[ebp]
  000a5	8b 55 f8	 mov	 edx, DWORD PTR _r$[ebp]
  000a8	83 ea 01	 sub	 edx, 1
  000ab	69 c2 a4 00 00
	00		 imul	 eax, edx, 164
  000b1	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  000b4	8b 55 f4	 mov	 edx, DWORD PTR _c$[ebp]
  000b7	8b 4c 91 fc	 mov	 ecx, DWORD PTR [ecx+edx*4-4]
  000bb	8b 55 f4	 mov	 edx, DWORD PTR _c$[ebp]
  000be	03 4c 90 fc	 add	 ecx, DWORD PTR [eax+edx*4-4]
  000c2	69 45 f8 a4 00
	00 00		 imul	 eax, DWORD PTR _r$[ebp], 164
  000c9	03 45 fc	 add	 eax, DWORD PTR _this$[ebp]
  000cc	8b 55 f4	 mov	 edx, DWORD PTR _c$[ebp]
  000cf	89 0c 90	 mov	 DWORD PTR [eax+edx*4], ecx

; 25   :     };

  000d2	eb b8		 jmp	 SHORT $LN11@COMBINATIO
$LN12@COMBINATIO:

; 26   :   };

  000d4	eb 9e		 jmp	 SHORT $LN8@COMBINATIO
$LN1@COMBINATIO:

; 27   : }

  000d6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
??0COMBINATIONS@@QAE@XZ ENDP				; COMBINATIONS::COMBINATIONS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\DotBoxLib\Combinations.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Users\15485\Desktop\工程之星点格棋\DotBoxLib\Combinations.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
